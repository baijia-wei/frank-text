/*! For license information please see example.js.LICENSE.txt */
(()=>{var e={11:(e,t,n)=>{var r={"./baidu.svg":2645,"./cuowu.svg":2793,"./kj.svg":2065,"./ks.svg":8339,"./kt.svg":2563,"./qq.svg":9292,"./wechal.svg":3101,"./zhifubao.svg":8152,"./zt.svg":8366};function a(e){var t=o(e);return n(t)}function o(e){if(!n.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=o,e.exports=a,a.id=11},977:(e,t,n)=>{(e.exports=n(3645)(!1)).push([e.id,'*{margin:0;padding:0;box-sizing:border-box}*::before{box-sizing:border-box}*::after{box-sizing:border-box}ul,ol{list-style:none}h1,h2,h3,h4,h5,h6{font-weight:normal}a{text-decoration:none;color:inherit}pre{font-family:"Fira Code Medium", Consolas, monospace}body{font-size:16px;align-content:center}.site-page{background:#ffffff;min-height:100vh}.site-main{padding-top:16px}.site-header{display:flex;justify-content:space-between;align-items:center;background:#eee}.site-header .logo{padding:0 16px;display:flex;align-items:center}.site-header .logo>img{margin-right:8px}.site-header .logo>span{color:#00ADB5;font-size:32px}.site-header .git{margin-right:20px;font-size:15px}.site-aside{border-right:1px solid #EEEEEE;margin-right:16px}.site-aside .site-aside-lanzhou{padding-left:14px}.site-aside h2{padding:16px;font-size:18px}.site-aside ul{min-width:12em;font-size:14px}.site-aside ul>li a{color:#333;display:block;padding:8px 16px}.site-aside ul>li a:hover{color:#5cb2ff}.site-aside ul>li a.active{color:#5cb2ff;background:#e6f7ff}.site-footer{text-align:center;font-size:12px;color:#666;padding:16px 0;border-top:1px solid #eee}.example{padding:16px 0}.ands-head{width:600px}.ands-head .ands-lanzhou-img{display:flex}.ands-head .ands-lanzhou-img img{width:200px;height:200px}\n',""])},5314:(e,t,n)=>{(e.exports=n(3645)(!1)).push([e.id,".tabs{display:flex;background-color:#f7f9fc;justify-content:space-around;width:500px;line-height:37px;color:#000;box-sizing:border-box;height:37px}.boxsw{color:#0879fa;box-sizing:border-box;border-bottom:3px solid #0879fa}.select{text-align:center;width:100px}.tabs-content{width:500px;height:600px;background-color:cyan}.none{display:none}\n",""])},9458:(e,t,n)=>{(e.exports=n(3645)(!1)).push([e.id,".Action{position:relative}.Action .actionsheet{width:400px;display:flex;justify-content:space-between;align-items:center;padding:0.5rem 1rem;background:chartreuse}.Action .actionsheet-dialog{overflow:hidden;position:absolute;top:30px;width:400px;height:500px;display:flex;justify-content:flex-end;flex-direction:column;transition:all 0.5s ease-in-out}.Action .actionsheet-dialog .dialog-head{display:flex;flex-direction:column}.Action .actionsheet-dialog .dialog,.Action .actionsheet-dialog .dialog-qux{height:37px;text-align:center;line-height:37px;width:100%;background-color:cyan}.Action .actionsheet-dialog .dialog:nth-child(1){border-radius:10px 10px 0 0}.Action .actionsheet-dialog .dialog:hover{opacity:.5}.none{display:none}.dialog-z{transition:all 0.5s ease-in-out}\n",""])},297:(e,t,n)=>{(e.exports=n(3645)(!1)).push([e.id,'*{margin:0;padding:0;list-style:none;text-decoration:none}.luckyDraw{width:420px}.prize{font-size:30px}.lottery{width:240px;margin:30px auto;position:relative}.lottery li{width:80px;height:80px;border:1px solid #000;box-sizing:border-box;text-align:center;line-height:80px;position:absolute}.lottery li:nth-of-type(1){left:0;top:0}.lottery li:nth-of-type(2){left:80px;top:0}.lottery li:nth-of-type(3){left:160px;top:0}.lottery li:nth-of-type(4){left:160px;top:80px}.lottery li:nth-of-type(5){left:160px;top:160px}.lottery li:nth-of-type(6){left:80px;top:160px}.lottery li:nth-of-type(7){left:0;top:160px}.lottery li:nth-of-type(8){left:0;top:80px}.dox{width:80px;height:80px;border:1px solid #000;box-sizing:border-box;text-align:center;line-height:80px;position:absolute;left:80px;top:80px;cursor:pointer;background:gold}.actives:after{position:absolute;top:0;left:0;content:"";width:100%;height:100%;background:rgba(0,0,0,0.1)}\n',""])},6680:(e,t,n)=>{(e.exports=n(3645)(!1)).push([e.id,".ands-header p{margin:2em 0;font-size:15px}.ands-header-content{padding:10px;display:flex}.ands-header-content .ands-content-left,.ands-header-content .ands-content-right{min-width:480px;margin-right:1em;padding:1em 1em;border:1px solid #cccccc;border-radius:5px}.ands-content-right:hover,.ands-content-left:hover{box-shadow:0px 1px 2px 0px #999}.ands-content-left-text{font-size:14px}.ands-content-left-text p{margin-top:20px;width:370px}\n",""])},2550:(e,t,n)=>{(e.exports=n(3645)(!1)).push([e.id,".fui-button{outline:0;border:none;padding:4px 16px;line-height:22px;transition:all 250ms;cursor:pointer}.fui-button:focus{outline:none}.fui-button-normal{color:#333;border:1px solid #b3b3b3;background:white}.fui-button-red{color:#ffffff;background:red}.fui-button-important{color:white;border:1px solid #1890ff;background:#1890ff}.fui-button:active{opacity:0.5}\n",""])},2866:(e,t,n)=>{(e.exports=n(3645)(!1)).push([e.id,".choice-body{margin-top:30px;width:500px;display:flex;align-items:center;justify-content:space-between}.choice-body .choice{width:70px;height:30px;color:#009bf5;border-radius:3px;border:1px solid #009bf5;text-align:center;line-height:30px}.choice-body .active{background:#fd7522;border:1px solid #fd7522;color:#fff}\n",""])},2710:(e,t,n)=>{(e.exports=n(3645)(!1)).push([e.id,".fui-citySelect-body{overflow:hidden}.fui-citySelect-dialog{position:fixed;top:0;left:0;width:100%;height:100%;overflow:auto;background:white}.fui-citySelect-dialog>header{background:#ffca00;display:flex;justify-content:center;align-items:center;position:relative;font-size:16px;line-height:50px}.fui-citySelect-dialog>header>.icon{position:absolute;left:0}.fui-citySelect-index{display:flex;flex-wrap:wrap;border:1px solid #ddd8ce}.fui-citySelect-index>li{width:20%;text-align:center;padding:4px 0}.fui-citySelect-citySection{border-left:1px solid #edebe5;overflow:hidden}.fui-citySelect-citySection>h4{border:1px solid #edebe5;border-left:none;border-bottom:none;float:left;width:25%;line-height:80px;text-align:center;font-size:40px}.fui-citySelect-citySection>.fui-citySelect-cityName{float:left;width:25%;font-size:14px;line-height:40px;text-align:center;border:1px solid #edebe5;border-left:none;margin-bottom:-1px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}\n",""])},8582:(e,t,n)=>{(e.exports=n(3645)(!1)).push([e.id,".fui-dialog{position:fixed;background:white;min-width:20em;z-index:2;border-radius:4px;top:50%;left:50%;transform:translate(-50%, -50%)}.fui-dialog-mask{position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.5);z-index:1}.fui-dialog-header{font-size:14px;padding:8px 16px;border-bottom:1px solid grey}.fui-dialog-main{padding:8px 16px;min-height:6em}.fui-dialog-footer{padding:8px 16px;border-top:1px solid grey;display:flex;justify-content:flex-end}.fui-dialog-close{position:absolute;bottom:100%;left:100%;background:#1890ff;width:2em;height:2em;border-radius:50%;transform:translate(-50%, 50%);display:flex;justify-content:center;align-items:center;color:white}\n",""])},149:(e,t,n)=>{(e.exports=n(3645)(!1)).push([e.id,".dragpull .dragpull-title{color:#6300e6;margin-bottom:5px}.list{height:300px;margin-top:40px;border-radius:3px;list-style:none;margin:0;position:relative}.wrapper{overflow:hidden;margin:100px auto;padding:10px}.item{width:110px;color:#a300ee;border:1px solid #0371ee;border-radius:3px;position:absolute;display:flex;justify-content:center;transition:all 0.5s ease-in-out}.draggingItem{transition:scale(1.06);opacity:0.7}.luxun-list{padding:10px;text-align:center;width:400px;margin-top:40px;border-radius:3px;border:1px solid cyan}.luxun-list li{color:#a300ee;padding:5px;height:35px;margin-bottom:5px;border:1px solid #0371ee;transition:all 0.5s ease-in-out;border-radius:3px}.luxun-list li:nth-child(1){color:#00f80c}.luxun-list li:nth-child(2){color:red}.luxun-list li:nth-child(3){color:#f0d}.luxun-list li:nth-child(4){color:#f90}\n",""])},4408:(e,t,n)=>{(e.exports=n(3645)(!1)).push([e.id,".fui-form-table{border-collapse:collapse}.fui-form-label{line-height:32px}.fui-form-td{vertical-align:top;padding-top:0;padding-bottom:8px}.fui-form-tr:last-child .fui-form-td{padding-bottom:0}.fui-form-td+.fui-form-td{padding-left:16px}.fui-form-error{color:red;margin-top:4px;font-size:0.8em}\n",""])},4092:(e,t,n)=>{(e.exports=n(3645)(!1)).push([e.id,".ands-header p{margin:2em 0;font-size:15px}.ands-header-content{height:500px;padding:10px;display:flex}.ands-header-content .ands-content-left,.ands-header-content .ands-content-right{min-width:480px;margin-right:1em;padding:1em 1em;border:1px solid #cccccc;border-radius:5px}.ands-header-content .ands-content-right{overflow-y:scroll}.ands-content-right:hover,.ands-content-left:hover{box-shadow:0px 1px 2px 0px #999}.ands-content-left-text{font-size:14px}.ands-content-left-text p{margin-top:20px;width:370px}\n",""])},5706:(e,t,n)=>{(e.exports=n(3645)(!1)).push([e.id,".ands-guanwan{width:100%;height:50px;background-color:#dddddd;line-height:50px}p{margin:5px 0;font-size:14px}.critic{margin-top:20px}\n",""])},1828:(e,t,n)=>{(e.exports=n(3645)(!1)).push([e.id,".fui-icon{width:1.4em;height:1.4em}\n",""])},4229:(e,t,n)=>{(e.exports=n(3645)(!1)).push([e.id,"[class^=fui-]{box-sizing:border-box}[class^=fui-]::after,[class^=fui-]::before{box-sizing:border-box}button{box-sizing:border-box;height:32px;margin:0 4px;border-radius:4px}button:first-child{margin-left:0}button:last-child{margin-right:0}\n",""])},7953:(e,t,n)=>{(e.exports=n(3645)(!1)).push([e.id,".fui-input{border:1px solid #ddd;line-height:22px;padding:4px 8px;border-radius:4px;box-shadow:0 0 0 2px rgba(24,144,255,0);transition:box-shadow 250ms}.fui-input:focus{outline:none;border-color:#1890ff;box-shadow:0 0 0 2px rgba(24,144,255,0.5)}\n",""])},2935:(e,t,n)=>{(e.exports=n(3645)(!1)).push([e.id,".ands-header p{margin:2em 0;font-size:15px}.ands-header-content{padding:10px;display:flex}.ands-header-content .ands-content-left,.ands-header-content .ands-content-right{min-width:480px;margin-right:1em;padding:1em 1em;border:1px solid #cccccc;border-radius:5px}.ands-content-right:hover,.ands-content-left:hover{box-shadow:0px 1px 2px 0px #999}.ands-content-left-text{font-size:14px}.ands-content-left-text p{margin-top:20px;width:370px}\n",""])},9031:(e,t,n)=>{(e.exports=n(3645)(!1)).push([e.id,".x{height:40px;background:#4285f4;margin:4px 0;color:white}.y{background:#5a95f5;margin:4px 0;color:white}.z{background:#34a853;width:100px;margin:4px 0;color:white}.z+.y,.y+.z,.z+.gu-layout{margin-left:8px}\n",""])},9873:(e,t,n)=>{(e.exports=n(3645)(!1)).push([e.id,".gu-layout{display:flex;flex-direction:column}.gu-layout-content{flex-grow:1}.gu-layout .gu-layout{flex-grow:1;flex-direction:row}.gu-layout-hasAside{flex-direction:row}.gu-layout-hasAside .gu-layout{flex-direction:column}\n",""])},8124:(e,t,n)=>{(e.exports=n(3645)(!1)).push([e.id,".containers{height:100vh;overflow:scroll}.containers .items{height:30px;border:1px solid #eee;padding:6px 10px;cursor:pointer}.panel{border:1px solid red}\n",""])},4133:(e,t,n)=>{(e.exports=n(3645)(!1)).push([e.id,".xue-radio{display:inline-flex;justify-content:flex-start;align-items:flex-start;color:rgba(0,0,0,0.65);font-size:14px;line-height:22px}.xue-radio.vertical{flex-direction:column}.xue-radio .xue-option{display:inline-flex;justify-content:flex-start;align-items:center;cursor:pointer}.xue-radio .xue-option>.label-dot{width:16px;height:16px;border-radius:50%;border:1px solid;border-color:rgba(0,0,0,0.15);display:flex;justify-content:center;align-content:center;position:relative;transition:all 0.3s cubic-bezier(0.78, 0.14, 0.15, 0.86)}.xue-radio .xue-option>.label-dot::after{position:absolute;top:3px;left:3px;content:'';display:block;width:8px;height:8px;background-color:#1890ff;border-radius:50%;opacity:0;transform:scale(0);transition:all 0.3s cubic-bezier(0.78, 0.14, 0.15, 0.86)}.xue-radio .xue-option:hover>.label-dot{border-color:#1890ff}.xue-radio .xue-option.checked .label-dot{border-color:#1890ff}.xue-radio .xue-option.checked .label-dot::after{opacity:1;transform:scale(1)}.xue-radio .xue-option>.label-text{padding:0 8px;background-color:#fff;transition:all 0.3s cubic-bezier(0.78, 0.14, 0.15, 0.86)}.xue-radio .xue-option.button-style>.label-text{padding:4px 15px;border:1px solid;border-color:rgba(0,0,0,0.15)}.xue-radio .xue-option.button-style>.label-text:hover{color:#1890ff}.xue-radio .xue-option.button-style:not(:first-child)>.label-text{margin-left:-1px}.xue-radio .xue-option.button-style:first-child>.label-text{border-top-left-radius:4px;border-bottom-left-radius:4px;border-top-right-radius:0;border-bottom-right-radius:0}.xue-radio .xue-option.button-style:last-child>.label-text{border-top-left-radius:0;border-bottom-left-radius:0;border-top-right-radius:4px;border-bottom-right-radius:4px}.xue-radio .xue-option.button-style.checked>.label-text{background-color:#1890ff;color:#fff;position:relative;z-index:1;border-color:#1890ff}.xue-radio .xue-option.button-style.checked>.label-text:hover{background-color:#40a9ff;border-color:#40a9ff}.xue-radio .xue-option.button-style.vertical>.label-text{margin-left:0;min-width:120px;text-align:center}.xue-radio .xue-option.button-style.vertical:not(:first-child)>.label-text{margin-top:-1px}.xue-radio .xue-option.button-style.vertical:first-child>.label-text{border-top-left-radius:4px;border-bottom-left-radius:0;border-top-right-radius:4px;border-bottom-right-radius:0}.xue-radio .xue-option.button-style.vertical:last-child>.label-text{border-top-left-radius:0;border-bottom-left-radius:4px;border-top-right-radius:0;border-bottom-right-radius:4px}.xue-radio .xue-option.disabled>.label-dot{cursor:not-allowed;border-color:#d9d9d9;background-color:#e6e6e6}.xue-radio .xue-option.disabled>.label-dot::after{background-color:rgba(0,0,0,0.35)}.xue-radio .xue-option.disabled>.label-text{cursor:not-allowed;color:rgba(0,0,0,0.25)}.xue-radio .xue-option.disabled>.label-text:hover{color:rgba(0,0,0,0.25)}.xue-radio .xue-option.disabled.button-style.checked>.label-text{background-color:#e6e6e6;border-color:#d9d9d9}.xue-radio .xue-option.disabled.button-style.checked>.label-text:hover{color:#fff}\n",""])},2566:(e,t,n)=>{(e.exports=n(3645)(!1)).push([e.id,".fui-scroll{position:relative;overflow:hidden}.fui-scroll-inner{overflow:auto;position:absolute;top:0;bottom:0;left:0;right:0}.fui-scroll-track{width:8px;position:absolute;right:0;top:0;height:100%}.fui-scroll-bar{height:30px;background:rgba(128,128,128,0.8);position:absolute;top:0;left:0px;width:6px;border-radius:3px}\n",""])},2184:(e,t,n)=>{(e.exports=n(3645)(!1)).push([e.id,".xue-switch{width:40px;height:22px;display:inline-flex;border-color:#1890ff;border-radius:11px;background-color:rgba(0,0,0,0.25);cursor:pointer;transition:all .2s linear;padding:2px;position:relative}.xue-switch>.xue-switch-core{width:18px;height:18px;border-radius:50%;background-color:#fff;transform:translateX(0);transition:all .2s linear}.xue-switch.checked{background-color:#1890ff}.xue-switch.checked>.xue-switch-core{transform:translateX(100%)}.xue-switch.disabled{cursor:not-allowed}.xue-switch.disabled::after{content:'';display:block;position:absolute;top:0;left:0;right:0;bottom:0;border-radius:inherit;background-color:#fff;opacity:0.4}.xue-switch.small{width:32px;height:18px;padding:2px}.xue-switch.small>.xue-switch-core{width:14px;height:14px}\n",""])},6988:(e,t,n)=>{(e.exports=n(3645)(!1)).push([e.id,".tables{line-height:25px;text-align:center}.tables .table-th{width:120px}.none{visibility:hidden}.visible{visibility:visible}\n",""])},5198:(e,t,n)=>{(e.exports=n(3645)(!1)).push([e.id,".ands-tree-level-1{margin-left:0px}.ands-tree-level-2{margin-left:1em}.ands-tree-level-3{margin-left:1em}.ands-tree-level-4{margin-left:1em}.ands-tree-level-5{margin-left:1em}.ands-tree-level-6{margin-left:1em}\n",""])},3645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n,r=e[1]||"",a=e[3];if(!a)return r;if(t&&"function"==typeof btoa){var o=(n=a,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n))))+" */"),i=a.sources.map((function(e){return"/*# sourceURL="+a.sourceRoot+e+" */"}));return[r].concat(i).concat([o]).join("\n")}return[r].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n})).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},a=0;a<this.length;a++){var o=this[a][0];null!=o&&(r[o]=!0)}for(a=0;a<e.length;a++){var i=e[a];null!=i[0]&&r[i[0]]||(n&&!i[2]?i[2]=n:n&&(i[2]="("+i[2]+") and ("+n+")"),t.push(i))}},t}},9793:(e,t,n)=>{e.exports=n.p+"908b87c4a9ad4e383e0181609f63d2cb.png"},6442:(e,t,n)=>{e.exports=n.p+"d5ab98cd90c360dd3bdbe56d4d3d4b62.png"},8679:(e,t,n)=>{"use strict";var r=n(9864),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},o={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function u(e){return r.isMemo(e)?i:l[e.$$typeof]||a}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=i;var s=Object.defineProperty,c=Object.getOwnPropertyNames,d=Object.getOwnPropertySymbols,f=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,m=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(m){var a=p(n);a&&a!==m&&e(t,a,r)}var i=c(n);d&&(i=i.concat(d(n)));for(var l=u(t),h=u(n),g=0;g<i.length;++g){var v=i[g];if(!(o[v]||r&&r[v]||h&&h[v]||l&&l[v])){var y=f(n,v);try{s(t,v,y)}catch(e){}}}}return t}},7418:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,o){for(var i,l,u=a(e),s=1;s<arguments.length;s++){for(var c in i=Object(arguments[s]))n.call(i,c)&&(u[c]=i[c]);if(t){l=t(i);for(var d=0;d<l.length;d++)r.call(i,l[d])&&(u[l[d]]=i[l[d]])}}return u}},2703:(e,t,n)=>{"use strict";var r=n(414);function a(){}function o(){}o.resetWarningCache=a,e.exports=function(){function e(e,t,n,a,o,i){if(i!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:o,resetWarningCache:a};return n.PropTypes=n,n}},5697:(e,t,n)=>{e.exports=n(2703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},7132:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r="import React from 'react';\r\nimport Buttonss from './button'\r\n\r\nconst ButtonAssembly3: React.FunctionComponent = () => {\r\n    return (\r\n        <div>\r\n                <Buttonss className=\"baijiawei\" disabled>\r\n                    Loading..\r\n                </Buttonss>\r\n\r\n        </div>\r\n    );\r\n};\r\nexport default ButtonAssembly3;"},3942:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r="import React from 'react';\r\nimport Buttonss from './button'\r\nconst ButtonAssembly1: React.FunctionComponent = () => {\r\n    return (\r\n        <div >\r\n            <div >\r\n                <Buttonss>默认按钮</Buttonss>\r\n                <Buttonss level=\"important\">蓝色按钮</Buttonss>\r\n                <Buttonss level=\"red\">红色</Buttonss>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default ButtonAssembly1;"},5790:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r="import React from 'react';\r\n\r\n\r\nconst ButtonAssembly2: React.FunctionComponent = () => {\r\n    return (\r\n        <div className=\"ands-header\">\r\n\r\n        </div>\r\n    );\r\n};\r\nexport default ButtonAssembly2;"},8215:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r="import React, {useState ,Fragment} from \"react\";\r\nimport Form,{FormValue} from \"./form\";\r\nimport Validator, {noError} from './validator';\r\nimport Buttonss from '../button/button';\r\n\r\n\r\nconst usernames = ['frank', 'jack', 'frankfrank', 'alice', 'bob'];\r\nconst checkUserName = (username: string, succeed: Function, fail: () => void) => {\r\n    setTimeout(() => {\r\n        console.log('我现在知道用户名是否存在');\r\n        if (usernames.indexOf(username) >= 0) {\r\n            fail();\r\n        } else {\r\n            succeed();\r\n        }\r\n    }, 2000);\r\n};\r\n\r\nconst FormExample: React.FunctionComponent = () =>{\r\n    const [formData, setFormData] = useState<FormValue>({\r\n        username: '',\r\n        password: ''\r\n    });\r\n    const [fields]=useState([\r\n\r\n        {name: 'username', label: '头像', input: {type: 'text'}},\r\n        {name: 'password', label: '密码', input: {type: 'password'}},\r\n    ]);\r\n    const [errors, setErrors] = useState({});\r\n    const validator = (username: string) => {\r\n        return new Promise<string>((resolve, reject) => {\r\n            checkUserName(username, resolve, () => reject('unique'));\r\n        });\r\n    };\r\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        const rules = [\r\n            {key: 'username', required: true},\r\n            {key: 'username', minLength: 8, maxLength: 16},\r\n            {key: 'username', validator},\r\n            {key: 'username', validator},\r\n            {key: 'username', pattern: /^[A-Za-z0-9]+$/},\r\n            {key: 'password', required: true},\r\n            {key: 'password', validator},\r\n            {key: 'password', validator},\r\n        ];\r\n        Validator(formData, rules, (errors) => {\r\n            console.log(errors);\r\n            setErrors(errors);\r\n            if (noError(errors)) {\r\n              \r\n            }\r\n        });\r\n    };\r\n    const transformError = (message: string) => {\r\n        const map: any = {\r\n            unique: 'username is taken',\r\n            required: 'required',\r\n            minLength: 'too short',\r\n            maxLength: 'too long',\r\n        };\r\n        return map[message];\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Form value={formData}\r\n                  fields={fields}\r\n                  buttons={\r\n                      <Fragment>\r\n                          <Buttonss type=\"submit\" level=\"important\">提交</Buttonss>\r\n                          <Buttonss>返回</Buttonss>\r\n                      </Fragment>\r\n                  }\r\n                  errors={errors}\r\n                  transformError={transformError}\r\n                  onChange={(newValue) => setFormData(newValue)}\r\n                  onSubmit={onSubmit}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormExample;"},8272:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r='import React from \'react\';\r\nimport Icon from "./icon";\r\n\r\n\r\nconst IconExample1: React.FunctionComponent = () => {\r\n    return (\r\n        <div>\r\n            <Icon name="qq"></Icon>\r\n            <Icon name="baidu"></Icon>\r\n            <Icon name="wechal"></Icon>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IconExample1;'},1864:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r="import React from 'react';\r\n\r\nconst IconExample2: React.FunctionComponent = () => {\r\n    return (\r\n        <div>\r\n            example 2\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IconExample2;"},2251:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r='import React, {useState} from "react";\r\nimport Input from "./input";\r\nconst InputExample: React.FunctionComponent = () => {\r\n    const [value, setvalue] = useState(\'你好\')\r\n    return (\r\n        <div>\r\n            <Input value={value} onChange={\r\n                (event: { target: { value: React.SetStateAction<string>; }; }) => {\r\n                setvalue(event.target.value)\r\n            }}/>\r\n            <div>{value}</div>\r\n        </div>\r\n    )\r\n}\r\nexport default InputExample;'},4448:(e,t,n)=>{"use strict";var r=n(7294),a=n(7418),o=n(4142);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(i(227));var l=new Set,u={};function s(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(u[e]=t,e=0;e<t.length;e++)l.add(t[e])}var d=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),f=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,m={},h={};function g(e,t,n,r,a,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=i}var v={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){v[e]=new g(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];v[t]=new g(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){v[e]=new g(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){v[e]=new g(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){v[e]=new g(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){v[e]=new g(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){v[e]=new g(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){v[e]=new g(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){v[e]=new g(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function E(e,t,n,r){var a=v.hasOwnProperty(t)?v[t]:null;(null!==a?0===a.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!p.call(h,e)||!p.call(m,e)&&(f.test(e)?h[e]=!0:(m[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);v[t]=new g(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);v[t]=new g(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);v[t]=new g(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){v[e]=new g(e,1,!1,e.toLowerCase(),null,!1,!1)})),v.xlinkHref=new g("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){v[e]=new g(e,1,!1,e.toLowerCase(),null,!0,!0)}));var x=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=60103,k=60106,S=60107,N=60108,A=60114,C=60109,_=60110,O=60112,I=60113,T=60120,L=60115,R=60116,P=60121,F=60128,U=60129,D=60130,M=60131;if("function"==typeof Symbol&&Symbol.for){var z=Symbol.for;w=z("react.element"),k=z("react.portal"),S=z("react.fragment"),N=z("react.strict_mode"),A=z("react.profiler"),C=z("react.provider"),_=z("react.context"),O=z("react.forward_ref"),I=z("react.suspense"),T=z("react.suspense_list"),L=z("react.memo"),R=z("react.lazy"),P=z("react.block"),z("react.scope"),F=z("react.opaque.id"),U=z("react.debug_trace_mode"),D=z("react.offscreen"),M=z("react.legacy_hidden")}var B,j="function"==typeof Symbol&&Symbol.iterator;function $(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=j&&e[j]||e["@@iterator"])?e:null}function G(e){if(void 0===B)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);B=t&&t[1]||""}return"\n"+B+e}var H=!1;function V(e,t){if(!e||H)return"";H=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var a=e.stack.split("\n"),o=r.stack.split("\n"),i=a.length-1,l=o.length-1;1<=i&&0<=l&&a[i]!==o[l];)l--;for(;1<=i&&0<=l;i--,l--)if(a[i]!==o[l]){if(1!==i||1!==l)do{if(i--,0>--l||a[i]!==o[l])return"\n"+a[i].replace(" at new "," at ")}while(1<=i&&0<=l);break}}}finally{H=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?G(e):""}function q(e){switch(e.tag){case 5:return G(e.type);case 16:return G("Lazy");case 13:return G("Suspense");case 19:return G("SuspenseList");case 0:case 2:case 15:return V(e.type,!1);case 11:return V(e.type.render,!1);case 22:return V(e.type._render,!1);case 1:return V(e.type,!0);default:return""}}function W(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case S:return"Fragment";case k:return"Portal";case A:return"Profiler";case N:return"StrictMode";case I:return"Suspense";case T:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case _:return(e.displayName||"Context")+".Consumer";case C:return(e._context.displayName||"Context")+".Provider";case O:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case L:return W(e.type);case P:return W(e._render);case R:t=e._payload,e=e._init;try{return W(e(t))}catch(e){}}return null}function Z(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Y(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function K(e){e._valueTracker||(e._valueTracker=function(e){var t=Y(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function X(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Y(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Q(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function J(e,t){var n=t.checked;return a({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=Z(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&E(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=Z(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ae(e,t.type,n):t.hasOwnProperty("defaultValue")&&ae(e,t.type,Z(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ae(e,t,n){"number"===t&&Q(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function oe(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function ie(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+Z(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function le(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(i(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(i(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:Z(n)}}function se(e,t){var n=Z(t.value),r=Z(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ce(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var de="http://www.w3.org/1999/xhtml";function fe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?fe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var me,he,ge=(he=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((me=me||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=me.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return he(e,t)}))}:he);function ve(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ye={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},be=["Webkit","ms","Moz","O"];function Ee(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ye.hasOwnProperty(e)&&ye[e]?(""+t).trim():t+"px"}function xe(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=Ee(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(ye).forEach((function(e){be.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ye[t]=ye[e]}))}));var we=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ke(e,t){if(t){if(we[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(i(62))}}function Se(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Ne(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ae=null,Ce=null,_e=null;function Oe(e){if(e=na(e)){if("function"!=typeof Ae)throw Error(i(280));var t=e.stateNode;t&&(t=aa(t),Ae(e.stateNode,e.type,t))}}function Ie(e){Ce?_e?_e.push(e):_e=[e]:Ce=e}function Te(){if(Ce){var e=Ce,t=_e;if(_e=Ce=null,Oe(e),t)for(e=0;e<t.length;e++)Oe(t[e])}}function Le(e,t){return e(t)}function Re(e,t,n,r,a){return e(t,n,r,a)}function Pe(){}var Fe=Le,Ue=!1,De=!1;function Me(){null===Ce&&null===_e||(Pe(),Te())}function ze(e,t){var n=e.stateNode;if(null===n)return null;var r=aa(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(i(231,t,typeof n));return n}var Be=!1;if(d)try{var je={};Object.defineProperty(je,"passive",{get:function(){Be=!0}}),window.addEventListener("test",je,je),window.removeEventListener("test",je,je)}catch(he){Be=!1}function $e(e,t,n,r,a,o,i,l,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}var Ge=!1,He=null,Ve=!1,qe=null,We={onError:function(e){Ge=!0,He=e}};function Ze(e,t,n,r,a,o,i,l,u){Ge=!1,He=null,$e.apply(We,arguments)}function Ye(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ke(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Xe(e){if(Ye(e)!==e)throw Error(i(188))}function Qe(e){if(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ye(e)))throw Error(i(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(r=a.return)){n=r;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===n)return Xe(a),e;if(o===r)return Xe(a),t;o=o.sibling}throw Error(i(188))}if(n.return!==r.return)n=a,r=o;else{for(var l=!1,u=a.child;u;){if(u===n){l=!0,n=a,r=o;break}if(u===r){l=!0,r=a,n=o;break}u=u.sibling}if(!l){for(u=o.child;u;){if(u===n){l=!0,n=o,r=a;break}if(u===r){l=!0,r=o,n=a;break}u=u.sibling}if(!l)throw Error(i(189))}}if(n.alternate!==r)throw Error(i(190))}if(3!==n.tag)throw Error(i(188));return n.stateNode.current===n?e:t}(e),!e)return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function Je(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var et,tt,nt,rt,at=!1,ot=[],it=null,lt=null,ut=null,st=new Map,ct=new Map,dt=[],ft="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function pt(e,t,n,r,a){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:a,targetContainers:[r]}}function mt(e,t){switch(e){case"focusin":case"focusout":it=null;break;case"dragenter":case"dragleave":lt=null;break;case"mouseover":case"mouseout":ut=null;break;case"pointerover":case"pointerout":st.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":ct.delete(t.pointerId)}}function ht(e,t,n,r,a,o){return null===e||e.nativeEvent!==o?(e=pt(t,n,r,a,o),null!==t&&null!==(t=na(t))&&tt(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function gt(e){var t=ta(e.target);if(null!==t){var n=Ye(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ke(n)))return e.blockedOn=t,void rt(e.lanePriority,(function(){o.unstable_runWithPriority(e.priority,(function(){nt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function vt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Qt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=na(n))&&tt(t),e.blockedOn=n,!1;t.shift()}return!0}function yt(e,t,n){vt(e)&&n.delete(t)}function bt(){for(at=!1;0<ot.length;){var e=ot[0];if(null!==e.blockedOn){null!==(e=na(e.blockedOn))&&et(e);break}for(var t=e.targetContainers;0<t.length;){var n=Qt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&ot.shift()}null!==it&&vt(it)&&(it=null),null!==lt&&vt(lt)&&(lt=null),null!==ut&&vt(ut)&&(ut=null),st.forEach(yt),ct.forEach(yt)}function Et(e,t){e.blockedOn===t&&(e.blockedOn=null,at||(at=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,bt)))}function xt(e){function t(t){return Et(t,e)}if(0<ot.length){Et(ot[0],e);for(var n=1;n<ot.length;n++){var r=ot[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==it&&Et(it,e),null!==lt&&Et(lt,e),null!==ut&&Et(ut,e),st.forEach(t),ct.forEach(t),n=0;n<dt.length;n++)(r=dt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<dt.length&&null===(n=dt[0]).blockedOn;)gt(n),null===n.blockedOn&&dt.shift()}function wt(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var kt={animationend:wt("Animation","AnimationEnd"),animationiteration:wt("Animation","AnimationIteration"),animationstart:wt("Animation","AnimationStart"),transitionend:wt("Transition","TransitionEnd")},St={},Nt={};function At(e){if(St[e])return St[e];if(!kt[e])return e;var t,n=kt[e];for(t in n)if(n.hasOwnProperty(t)&&t in Nt)return St[e]=n[t];return e}d&&(Nt=document.createElement("div").style,"AnimationEvent"in window||(delete kt.animationend.animation,delete kt.animationiteration.animation,delete kt.animationstart.animation),"TransitionEvent"in window||delete kt.transitionend.transition);var Ct=At("animationend"),_t=At("animationiteration"),Ot=At("animationstart"),It=At("transitionend"),Tt=new Map,Lt=new Map,Rt=["abort","abort",Ct,"animationEnd",_t,"animationIteration",Ot,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",It,"transitionEnd","waiting","waiting"];function Pt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],a=e[n+1];a="on"+(a[0].toUpperCase()+a.slice(1)),Lt.set(r,t),Tt.set(r,a),s(a,[r])}}(0,o.unstable_now)();var Ft=8;function Ut(e){if(0!=(1&e))return Ft=15,1;if(0!=(2&e))return Ft=14,2;if(0!=(4&e))return Ft=13,4;var t=24&e;return 0!==t?(Ft=12,t):0!=(32&e)?(Ft=11,32):0!=(t=192&e)?(Ft=10,t):0!=(256&e)?(Ft=9,256):0!=(t=3584&e)?(Ft=8,t):0!=(4096&e)?(Ft=7,4096):0!=(t=4186112&e)?(Ft=6,t):0!=(t=62914560&e)?(Ft=5,t):67108864&e?(Ft=4,67108864):0!=(134217728&e)?(Ft=3,134217728):0!=(t=805306368&e)?(Ft=2,t):0!=(1073741824&e)?(Ft=1,1073741824):(Ft=8,e)}function Dt(e,t){var n=e.pendingLanes;if(0===n)return Ft=0;var r=0,a=0,o=e.expiredLanes,i=e.suspendedLanes,l=e.pingedLanes;if(0!==o)r=o,a=Ft=15;else if(0!=(o=134217727&n)){var u=o&~i;0!==u?(r=Ut(u),a=Ft):0!=(l&=o)&&(r=Ut(l),a=Ft)}else 0!=(o=n&~i)?(r=Ut(o),a=Ft):0!==l&&(r=Ut(l),a=Ft);if(0===r)return 0;if(r=n&((0>(r=31-Gt(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&i)){if(Ut(t),a<=Ft)return t;Ft=a}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-Gt(t)),r|=e[n],t&=~a;return r}function Mt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function zt(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Bt(24&~t))?zt(10,t):e;case 10:return 0===(e=Bt(192&~t))?zt(8,t):e;case 8:return 0===(e=Bt(3584&~t))&&0===(e=Bt(4186112&~t))&&(e=512),e;case 2:return 0===(t=Bt(805306368&~t))&&(t=268435456),t}throw Error(i(358,e))}function Bt(e){return e&-e}function jt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function $t(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-Gt(t)]=n}var Gt=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Ht(e)/Vt|0)|0},Ht=Math.log,Vt=Math.LN2,qt=o.unstable_UserBlockingPriority,Wt=o.unstable_runWithPriority,Zt=!0;function Yt(e,t,n,r){Ue||Pe();var a=Xt,o=Ue;Ue=!0;try{Re(a,e,t,n,r)}finally{(Ue=o)||Me()}}function Kt(e,t,n,r){Wt(qt,Xt.bind(null,e,t,n,r))}function Xt(e,t,n,r){var a;if(Zt)if((a=0==(4&t))&&0<ot.length&&-1<ft.indexOf(e))e=pt(null,e,t,n,r),ot.push(e);else{var o=Qt(e,t,n,r);if(null===o)a&&mt(e,r);else{if(a){if(-1<ft.indexOf(e))return e=pt(o,e,t,n,r),void ot.push(e);if(function(e,t,n,r,a){switch(t){case"focusin":return it=ht(it,e,t,n,r,a),!0;case"dragenter":return lt=ht(lt,e,t,n,r,a),!0;case"mouseover":return ut=ht(ut,e,t,n,r,a),!0;case"pointerover":var o=a.pointerId;return st.set(o,ht(st.get(o)||null,e,t,n,r,a)),!0;case"gotpointercapture":return o=a.pointerId,ct.set(o,ht(ct.get(o)||null,e,t,n,r,a)),!0}return!1}(o,e,t,n,r))return;mt(e,r)}Pr(e,t,r,null,n)}}}function Qt(e,t,n,r){var a=Ne(r);if(null!==(a=ta(a))){var o=Ye(a);if(null===o)a=null;else{var i=o.tag;if(13===i){if(null!==(a=Ke(o)))return a;a=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;a=null}else o!==a&&(a=null)}}return Pr(e,t,r,a,n),null}var Jt=null,en=null,tn=null;function nn(){if(tn)return tn;var e,t,n=en,r=n.length,a="value"in Jt?Jt.value:Jt.textContent,o=a.length;for(e=0;e<r&&n[e]===a[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===a[o-t];t++);return tn=a.slice(e,1<t?1-t:void 0)}function rn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function an(){return!0}function on(){return!1}function ln(e){function t(t,n,r,a,o){for(var i in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(a):a[i]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?an:on,this.isPropagationStopped=on,this}return a(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=an)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=an)},persist:function(){},isPersistent:an}),t}var un,sn,cn,dn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},fn=ln(dn),pn=a({},dn,{view:0,detail:0}),mn=ln(pn),hn=a({},pn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Cn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==cn&&(cn&&"mousemove"===e.type?(un=e.screenX-cn.screenX,sn=e.screenY-cn.screenY):sn=un=0,cn=e),un)},movementY:function(e){return"movementY"in e?e.movementY:sn}}),gn=ln(hn),vn=ln(a({},hn,{dataTransfer:0})),yn=ln(a({},pn,{relatedTarget:0})),bn=ln(a({},dn,{animationName:0,elapsedTime:0,pseudoElement:0})),En=a({},dn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),xn=ln(En),wn=ln(a({},dn,{data:0})),kn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Nn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function An(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Nn[e])&&!!t[e]}function Cn(){return An}var _n=a({},pn,{key:function(e){if(e.key){var t=kn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=rn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Sn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Cn,charCode:function(e){return"keypress"===e.type?rn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?rn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),On=ln(_n),In=ln(a({},hn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Tn=ln(a({},pn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Cn})),Ln=ln(a({},dn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Rn=a({},hn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Pn=ln(Rn),Fn=[9,13,27,32],Un=d&&"CompositionEvent"in window,Dn=null;d&&"documentMode"in document&&(Dn=document.documentMode);var Mn=d&&"TextEvent"in window&&!Dn,zn=d&&(!Un||Dn&&8<Dn&&11>=Dn),Bn=String.fromCharCode(32),jn=!1;function $n(e,t){switch(e){case"keyup":return-1!==Fn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Gn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Hn=!1,Vn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function qn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Vn[e.type]:"textarea"===t}function Wn(e,t,n,r){Ie(r),0<(t=Ur(t,"onChange")).length&&(n=new fn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Zn=null,Yn=null;function Kn(e){_r(e,0)}function Xn(e){if(X(ra(e)))return e}function Qn(e,t){if("change"===e)return t}var Jn=!1;if(d){var er;if(d){var tr="oninput"in document;if(!tr){var nr=document.createElement("div");nr.setAttribute("oninput","return;"),tr="function"==typeof nr.oninput}er=tr}else er=!1;Jn=er&&(!document.documentMode||9<document.documentMode)}function rr(){Zn&&(Zn.detachEvent("onpropertychange",ar),Yn=Zn=null)}function ar(e){if("value"===e.propertyName&&Xn(Yn)){var t=[];if(Wn(t,Yn,e,Ne(e)),e=Kn,Ue)e(t);else{Ue=!0;try{Le(e,t)}finally{Ue=!1,Me()}}}}function or(e,t,n){"focusin"===e?(rr(),Yn=n,(Zn=t).attachEvent("onpropertychange",ar)):"focusout"===e&&rr()}function ir(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Xn(Yn)}function lr(e,t){if("click"===e)return Xn(t)}function ur(e,t){if("input"===e||"change"===e)return Xn(t)}var sr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},cr=Object.prototype.hasOwnProperty;function dr(e,t){if(sr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!cr.call(t,n[r])||!sr(e[n[r]],t[n[r]]))return!1;return!0}function fr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function pr(e,t){var n,r=fr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=fr(r)}}function mr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?mr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function hr(){for(var e=window,t=Q();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=Q((e=t.contentWindow).document)}return t}function gr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var vr=d&&"documentMode"in document&&11>=document.documentMode,yr=null,br=null,Er=null,xr=!1;function wr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;xr||null==yr||yr!==Q(r)||(r="selectionStart"in(r=yr)&&gr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},Er&&dr(Er,r)||(Er=r,0<(r=Ur(br,"onSelect")).length&&(t=new fn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=yr)))}Pt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Pt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Pt(Rt,2);for(var kr="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Sr=0;Sr<kr.length;Sr++)Lt.set(kr[Sr],0);c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Nr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ar=new Set("cancel close invalid load scroll toggle".split(" ").concat(Nr));function Cr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,o,l,u,s){if(Ze.apply(this,arguments),Ge){if(!Ge)throw Error(i(198));var c=He;Ge=!1,He=null,Ve||(Ve=!0,qe=c)}}(r,t,void 0,e),e.currentTarget=null}function _r(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var o=void 0;if(t)for(var i=r.length-1;0<=i;i--){var l=r[i],u=l.instance,s=l.currentTarget;if(l=l.listener,u!==o&&a.isPropagationStopped())break e;Cr(a,l,s),o=u}else for(i=0;i<r.length;i++){if(u=(l=r[i]).instance,s=l.currentTarget,l=l.listener,u!==o&&a.isPropagationStopped())break e;Cr(a,l,s),o=u}}}if(Ve)throw e=qe,Ve=!1,qe=null,e}function Or(e,t){var n=oa(t),r=e+"__bubble";n.has(r)||(Rr(t,e,2,!1),n.add(r))}var Ir="_reactListening"+Math.random().toString(36).slice(2);function Tr(e){e[Ir]||(e[Ir]=!0,l.forEach((function(t){Ar.has(t)||Lr(t,!1,e,null),Lr(t,!0,e,null)})))}function Lr(e,t,n,r){var a=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,o=n;if("selectionchange"===e&&9!==n.nodeType&&(o=n.ownerDocument),null!==r&&!t&&Ar.has(e)){if("scroll"!==e)return;a|=2,o=r}var i=oa(o),l=e+"__"+(t?"capture":"bubble");i.has(l)||(t&&(a|=4),Rr(o,e,a,t),i.add(l))}function Rr(e,t,n,r){var a=Lt.get(t);switch(void 0===a?2:a){case 0:a=Yt;break;case 1:a=Kt;break;default:a=Xt}n=a.bind(null,t,n,e),a=void 0,!Be||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Pr(e,t,n,r,a){var o=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var l=r.stateNode.containerInfo;if(l===a||8===l.nodeType&&l.parentNode===a)break;if(4===i)for(i=r.return;null!==i;){var u=i.tag;if((3===u||4===u)&&((u=i.stateNode.containerInfo)===a||8===u.nodeType&&u.parentNode===a))return;i=i.return}for(;null!==l;){if(null===(i=ta(l)))return;if(5===(u=i.tag)||6===u){r=o=i;continue e}l=l.parentNode}}r=r.return}!function(e,t,n){if(De)return e();De=!0;try{Fe(e,t,n)}finally{De=!1,Me()}}((function(){var r=o,a=Ne(n),i=[];e:{var l=Tt.get(e);if(void 0!==l){var u=fn,s=e;switch(e){case"keypress":if(0===rn(n))break e;case"keydown":case"keyup":u=On;break;case"focusin":s="focus",u=yn;break;case"focusout":s="blur",u=yn;break;case"beforeblur":case"afterblur":u=yn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=gn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=vn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Tn;break;case Ct:case _t:case Ot:u=bn;break;case It:u=Ln;break;case"scroll":u=mn;break;case"wheel":u=Pn;break;case"copy":case"cut":case"paste":u=xn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=In}var c=0!=(4&t),d=!c&&"scroll"===e,f=c?null!==l?l+"Capture":null:l;c=[];for(var p,m=r;null!==m;){var h=(p=m).stateNode;if(5===p.tag&&null!==h&&(p=h,null!==f&&null!=(h=ze(m,f))&&c.push(Fr(m,h,p))),d)break;m=m.return}0<c.length&&(l=new u(l,s,null,n,a),i.push({event:l,listeners:c}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(s=n.relatedTarget||n.fromElement)||!ta(s)&&!s[Jr])&&(u||l)&&(l=a.window===a?a:(l=a.ownerDocument)?l.defaultView||l.parentWindow:window,u?(u=r,null!==(s=(s=n.relatedTarget||n.toElement)?ta(s):null)&&(s!==(d=Ye(s))||5!==s.tag&&6!==s.tag)&&(s=null)):(u=null,s=r),u!==s)){if(c=gn,h="onMouseLeave",f="onMouseEnter",m="mouse","pointerout"!==e&&"pointerover"!==e||(c=In,h="onPointerLeave",f="onPointerEnter",m="pointer"),d=null==u?l:ra(u),p=null==s?l:ra(s),(l=new c(h,m+"leave",u,n,a)).target=d,l.relatedTarget=p,h=null,ta(a)===r&&((c=new c(f,m+"enter",s,n,a)).target=p,c.relatedTarget=d,h=c),d=h,u&&s)e:{for(f=s,m=0,p=c=u;p;p=Dr(p))m++;for(p=0,h=f;h;h=Dr(h))p++;for(;0<m-p;)c=Dr(c),m--;for(;0<p-m;)f=Dr(f),p--;for(;m--;){if(c===f||null!==f&&c===f.alternate)break e;c=Dr(c),f=Dr(f)}c=null}else c=null;null!==u&&Mr(i,l,u,c,!1),null!==s&&null!==d&&Mr(i,d,s,c,!0)}if("select"===(u=(l=r?ra(r):window).nodeName&&l.nodeName.toLowerCase())||"input"===u&&"file"===l.type)var g=Qn;else if(qn(l))if(Jn)g=ur;else{g=ir;var v=or}else(u=l.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(g=lr);switch(g&&(g=g(e,r))?Wn(i,g,n,a):(v&&v(e,l,r),"focusout"===e&&(v=l._wrapperState)&&v.controlled&&"number"===l.type&&ae(l,"number",l.value)),v=r?ra(r):window,e){case"focusin":(qn(v)||"true"===v.contentEditable)&&(yr=v,br=r,Er=null);break;case"focusout":Er=br=yr=null;break;case"mousedown":xr=!0;break;case"contextmenu":case"mouseup":case"dragend":xr=!1,wr(i,n,a);break;case"selectionchange":if(vr)break;case"keydown":case"keyup":wr(i,n,a)}var y;if(Un)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Hn?$n(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(zn&&"ko"!==n.locale&&(Hn||"onCompositionStart"!==b?"onCompositionEnd"===b&&Hn&&(y=nn()):(en="value"in(Jt=a)?Jt.value:Jt.textContent,Hn=!0)),0<(v=Ur(r,b)).length&&(b=new wn(b,e,null,n,a),i.push({event:b,listeners:v}),(y||null!==(y=Gn(n)))&&(b.data=y))),(y=Mn?function(e,t){switch(e){case"compositionend":return Gn(t);case"keypress":return 32!==t.which?null:(jn=!0,Bn);case"textInput":return(e=t.data)===Bn&&jn?null:e;default:return null}}(e,n):function(e,t){if(Hn)return"compositionend"===e||!Un&&$n(e,t)?(e=nn(),tn=en=Jt=null,Hn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return zn&&"ko"!==t.locale?null:t.data}}(e,n))&&0<(r=Ur(r,"onBeforeInput")).length&&(a=new wn("onBeforeInput","beforeinput",null,n,a),i.push({event:a,listeners:r}),a.data=y)}_r(i,t)}))}function Fr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Ur(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,o=a.stateNode;5===a.tag&&null!==o&&(a=o,null!=(o=ze(e,n))&&r.unshift(Fr(e,o,a)),null!=(o=ze(e,t))&&r.push(Fr(e,o,a))),e=e.return}return r}function Dr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Mr(e,t,n,r,a){for(var o=t._reactName,i=[];null!==n&&n!==r;){var l=n,u=l.alternate,s=l.stateNode;if(null!==u&&u===r)break;5===l.tag&&null!==s&&(l=s,a?null!=(u=ze(n,o))&&i.unshift(Fr(n,u,l)):a||null!=(u=ze(n,o))&&i.push(Fr(n,u,l))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}function zr(){}var Br=null,jr=null;function $r(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Gr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Hr="function"==typeof setTimeout?setTimeout:void 0,Vr="function"==typeof clearTimeout?clearTimeout:void 0;function qr(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Wr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Zr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Yr=0,Kr=Math.random().toString(36).slice(2),Xr="__reactFiber$"+Kr,Qr="__reactProps$"+Kr,Jr="__reactContainer$"+Kr,ea="__reactEvents$"+Kr;function ta(e){var t=e[Xr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Jr]||n[Xr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Zr(e);null!==e;){if(n=e[Xr])return n;e=Zr(e)}return t}n=(e=n).parentNode}return null}function na(e){return!(e=e[Xr]||e[Jr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ra(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function aa(e){return e[Qr]||null}function oa(e){var t=e[ea];return void 0===t&&(t=e[ea]=new Set),t}var ia=[],la=-1;function ua(e){return{current:e}}function sa(e){0>la||(e.current=ia[la],ia[la]=null,la--)}function ca(e,t){la++,ia[la]=e.current,e.current=t}var da={},fa=ua(da),pa=ua(!1),ma=da;function ha(e,t){var n=e.type.contextTypes;if(!n)return da;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in n)o[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function ga(e){return null!=e.childContextTypes}function va(){sa(pa),sa(fa)}function ya(e,t,n){if(fa.current!==da)throw Error(i(168));ca(fa,t),ca(pa,n)}function ba(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var o in r=r.getChildContext())if(!(o in e))throw Error(i(108,W(t)||"Unknown",o));return a({},n,r)}function Ea(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||da,ma=fa.current,ca(fa,e),ca(pa,pa.current),!0}function xa(e,t,n){var r=e.stateNode;if(!r)throw Error(i(169));n?(e=ba(e,t,ma),r.__reactInternalMemoizedMergedChildContext=e,sa(pa),sa(fa),ca(fa,e)):sa(pa),ca(pa,n)}var wa=null,ka=null,Sa=o.unstable_runWithPriority,Na=o.unstable_scheduleCallback,Aa=o.unstable_cancelCallback,Ca=o.unstable_shouldYield,_a=o.unstable_requestPaint,Oa=o.unstable_now,Ia=o.unstable_getCurrentPriorityLevel,Ta=o.unstable_ImmediatePriority,La=o.unstable_UserBlockingPriority,Ra=o.unstable_NormalPriority,Pa=o.unstable_LowPriority,Fa=o.unstable_IdlePriority,Ua={},Da=void 0!==_a?_a:function(){},Ma=null,za=null,Ba=!1,ja=Oa(),$a=1e4>ja?Oa:function(){return Oa()-ja};function Ga(){switch(Ia()){case Ta:return 99;case La:return 98;case Ra:return 97;case Pa:return 96;case Fa:return 95;default:throw Error(i(332))}}function Ha(e){switch(e){case 99:return Ta;case 98:return La;case 97:return Ra;case 96:return Pa;case 95:return Fa;default:throw Error(i(332))}}function Va(e,t){return e=Ha(e),Sa(e,t)}function qa(e,t,n){return e=Ha(e),Na(e,t,n)}function Wa(){if(null!==za){var e=za;za=null,Aa(e)}Za()}function Za(){if(!Ba&&null!==Ma){Ba=!0;var e=0;try{var t=Ma;Va(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Ma=null}catch(t){throw null!==Ma&&(Ma=Ma.slice(e+1)),Na(Ta,Wa),t}finally{Ba=!1}}}var Ya=x.ReactCurrentBatchConfig;function Ka(e,t){if(e&&e.defaultProps){for(var n in t=a({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Xa=ua(null),Qa=null,Ja=null,eo=null;function to(){eo=Ja=Qa=null}function no(e){var t=Xa.current;sa(Xa),e.type._context._currentValue=t}function ro(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function ao(e,t){Qa=e,eo=Ja=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Ui=!0),e.firstContext=null)}function oo(e,t){if(eo!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(eo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Ja){if(null===Qa)throw Error(i(308));Ja=t,Qa.dependencies={lanes:0,firstContext:t,responders:null}}else Ja=Ja.next=t;return e._currentValue}var io=!1;function lo(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function uo(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function so(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function co(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function fo(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,o=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===o?a=o=i:o=o.next=i,n=n.next}while(null!==n);null===o?a=o=t:o=o.next=t}else a=o=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function po(e,t,n,r){var o=e.updateQueue;io=!1;var i=o.firstBaseUpdate,l=o.lastBaseUpdate,u=o.shared.pending;if(null!==u){o.shared.pending=null;var s=u,c=s.next;s.next=null,null===l?i=c:l.next=c,l=s;var d=e.alternate;if(null!==d){var f=(d=d.updateQueue).lastBaseUpdate;f!==l&&(null===f?d.firstBaseUpdate=c:f.next=c,d.lastBaseUpdate=s)}}if(null!==i){for(f=o.baseState,l=0,d=c=s=null;;){u=i.lane;var p=i.eventTime;if((r&u)===u){null!==d&&(d=d.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var m=e,h=i;switch(u=t,p=n,h.tag){case 1:if("function"==typeof(m=h.payload)){f=m.call(p,f,u);break e}f=m;break e;case 3:m.flags=-4097&m.flags|64;case 0:if(null==(u="function"==typeof(m=h.payload)?m.call(p,f,u):m))break e;f=a({},f,u);break e;case 2:io=!0}}null!==i.callback&&(e.flags|=32,null===(u=o.effects)?o.effects=[i]:u.push(i))}else p={eventTime:p,lane:u,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===d?(c=d=p,s=f):d=d.next=p,l|=u;if(null===(i=i.next)){if(null===(u=o.shared.pending))break;i=u.next,u.next=null,o.lastBaseUpdate=u,o.shared.pending=null}}null===d&&(s=f),o.baseState=s,o.firstBaseUpdate=c,o.lastBaseUpdate=d,Ml|=l,e.lanes=l,e.memoizedState=f}}function mo(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(i(191,a));a.call(r)}}}var ho=(new r.Component).refs;function go(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:a({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var vo={isMounted:function(e){return!!(e=e._reactInternals)&&Ye(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=su(),a=cu(e),o=so(r,a);o.payload=t,null!=n&&(o.callback=n),co(e,o),du(e,a,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=su(),a=cu(e),o=so(r,a);o.tag=1,o.payload=t,null!=n&&(o.callback=n),co(e,o),du(e,a,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=su(),r=cu(e),a=so(n,r);a.tag=2,null!=t&&(a.callback=t),co(e,a),du(e,r,n)}};function yo(e,t,n,r,a,o,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,i):!(t.prototype&&t.prototype.isPureReactComponent&&dr(n,r)&&dr(a,o))}function bo(e,t,n){var r=!1,a=da,o=t.contextType;return"object"==typeof o&&null!==o?o=oo(o):(a=ga(t)?ma:fa.current,o=(r=null!=(r=t.contextTypes))?ha(e,a):da),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=vo,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=o),t}function Eo(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&vo.enqueueReplaceState(t,t.state,null)}function xo(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=ho,lo(e);var o=t.contextType;"object"==typeof o&&null!==o?a.context=oo(o):(o=ga(t)?ma:fa.current,a.context=ha(e,o)),po(e,n,a,r),a.state=e.memoizedState,"function"==typeof(o=t.getDerivedStateFromProps)&&(go(e,t,o,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&vo.enqueueReplaceState(a,a.state,null),po(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4)}var wo=Array.isArray;function ko(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(i(309));var r=n.stateNode}if(!r)throw Error(i(147,e));var a=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===a?t.ref:(t=function(e){var t=r.refs;t===ho&&(t=r.refs={}),null===e?delete t[a]:t[a]=e},t._stringRef=a,t)}if("string"!=typeof e)throw Error(i(284));if(!n._owner)throw Error(i(290,e))}return e}function So(e,t){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function No(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Gu(e,t)).index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function l(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Wu(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=a(t,n.props)).ref=ko(e,t,n),r.return=e,r):((r=Hu(n.type,n.key,n.props,null,e.mode,r)).ref=ko(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Zu(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function d(e,t,n,r,o){return null===t||7!==t.tag?((t=Vu(n,e.mode,r,o)).return=e,t):((t=a(t,n)).return=e,t)}function f(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Wu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case w:return(n=Hu(t.type,t.key,t.props,null,e.mode,n)).ref=ko(e,null,t),n.return=e,n;case k:return(t=Zu(t,e.mode,n)).return=e,t}if(wo(t)||$(t))return(t=Vu(t,e.mode,n,null)).return=e,t;So(e,t)}return null}function p(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==a?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case w:return n.key===a?n.type===S?d(e,t,n.props.children,r,a):s(e,t,n,r):null;case k:return n.key===a?c(e,t,n,r):null}if(wo(n)||$(n))return null!==a?null:d(e,t,n,r,null);So(e,n)}return null}function m(e,t,n,r,a){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case w:return e=e.get(null===r.key?n:r.key)||null,r.type===S?d(t,e,r.props.children,a,r.key):s(t,e,r,a);case k:return c(t,e=e.get(null===r.key?n:r.key)||null,r,a)}if(wo(r)||$(r))return d(t,e=e.get(n)||null,r,a,null);So(t,r)}return null}function h(a,i,l,u){for(var s=null,c=null,d=i,h=i=0,g=null;null!==d&&h<l.length;h++){d.index>h?(g=d,d=null):g=d.sibling;var v=p(a,d,l[h],u);if(null===v){null===d&&(d=g);break}e&&d&&null===v.alternate&&t(a,d),i=o(v,i,h),null===c?s=v:c.sibling=v,c=v,d=g}if(h===l.length)return n(a,d),s;if(null===d){for(;h<l.length;h++)null!==(d=f(a,l[h],u))&&(i=o(d,i,h),null===c?s=d:c.sibling=d,c=d);return s}for(d=r(a,d);h<l.length;h++)null!==(g=m(d,a,h,l[h],u))&&(e&&null!==g.alternate&&d.delete(null===g.key?h:g.key),i=o(g,i,h),null===c?s=g:c.sibling=g,c=g);return e&&d.forEach((function(e){return t(a,e)})),s}function g(a,l,u,s){var c=$(u);if("function"!=typeof c)throw Error(i(150));if(null==(u=c.call(u)))throw Error(i(151));for(var d=c=null,h=l,g=l=0,v=null,y=u.next();null!==h&&!y.done;g++,y=u.next()){h.index>g?(v=h,h=null):v=h.sibling;var b=p(a,h,y.value,s);if(null===b){null===h&&(h=v);break}e&&h&&null===b.alternate&&t(a,h),l=o(b,l,g),null===d?c=b:d.sibling=b,d=b,h=v}if(y.done)return n(a,h),c;if(null===h){for(;!y.done;g++,y=u.next())null!==(y=f(a,y.value,s))&&(l=o(y,l,g),null===d?c=y:d.sibling=y,d=y);return c}for(h=r(a,h);!y.done;g++,y=u.next())null!==(y=m(h,a,g,y.value,s))&&(e&&null!==y.alternate&&h.delete(null===y.key?g:y.key),l=o(y,l,g),null===d?c=y:d.sibling=y,d=y);return e&&h.forEach((function(e){return t(a,e)})),c}return function(e,r,o,u){var s="object"==typeof o&&null!==o&&o.type===S&&null===o.key;s&&(o=o.props.children);var c="object"==typeof o&&null!==o;if(c)switch(o.$$typeof){case w:e:{for(c=o.key,s=r;null!==s;){if(s.key===c){if(7===s.tag){if(o.type===S){n(e,s.sibling),(r=a(s,o.props.children)).return=e,e=r;break e}}else if(s.elementType===o.type){n(e,s.sibling),(r=a(s,o.props)).ref=ko(e,s,o),r.return=e,e=r;break e}n(e,s);break}t(e,s),s=s.sibling}o.type===S?((r=Vu(o.props.children,e.mode,u,o.key)).return=e,e=r):((u=Hu(o.type,o.key,o.props,null,e.mode,u)).ref=ko(e,r,o),u.return=e,e=u)}return l(e);case k:e:{for(s=o.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){n(e,r.sibling),(r=a(r,o.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Zu(o,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof o||"number"==typeof o)return o=""+o,null!==r&&6===r.tag?(n(e,r.sibling),(r=a(r,o)).return=e,e=r):(n(e,r),(r=Wu(o,e.mode,u)).return=e,e=r),l(e);if(wo(o))return h(e,r,o,u);if($(o))return g(e,r,o,u);if(c&&So(e,o),void 0===o&&!s)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(i(152,W(e.type)||"Component"))}return n(e,r)}}var Ao=No(!0),Co=No(!1),_o={},Oo=ua(_o),Io=ua(_o),To=ua(_o);function Lo(e){if(e===_o)throw Error(i(174));return e}function Ro(e,t){switch(ca(To,t),ca(Io,e),ca(Oo,_o),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:pe(null,"");break;default:t=pe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}sa(Oo),ca(Oo,t)}function Po(){sa(Oo),sa(Io),sa(To)}function Fo(e){Lo(To.current);var t=Lo(Oo.current),n=pe(t,e.type);t!==n&&(ca(Io,e),ca(Oo,n))}function Uo(e){Io.current===e&&(sa(Oo),sa(Io))}var Do=ua(0);function Mo(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var zo=null,Bo=null,jo=!1;function $o(e,t){var n=ju(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Go(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function Ho(e){if(jo){var t=Bo;if(t){var n=t;if(!Go(e,t)){if(!(t=Wr(n.nextSibling))||!Go(e,t))return e.flags=-1025&e.flags|2,jo=!1,void(zo=e);$o(zo,n)}zo=e,Bo=Wr(t.firstChild)}else e.flags=-1025&e.flags|2,jo=!1,zo=e}}function Vo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;zo=e}function qo(e){if(e!==zo)return!1;if(!jo)return Vo(e),jo=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Gr(t,e.memoizedProps))for(t=Bo;t;)$o(e,t),t=Wr(t.nextSibling);if(Vo(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Bo=Wr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Bo=null}}else Bo=zo?Wr(e.stateNode.nextSibling):null;return!0}function Wo(){Bo=zo=null,jo=!1}var Zo=[];function Yo(){for(var e=0;e<Zo.length;e++)Zo[e]._workInProgressVersionPrimary=null;Zo.length=0}var Ko=x.ReactCurrentDispatcher,Xo=x.ReactCurrentBatchConfig,Qo=0,Jo=null,ei=null,ti=null,ni=!1,ri=!1;function ai(){throw Error(i(321))}function oi(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!sr(e[n],t[n]))return!1;return!0}function ii(e,t,n,r,a,o){if(Qo=o,Jo=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Ko.current=null===e||null===e.memoizedState?Li:Ri,e=n(r,a),ri){o=0;do{if(ri=!1,!(25>o))throw Error(i(301));o+=1,ti=ei=null,t.updateQueue=null,Ko.current=Pi,e=n(r,a)}while(ri)}if(Ko.current=Ti,t=null!==ei&&null!==ei.next,Qo=0,ti=ei=Jo=null,ni=!1,t)throw Error(i(300));return e}function li(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===ti?Jo.memoizedState=ti=e:ti=ti.next=e,ti}function ui(){if(null===ei){var e=Jo.alternate;e=null!==e?e.memoizedState:null}else e=ei.next;var t=null===ti?Jo.memoizedState:ti.next;if(null!==t)ti=t,ei=e;else{if(null===e)throw Error(i(310));e={memoizedState:(ei=e).memoizedState,baseState:ei.baseState,baseQueue:ei.baseQueue,queue:ei.queue,next:null},null===ti?Jo.memoizedState=ti=e:ti=ti.next=e}return ti}function si(e,t){return"function"==typeof t?t(e):t}function ci(e){var t=ui(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=ei,a=r.baseQueue,o=n.pending;if(null!==o){if(null!==a){var l=a.next;a.next=o.next,o.next=l}r.baseQueue=a=o,n.pending=null}if(null!==a){a=a.next,r=r.baseState;var u=l=o=null,s=a;do{var c=s.lane;if((Qo&c)===c)null!==u&&(u=u.next={lane:0,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null}),r=s.eagerReducer===e?s.eagerState:e(r,s.action);else{var d={lane:c,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null};null===u?(l=u=d,o=r):u=u.next=d,Jo.lanes|=c,Ml|=c}s=s.next}while(null!==s&&s!==a);null===u?o=r:u.next=l,sr(r,t.memoizedState)||(Ui=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function di(e){var t=ui(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,o=t.memoizedState;if(null!==a){n.pending=null;var l=a=a.next;do{o=e(o,l.action),l=l.next}while(l!==a);sr(o,t.memoizedState)||(Ui=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function fi(e,t,n){var r=t._getVersion;r=r(t._source);var a=t._workInProgressVersionPrimary;if(null!==a?e=a===r:(e=e.mutableReadLanes,(e=(Qo&e)===e)&&(t._workInProgressVersionPrimary=r,Zo.push(t))),e)return n(t._source);throw Zo.push(t),Error(i(350))}function pi(e,t,n,r){var a=Il;if(null===a)throw Error(i(349));var o=t._getVersion,l=o(t._source),u=Ko.current,s=u.useState((function(){return fi(a,t,n)})),c=s[1],d=s[0];s=ti;var f=e.memoizedState,p=f.refs,m=p.getSnapshot,h=f.source;f=f.subscribe;var g=Jo;return e.memoizedState={refs:p,source:t,subscribe:r},u.useEffect((function(){p.getSnapshot=n,p.setSnapshot=c;var e=o(t._source);if(!sr(l,e)){e=n(t._source),sr(d,e)||(c(e),e=cu(g),a.mutableReadLanes|=e&a.pendingLanes),e=a.mutableReadLanes,a.entangledLanes|=e;for(var r=a.entanglements,i=e;0<i;){var u=31-Gt(i),s=1<<u;r[u]|=e,i&=~s}}}),[n,t,r]),u.useEffect((function(){return r(t._source,(function(){var e=p.getSnapshot,n=p.setSnapshot;try{n(e(t._source));var r=cu(g);a.mutableReadLanes|=r&a.pendingLanes}catch(e){n((function(){throw e}))}}))}),[t,r]),sr(m,n)&&sr(h,t)&&sr(f,r)||((e={pending:null,dispatch:null,lastRenderedReducer:si,lastRenderedState:d}).dispatch=c=Ii.bind(null,Jo,e),s.queue=e,s.baseQueue=null,d=fi(a,t,n),s.memoizedState=s.baseState=d),d}function mi(e,t,n){return pi(ui(),e,t,n)}function hi(e){var t=li();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:si,lastRenderedState:e}).dispatch=Ii.bind(null,Jo,e),[t.memoizedState,e]}function gi(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Jo.updateQueue)?(t={lastEffect:null},Jo.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function vi(e){return e={current:e},li().memoizedState=e}function yi(){return ui().memoizedState}function bi(e,t,n,r){var a=li();Jo.flags|=e,a.memoizedState=gi(1|t,n,void 0,void 0===r?null:r)}function Ei(e,t,n,r){var a=ui();r=void 0===r?null:r;var o=void 0;if(null!==ei){var i=ei.memoizedState;if(o=i.destroy,null!==r&&oi(r,i.deps))return void gi(t,n,o,r)}Jo.flags|=e,a.memoizedState=gi(1|t,n,o,r)}function xi(e,t){return bi(516,4,e,t)}function wi(e,t){return Ei(516,4,e,t)}function ki(e,t){return Ei(4,2,e,t)}function Si(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Ni(e,t,n){return n=null!=n?n.concat([e]):null,Ei(4,2,Si.bind(null,t,e),n)}function Ai(){}function Ci(e,t){var n=ui();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&oi(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function _i(e,t){var n=ui();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&oi(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Oi(e,t){var n=Ga();Va(98>n?98:n,(function(){e(!0)})),Va(97<n?97:n,(function(){var n=Xo.transition;Xo.transition=1;try{e(!1),t()}finally{Xo.transition=n}}))}function Ii(e,t,n){var r=su(),a=cu(e),o={lane:a,action:n,eagerReducer:null,eagerState:null,next:null},i=t.pending;if(null===i?o.next=o:(o.next=i.next,i.next=o),t.pending=o,i=e.alternate,e===Jo||null!==i&&i===Jo)ri=ni=!0;else{if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=t.lastRenderedReducer))try{var l=t.lastRenderedState,u=i(l,n);if(o.eagerReducer=i,o.eagerState=u,sr(u,l))return}catch(e){}du(e,a,r)}}var Ti={readContext:oo,useCallback:ai,useContext:ai,useEffect:ai,useImperativeHandle:ai,useLayoutEffect:ai,useMemo:ai,useReducer:ai,useRef:ai,useState:ai,useDebugValue:ai,useDeferredValue:ai,useTransition:ai,useMutableSource:ai,useOpaqueIdentifier:ai,unstable_isNewReconciler:!1},Li={readContext:oo,useCallback:function(e,t){return li().memoizedState=[e,void 0===t?null:t],e},useContext:oo,useEffect:xi,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,bi(4,2,Si.bind(null,t,e),n)},useLayoutEffect:function(e,t){return bi(4,2,e,t)},useMemo:function(e,t){var n=li();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=li();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Ii.bind(null,Jo,e),[r.memoizedState,e]},useRef:vi,useState:hi,useDebugValue:Ai,useDeferredValue:function(e){var t=hi(e),n=t[0],r=t[1];return xi((function(){var t=Xo.transition;Xo.transition=1;try{r(e)}finally{Xo.transition=t}}),[e]),n},useTransition:function(){var e=hi(!1),t=e[0];return vi(e=Oi.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=li();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},pi(r,e,t,n)},useOpaqueIdentifier:function(){if(jo){var e=!1,t=function(e){return{$$typeof:F,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(Yr++).toString(36))),Error(i(355))})),n=hi(t)[1];return 0==(2&Jo.mode)&&(Jo.flags|=516,gi(5,(function(){n("r:"+(Yr++).toString(36))}),void 0,null)),t}return hi(t="r:"+(Yr++).toString(36)),t},unstable_isNewReconciler:!1},Ri={readContext:oo,useCallback:Ci,useContext:oo,useEffect:wi,useImperativeHandle:Ni,useLayoutEffect:ki,useMemo:_i,useReducer:ci,useRef:yi,useState:function(){return ci(si)},useDebugValue:Ai,useDeferredValue:function(e){var t=ci(si),n=t[0],r=t[1];return wi((function(){var t=Xo.transition;Xo.transition=1;try{r(e)}finally{Xo.transition=t}}),[e]),n},useTransition:function(){var e=ci(si)[0];return[yi().current,e]},useMutableSource:mi,useOpaqueIdentifier:function(){return ci(si)[0]},unstable_isNewReconciler:!1},Pi={readContext:oo,useCallback:Ci,useContext:oo,useEffect:wi,useImperativeHandle:Ni,useLayoutEffect:ki,useMemo:_i,useReducer:di,useRef:yi,useState:function(){return di(si)},useDebugValue:Ai,useDeferredValue:function(e){var t=di(si),n=t[0],r=t[1];return wi((function(){var t=Xo.transition;Xo.transition=1;try{r(e)}finally{Xo.transition=t}}),[e]),n},useTransition:function(){var e=di(si)[0];return[yi().current,e]},useMutableSource:mi,useOpaqueIdentifier:function(){return di(si)[0]},unstable_isNewReconciler:!1},Fi=x.ReactCurrentOwner,Ui=!1;function Di(e,t,n,r){t.child=null===e?Co(t,null,n,r):Ao(t,e.child,n,r)}function Mi(e,t,n,r,a){n=n.render;var o=t.ref;return ao(t,a),r=ii(e,t,n,r,o,a),null===e||Ui?(t.flags|=1,Di(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,nl(e,t,a))}function zi(e,t,n,r,a,o){if(null===e){var i=n.type;return"function"!=typeof i||$u(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Hu(n.type,null,r,t,t.mode,o)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Bi(e,t,i,r,a,o))}return i=e.child,0==(a&o)&&(a=i.memoizedProps,(n=null!==(n=n.compare)?n:dr)(a,r)&&e.ref===t.ref)?nl(e,t,o):(t.flags|=1,(e=Gu(i,r)).ref=t.ref,e.return=t,t.child=e)}function Bi(e,t,n,r,a,o){if(null!==e&&dr(e.memoizedProps,r)&&e.ref===t.ref){if(Ui=!1,0==(o&a))return t.lanes=e.lanes,nl(e,t,o);0!=(16384&e.flags)&&(Ui=!0)}return Gi(e,t,n,r,o)}function ji(e,t,n){var r=t.pendingProps,a=r.children,o=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},bu(0,n);else{if(0==(1073741824&n))return e=null!==o?o.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},bu(0,e),null;t.memoizedState={baseLanes:0},bu(0,null!==o?o.baseLanes:n)}else null!==o?(r=o.baseLanes|n,t.memoizedState=null):r=n,bu(0,r);return Di(e,t,a,n),t.child}function $i(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function Gi(e,t,n,r,a){var o=ga(n)?ma:fa.current;return o=ha(t,o),ao(t,a),n=ii(e,t,n,r,o,a),null===e||Ui?(t.flags|=1,Di(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,nl(e,t,a))}function Hi(e,t,n,r,a){if(ga(n)){var o=!0;Ea(t)}else o=!1;if(ao(t,a),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),bo(t,n,r),xo(t,n,r,a),r=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var u=i.context,s=n.contextType;s="object"==typeof s&&null!==s?oo(s):ha(t,s=ga(n)?ma:fa.current);var c=n.getDerivedStateFromProps,d="function"==typeof c||"function"==typeof i.getSnapshotBeforeUpdate;d||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==s)&&Eo(t,i,r,s),io=!1;var f=t.memoizedState;i.state=f,po(t,r,i,a),u=t.memoizedState,l!==r||f!==u||pa.current||io?("function"==typeof c&&(go(t,n,c,r),u=t.memoizedState),(l=io||yo(t,n,l,r,f,u,s))?(d||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.flags|=4)):("function"==typeof i.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=u),i.props=r,i.state=u,i.context=s,r=l):("function"==typeof i.componentDidMount&&(t.flags|=4),r=!1)}else{i=t.stateNode,uo(e,t),l=t.memoizedProps,s=t.type===t.elementType?l:Ka(t.type,l),i.props=s,d=t.pendingProps,f=i.context,u="object"==typeof(u=n.contextType)&&null!==u?oo(u):ha(t,u=ga(n)?ma:fa.current);var p=n.getDerivedStateFromProps;(c="function"==typeof p||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==d||f!==u)&&Eo(t,i,r,u),io=!1,f=t.memoizedState,i.state=f,po(t,r,i,a);var m=t.memoizedState;l!==d||f!==m||pa.current||io?("function"==typeof p&&(go(t,n,p,r),m=t.memoizedState),(s=io||yo(t,n,s,r,f,m,u))?(c||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,m,u),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,m,u)),"function"==typeof i.componentDidUpdate&&(t.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=m),i.props=r,i.state=m,i.context=u,r=s):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=256),r=!1)}return Vi(e,t,n,r,o,a)}function Vi(e,t,n,r,a,o){$i(e,t);var i=0!=(64&t.flags);if(!r&&!i)return a&&xa(t,n,!1),nl(e,t,o);r=t.stateNode,Fi.current=t;var l=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&i?(t.child=Ao(t,e.child,null,o),t.child=Ao(t,null,l,o)):Di(e,t,l,o),t.memoizedState=r.state,a&&xa(t,n,!0),t.child}function qi(e){var t=e.stateNode;t.pendingContext?ya(0,t.pendingContext,t.pendingContext!==t.context):t.context&&ya(0,t.context,!1),Ro(e,t.containerInfo)}var Wi,Zi,Yi,Ki={dehydrated:null,retryLane:0};function Xi(e,t,n){var r,a=t.pendingProps,o=Do.current,i=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&o)),r?(i=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(o|=1),ca(Do,1&o),null===e?(void 0!==a.fallback&&Ho(t),e=a.children,o=a.fallback,i?(e=Qi(t,e,o,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Ki,e):"number"==typeof a.unstable_expectedLoadTime?(e=Qi(t,e,o,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Ki,t.lanes=33554432,e):((n=qu({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,i?(a=function(e,t,n,r,a){var o=t.mode,i=e.child;e=i.sibling;var l={mode:"hidden",children:n};return 0==(2&o)&&t.child!==i?((n=t.child).childLanes=0,n.pendingProps=l,null!==(i=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=i,i.nextEffect=null):t.firstEffect=t.lastEffect=null):n=Gu(i,l),null!==e?r=Gu(e,r):(r=Vu(r,o,a,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}(e,t,a.children,a.fallback,n),i=t.child,o=e.child.memoizedState,i.memoizedState=null===o?{baseLanes:n}:{baseLanes:o.baseLanes|n},i.childLanes=e.childLanes&~n,t.memoizedState=Ki,a):(n=function(e,t,n,r){var a=e.child;return e=a.sibling,n=Gu(a,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}(e,t,a.children,n),t.memoizedState=null,n))}function Qi(e,t,n,r){var a=e.mode,o=e.child;return t={mode:"hidden",children:t},0==(2&a)&&null!==o?(o.childLanes=0,o.pendingProps=t):o=qu(t,a,0,null),n=Vu(n,a,r,null),o.return=e,n.return=e,o.sibling=n,e.child=o,n}function Ji(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),ro(e.return,t)}function el(e,t,n,r,a,o){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a,lastEffect:o}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=n,i.tailMode=a,i.lastEffect=o)}function tl(e,t,n){var r=t.pendingProps,a=r.revealOrder,o=r.tail;if(Di(e,t,r.children,n),0!=(2&(r=Do.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ji(e,n);else if(19===e.tag)Ji(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ca(Do,r),0==(2&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===Mo(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),el(t,!1,a,n,o,t.lastEffect);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===Mo(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}el(t,!0,n,null,o,t.lastEffect);break;case"together":el(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function nl(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ml|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(n=Gu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Gu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function rl(e,t){if(!jo)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function al(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:case 17:return ga(t.type)&&va(),null;case 3:return Po(),sa(pa),sa(fa),Yo(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(qo(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:Uo(t);var o=Lo(To.current);if(n=t.type,null!==e&&null!=t.stateNode)Zi(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(i(166));return null}if(e=Lo(Oo.current),qo(t)){r=t.stateNode,n=t.type;var l=t.memoizedProps;switch(r[Xr]=t,r[Qr]=l,n){case"dialog":Or("cancel",r),Or("close",r);break;case"iframe":case"object":case"embed":Or("load",r);break;case"video":case"audio":for(e=0;e<Nr.length;e++)Or(Nr[e],r);break;case"source":Or("error",r);break;case"img":case"image":case"link":Or("error",r),Or("load",r);break;case"details":Or("toggle",r);break;case"input":ee(r,l),Or("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!l.multiple},Or("invalid",r);break;case"textarea":ue(r,l),Or("invalid",r)}for(var s in ke(n,l),e=null,l)l.hasOwnProperty(s)&&(o=l[s],"children"===s?"string"==typeof o?r.textContent!==o&&(e=["children",o]):"number"==typeof o&&r.textContent!==""+o&&(e=["children",""+o]):u.hasOwnProperty(s)&&null!=o&&"onScroll"===s&&Or("scroll",r));switch(n){case"input":K(r),re(r,l,!0);break;case"textarea":K(r),ce(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=zr)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(s=9===o.nodeType?o:o.ownerDocument,e===de&&(e=fe(n)),e===de?"script"===n?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=s.createElement(n,{is:r.is}):(e=s.createElement(n),"select"===n&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,n),e[Xr]=t,e[Qr]=r,Wi(e,t),t.stateNode=e,s=Se(n,r),n){case"dialog":Or("cancel",e),Or("close",e),o=r;break;case"iframe":case"object":case"embed":Or("load",e),o=r;break;case"video":case"audio":for(o=0;o<Nr.length;o++)Or(Nr[o],e);o=r;break;case"source":Or("error",e),o=r;break;case"img":case"image":case"link":Or("error",e),Or("load",e),o=r;break;case"details":Or("toggle",e),o=r;break;case"input":ee(e,r),o=J(e,r),Or("invalid",e);break;case"option":o=oe(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},o=a({},r,{value:void 0}),Or("invalid",e);break;case"textarea":ue(e,r),o=le(e,r),Or("invalid",e);break;default:o=r}ke(n,o);var c=o;for(l in c)if(c.hasOwnProperty(l)){var d=c[l];"style"===l?xe(e,d):"dangerouslySetInnerHTML"===l?null!=(d=d?d.__html:void 0)&&ge(e,d):"children"===l?"string"==typeof d?("textarea"!==n||""!==d)&&ve(e,d):"number"==typeof d&&ve(e,""+d):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(u.hasOwnProperty(l)?null!=d&&"onScroll"===l&&Or("scroll",e):null!=d&&E(e,l,d,s))}switch(n){case"input":K(e),re(e,r,!1);break;case"textarea":K(e),ce(e);break;case"option":null!=r.value&&e.setAttribute("value",""+Z(r.value));break;case"select":e.multiple=!!r.multiple,null!=(l=r.value)?ie(e,!!r.multiple,l,!1):null!=r.defaultValue&&ie(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof o.onClick&&(e.onclick=zr)}$r(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Yi(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(i(166));n=Lo(To.current),Lo(Oo.current),qo(t)?(r=t.stateNode,n=t.memoizedProps,r[Xr]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Xr]=t,t.stateNode=r)}return null;case 13:return sa(Do),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&qo(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Do.current)?0===Fl&&(Fl=3):(0!==Fl&&3!==Fl||(Fl=4),null===Il||0==(134217727&Ml)&&0==(134217727&zl)||hu(Il,Ll))),(r||n)&&(t.flags|=4),null);case 4:return Po(),null===e&&Tr(t.stateNode.containerInfo),null;case 10:return no(t),null;case 19:if(sa(Do),null===(r=t.memoizedState))return null;if(l=0!=(64&t.flags),null===(s=r.rendering))if(l)rl(r,!1);else{if(0!==Fl||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(s=Mo(e))){for(t.flags|=64,rl(r,!1),null!==(l=s.updateQueue)&&(t.updateQueue=l,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(l=n).flags&=2,l.nextEffect=null,l.firstEffect=null,l.lastEffect=null,null===(s=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=s.childLanes,l.lanes=s.lanes,l.child=s.child,l.memoizedProps=s.memoizedProps,l.memoizedState=s.memoizedState,l.updateQueue=s.updateQueue,l.type=s.type,e=s.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return ca(Do,1&Do.current|2),t.child}e=e.sibling}null!==r.tail&&$a()>Gl&&(t.flags|=64,l=!0,rl(r,!1),t.lanes=33554432)}else{if(!l)if(null!==(e=Mo(s))){if(t.flags|=64,l=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),rl(r,!0),null===r.tail&&"hidden"===r.tailMode&&!s.alternate&&!jo)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*$a()-r.renderingStartTime>Gl&&1073741824!==n&&(t.flags|=64,l=!0,rl(r,!1),t.lanes=33554432);r.isBackwards?(s.sibling=t.child,t.child=s):(null!==(n=r.last)?n.sibling=s:t.child=s,r.last=s)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=$a(),n.sibling=null,t=Do.current,ca(Do,l?1&t|2:1&t),n):null;case 23:case 24:return Eu(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(i(156,t.tag))}function ol(e){switch(e.tag){case 1:ga(e.type)&&va();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(Po(),sa(pa),sa(fa),Yo(),0!=(64&(t=e.flags)))throw Error(i(285));return e.flags=-4097&t|64,e;case 5:return Uo(e),null;case 13:return sa(Do),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return sa(Do),null;case 4:return Po(),null;case 10:return no(e),null;case 23:case 24:return Eu(),null;default:return null}}function il(e,t){try{var n="",r=t;do{n+=q(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a}}function ll(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Wi=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Zi=function(e,t,n,r){var o=e.memoizedProps;if(o!==r){e=t.stateNode,Lo(Oo.current);var i,l=null;switch(n){case"input":o=J(e,o),r=J(e,r),l=[];break;case"option":o=oe(e,o),r=oe(e,r),l=[];break;case"select":o=a({},o,{value:void 0}),r=a({},r,{value:void 0}),l=[];break;case"textarea":o=le(e,o),r=le(e,r),l=[];break;default:"function"!=typeof o.onClick&&"function"==typeof r.onClick&&(e.onclick=zr)}for(d in ke(n,r),n=null,o)if(!r.hasOwnProperty(d)&&o.hasOwnProperty(d)&&null!=o[d])if("style"===d){var s=o[d];for(i in s)s.hasOwnProperty(i)&&(n||(n={}),n[i]="")}else"dangerouslySetInnerHTML"!==d&&"children"!==d&&"suppressContentEditableWarning"!==d&&"suppressHydrationWarning"!==d&&"autoFocus"!==d&&(u.hasOwnProperty(d)?l||(l=[]):(l=l||[]).push(d,null));for(d in r){var c=r[d];if(s=null!=o?o[d]:void 0,r.hasOwnProperty(d)&&c!==s&&(null!=c||null!=s))if("style"===d)if(s){for(i in s)!s.hasOwnProperty(i)||c&&c.hasOwnProperty(i)||(n||(n={}),n[i]="");for(i in c)c.hasOwnProperty(i)&&s[i]!==c[i]&&(n||(n={}),n[i]=c[i])}else n||(l||(l=[]),l.push(d,n)),n=c;else"dangerouslySetInnerHTML"===d?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(l=l||[]).push(d,c)):"children"===d?"string"!=typeof c&&"number"!=typeof c||(l=l||[]).push(d,""+c):"suppressContentEditableWarning"!==d&&"suppressHydrationWarning"!==d&&(u.hasOwnProperty(d)?(null!=c&&"onScroll"===d&&Or("scroll",e),l||s===c||(l=[])):"object"==typeof c&&null!==c&&c.$$typeof===F?c.toString():(l=l||[]).push(d,c))}n&&(l=l||[]).push("style",n);var d=l;(t.updateQueue=d)&&(t.flags|=4)}},Yi=function(e,t,n,r){n!==r&&(t.flags|=4)};var ul="function"==typeof WeakMap?WeakMap:Map;function sl(e,t,n){(n=so(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Wl||(Wl=!0,Zl=r),ll(0,t)},n}function cl(e,t,n){(n=so(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return ll(0,t),r(a)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Yl?Yl=new Set([this]):Yl.add(this),ll(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var dl="function"==typeof WeakSet?WeakSet:Set;function fl(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Du(e,t)}else t.current=null}function pl(e,t){switch(t.tag){case 0:case 11:case 15:case 22:case 5:case 6:case 4:case 17:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Ka(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&qr(t.stateNode.containerInfo))}throw Error(i(163))}function ml(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var a=e;r=a.next,0!=(4&(a=a.tag))&&0!=(1&a)&&(Pu(n,e),Ru(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:Ka(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&mo(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:case 1:e=n.child.stateNode}mo(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&$r(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:case 19:case 17:case 20:case 21:case 23:case 24:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&xt(n)))))}throw Error(i(163))}function hl(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var a=n.memoizedProps.style;a=null!=a&&a.hasOwnProperty("display")?a.display:null,r.style.display=Ee("display",a)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function gl(e,t){if(ka&&"function"==typeof ka.onCommitFiberUnmount)try{ka.onCommitFiberUnmount(wa,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,a=r.destroy;if(r=r.tag,void 0!==a)if(0!=(4&r))Pu(t,n);else{r=t;try{a()}catch(e){Du(r,e)}}n=n.next}while(n!==e)}break;case 1:if(fl(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Du(t,e)}break;case 5:fl(t);break;case 4:wl(e,t)}}function vl(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function yl(e){return 5===e.tag||3===e.tag||4===e.tag}function bl(e){e:{for(var t=e.return;null!==t;){if(yl(t))break e;t=t.return}throw Error(i(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(i(161))}16&n.flags&&(ve(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||yl(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?El(e,n,t):xl(e,n,t)}function El(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=zr));else if(4!==r&&null!==(e=e.child))for(El(e,t,n),e=e.sibling;null!==e;)El(e,t,n),e=e.sibling}function xl(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(xl(e,t,n),e=e.sibling;null!==e;)xl(e,t,n),e=e.sibling}function wl(e,t){for(var n,r,a=t,o=!1;;){if(!o){o=a.return;e:for(;;){if(null===o)throw Error(i(160));switch(n=o.stateNode,o.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}o=o.return}o=!0}if(5===a.tag||6===a.tag){e:for(var l=e,u=a,s=u;;)if(gl(l,s),null!==s.child&&4!==s.tag)s.child.return=s,s=s.child;else{if(s===u)break e;for(;null===s.sibling;){if(null===s.return||s.return===u)break e;s=s.return}s.sibling.return=s.return,s=s.sibling}r?(l=n,u=a.stateNode,8===l.nodeType?l.parentNode.removeChild(u):l.removeChild(u)):n.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){n=a.stateNode.containerInfo,r=!0,a.child.return=a,a=a.child;continue}}else if(gl(e,a),null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;4===(a=a.return).tag&&(o=!1)}a.sibling.return=a.return,a=a.sibling}}function kl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:case 12:case 17:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var a=null!==e?e.memoizedProps:r;e=t.type;var o=t.updateQueue;if(t.updateQueue=null,null!==o){for(n[Qr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),Se(e,a),t=Se(e,r),a=0;a<o.length;a+=2){var l=o[a],u=o[a+1];"style"===l?xe(n,u):"dangerouslySetInnerHTML"===l?ge(n,u):"children"===l?ve(n,u):E(n,l,u,t)}switch(e){case"input":ne(n,r);break;case"textarea":se(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(o=r.value)?ie(n,!!r.multiple,o,!1):e!==!!r.multiple&&(null!=r.defaultValue?ie(n,!!r.multiple,r.defaultValue,!0):ie(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(i(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,xt(n.containerInfo)));case 13:return null!==t.memoizedState&&($l=$a(),hl(t.child,!0)),void Sl(t);case 19:return void Sl(t);case 23:case 24:return void hl(t,null!==t.memoizedState)}throw Error(i(163))}function Sl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new dl),t.forEach((function(t){var r=zu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function Nl(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(t=t.memoizedState)&&null===t.dehydrated}var Al=Math.ceil,Cl=x.ReactCurrentDispatcher,_l=x.ReactCurrentOwner,Ol=0,Il=null,Tl=null,Ll=0,Rl=0,Pl=ua(0),Fl=0,Ul=null,Dl=0,Ml=0,zl=0,Bl=0,jl=null,$l=0,Gl=1/0;function Hl(){Gl=$a()+500}var Vl,ql=null,Wl=!1,Zl=null,Yl=null,Kl=!1,Xl=null,Ql=90,Jl=[],eu=[],tu=null,nu=0,ru=null,au=-1,ou=0,iu=0,lu=null,uu=!1;function su(){return 0!=(48&Ol)?$a():-1!==au?au:au=$a()}function cu(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Ga()?1:2;if(0===ou&&(ou=Dl),0!==Ya.transition){0!==iu&&(iu=null!==jl?jl.pendingLanes:0),e=ou;var t=4186112&~iu;return 0==(t&=-t)&&0==(t=(e=4186112&~e)&-e)&&(t=8192),t}return e=Ga(),e=zt(0!=(4&Ol)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),ou)}function du(e,t,n){if(50<nu)throw nu=0,ru=null,Error(i(185));if(null===(e=fu(e,t)))return null;$t(e,t,n),e===Il&&(zl|=t,4===Fl&&hu(e,Ll));var r=Ga();1===t?0!=(8&Ol)&&0==(48&Ol)?gu(e):(pu(e,n),0===Ol&&(Hl(),Wa())):(0==(4&Ol)||98!==r&&99!==r||(null===tu?tu=new Set([e]):tu.add(e)),pu(e,n)),jl=e}function fu(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function pu(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,a=e.pingedLanes,o=e.expirationTimes,l=e.pendingLanes;0<l;){var u=31-Gt(l),s=1<<u,c=o[u];if(-1===c){if(0==(s&r)||0!=(s&a)){c=t,Ut(s);var d=Ft;o[u]=10<=d?c+250:6<=d?c+5e3:-1}}else c<=t&&(e.expiredLanes|=s);l&=~s}if(r=Dt(e,e===Il?Ll:0),t=Ft,0===r)null!==n&&(n!==Ua&&Aa(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==Ua&&Aa(n)}15===t?(n=gu.bind(null,e),null===Ma?(Ma=[n],za=Na(Ta,Za)):Ma.push(n),n=Ua):14===t?n=qa(99,gu.bind(null,e)):(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(i(358,e))}}(t),n=qa(n,mu.bind(null,e))),e.callbackPriority=t,e.callbackNode=n}}function mu(e){if(au=-1,iu=ou=0,0!=(48&Ol))throw Error(i(327));var t=e.callbackNode;if(Lu()&&e.callbackNode!==t)return null;var n=Dt(e,e===Il?Ll:0);if(0===n)return null;var r=n,a=Ol;Ol|=16;var o=ku();for(Il===e&&Ll===r||(Hl(),xu(e,r));;)try{Au();break}catch(t){wu(e,t)}if(to(),Cl.current=o,Ol=a,null!==Tl?r=0:(Il=null,Ll=0,r=Fl),0!=(Dl&zl))xu(e,0);else if(0!==r){if(2===r&&(Ol|=64,e.hydrate&&(e.hydrate=!1,qr(e.containerInfo)),0!==(n=Mt(e))&&(r=Su(e,n))),1===r)throw t=Ul,xu(e,0),hu(e,n),pu(e,$a()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(i(345));case 2:case 5:Ou(e);break;case 3:if(hu(e,n),(62914560&n)===n&&10<(r=$l+500-$a())){if(0!==Dt(e,0))break;if(((a=e.suspendedLanes)&n)!==n){su(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=Hr(Ou.bind(null,e),r);break}Ou(e);break;case 4:if(hu(e,n),(4186112&n)===n)break;for(r=e.eventTimes,a=-1;0<n;){var l=31-Gt(n);o=1<<l,(l=r[l])>a&&(a=l),n&=~o}if(n=a,10<(n=(120>(n=$a()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*Al(n/1960))-n)){e.timeoutHandle=Hr(Ou.bind(null,e),n);break}Ou(e);break;default:throw Error(i(329))}}return pu(e,$a()),e.callbackNode===t?mu.bind(null,e):null}function hu(e,t){for(t&=~Bl,t&=~zl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Gt(t),r=1<<n;e[n]=-1,t&=~r}}function gu(e){if(0!=(48&Ol))throw Error(i(327));if(Lu(),e===Il&&0!=(e.expiredLanes&Ll)){var t=Ll,n=Su(e,t);0!=(Dl&zl)&&(n=Su(e,t=Dt(e,t)))}else n=Su(e,t=Dt(e,0));if(0!==e.tag&&2===n&&(Ol|=64,e.hydrate&&(e.hydrate=!1,qr(e.containerInfo)),0!==(t=Mt(e))&&(n=Su(e,t))),1===n)throw n=Ul,xu(e,0),hu(e,t),pu(e,$a()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Ou(e),pu(e,$a()),null}function vu(e,t){var n=Ol;Ol|=1;try{return e(t)}finally{0===(Ol=n)&&(Hl(),Wa())}}function yu(e,t){var n=Ol;Ol&=-2,Ol|=8;try{return e(t)}finally{0===(Ol=n)&&(Hl(),Wa())}}function bu(e,t){ca(Pl,Rl),Rl|=t,Dl|=t}function Eu(){Rl=Pl.current,sa(Pl)}function xu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Vr(n)),null!==Tl)for(n=Tl.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&va();break;case 3:Po(),sa(pa),sa(fa),Yo();break;case 5:Uo(r);break;case 4:Po();break;case 13:case 19:sa(Do);break;case 10:no(r);break;case 23:case 24:Eu()}n=n.return}Il=e,Tl=Gu(e.current,null),Ll=Rl=Dl=t,Fl=0,Ul=null,Bl=zl=Ml=0}function wu(e,t){for(;;){var n=Tl;try{if(to(),Ko.current=Ti,ni){for(var r=Jo.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}ni=!1}if(Qo=0,ti=ei=Jo=null,ri=!1,_l.current=null,null===n||null===n.return){Fl=1,Ul=t,Tl=null;break}e:{var o=e,i=n.return,l=n,u=t;if(t=Ll,l.flags|=2048,l.firstEffect=l.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var s=u;if(0==(2&l.mode)){var c=l.alternate;c?(l.updateQueue=c.updateQueue,l.memoizedState=c.memoizedState,l.lanes=c.lanes):(l.updateQueue=null,l.memoizedState=null)}var d=0!=(1&Do.current),f=i;do{var p;if(p=13===f.tag){var m=f.memoizedState;if(null!==m)p=null!==m.dehydrated;else{var h=f.memoizedProps;p=void 0!==h.fallback&&(!0!==h.unstable_avoidThisFallback||!d)}}if(p){var g=f.updateQueue;if(null===g){var v=new Set;v.add(s),f.updateQueue=v}else g.add(s);if(0==(2&f.mode)){if(f.flags|=64,l.flags|=16384,l.flags&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var y=so(-1,1);y.tag=2,co(l,y)}l.lanes|=1;break e}u=void 0,l=t;var b=o.pingCache;if(null===b?(b=o.pingCache=new ul,u=new Set,b.set(s,u)):void 0===(u=b.get(s))&&(u=new Set,b.set(s,u)),!u.has(l)){u.add(l);var E=Mu.bind(null,o,s,l);s.then(E,E)}f.flags|=4096,f.lanes=t;break e}f=f.return}while(null!==f);u=Error((W(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Fl&&(Fl=2),u=il(u,l),f=i;do{switch(f.tag){case 3:o=u,f.flags|=4096,t&=-t,f.lanes|=t,fo(f,sl(0,o,t));break e;case 1:o=u;var x=f.type,w=f.stateNode;if(0==(64&f.flags)&&("function"==typeof x.getDerivedStateFromError||null!==w&&"function"==typeof w.componentDidCatch&&(null===Yl||!Yl.has(w)))){f.flags|=4096,t&=-t,f.lanes|=t,fo(f,cl(f,o,t));break e}}f=f.return}while(null!==f)}_u(n)}catch(e){t=e,Tl===n&&null!==n&&(Tl=n=n.return);continue}break}}function ku(){var e=Cl.current;return Cl.current=Ti,null===e?Ti:e}function Su(e,t){var n=Ol;Ol|=16;var r=ku();for(Il===e&&Ll===t||xu(e,t);;)try{Nu();break}catch(t){wu(e,t)}if(to(),Ol=n,Cl.current=r,null!==Tl)throw Error(i(261));return Il=null,Ll=0,Fl}function Nu(){for(;null!==Tl;)Cu(Tl)}function Au(){for(;null!==Tl&&!Ca();)Cu(Tl)}function Cu(e){var t=Vl(e.alternate,e,Rl);e.memoizedProps=e.pendingProps,null===t?_u(e):Tl=t,_l.current=null}function _u(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=al(n,t,Rl)))return void(Tl=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&Rl)||0==(4&n.mode)){for(var r=0,a=n.child;null!==a;)r|=a.lanes|a.childLanes,a=a.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=ol(t)))return n.flags&=2047,void(Tl=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Tl=t);Tl=t=e}while(null!==t);0===Fl&&(Fl=5)}function Ou(e){var t=Ga();return Va(99,Iu.bind(null,e,t)),null}function Iu(e,t){do{Lu()}while(null!==Xl);if(0!=(48&Ol))throw Error(i(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(i(177));e.callbackNode=null;var r=n.lanes|n.childLanes,a=r,o=e.pendingLanes&~a;e.pendingLanes=a,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=a,e.mutableReadLanes&=a,e.entangledLanes&=a,a=e.entanglements;for(var l=e.eventTimes,u=e.expirationTimes;0<o;){var s=31-Gt(o),c=1<<s;a[s]=0,l[s]=-1,u[s]=-1,o&=~c}if(null!==tu&&0==(24&r)&&tu.has(e)&&tu.delete(e),e===Il&&(Tl=Il=null,Ll=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(a=Ol,Ol|=32,_l.current=null,Br=Zt,gr(l=hr())){if("selectionStart"in l)u={start:l.selectionStart,end:l.selectionEnd};else e:if(u=(u=l.ownerDocument)&&u.defaultView||window,(c=u.getSelection&&u.getSelection())&&0!==c.rangeCount){u=c.anchorNode,o=c.anchorOffset,s=c.focusNode,c=c.focusOffset;try{u.nodeType,s.nodeType}catch(e){u=null;break e}var d=0,f=-1,p=-1,m=0,h=0,g=l,v=null;t:for(;;){for(var y;g!==u||0!==o&&3!==g.nodeType||(f=d+o),g!==s||0!==c&&3!==g.nodeType||(p=d+c),3===g.nodeType&&(d+=g.nodeValue.length),null!==(y=g.firstChild);)v=g,g=y;for(;;){if(g===l)break t;if(v===u&&++m===o&&(f=d),v===s&&++h===c&&(p=d),null!==(y=g.nextSibling))break;v=(g=v).parentNode}g=y}u=-1===f||-1===p?null:{start:f,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;jr={focusedElem:l,selectionRange:u},Zt=!1,lu=null,uu=!1,ql=r;do{try{Tu()}catch(e){if(null===ql)throw Error(i(330));Du(ql,e),ql=ql.nextEffect}}while(null!==ql);lu=null,ql=r;do{try{for(l=e;null!==ql;){var b=ql.flags;if(16&b&&ve(ql.stateNode,""),128&b){var E=ql.alternate;if(null!==E){var x=E.ref;null!==x&&("function"==typeof x?x(null):x.current=null)}}switch(1038&b){case 2:bl(ql),ql.flags&=-3;break;case 6:bl(ql),ql.flags&=-3,kl(ql.alternate,ql);break;case 1024:ql.flags&=-1025;break;case 1028:ql.flags&=-1025,kl(ql.alternate,ql);break;case 4:kl(ql.alternate,ql);break;case 8:wl(l,u=ql);var w=u.alternate;vl(u),null!==w&&vl(w)}ql=ql.nextEffect}}catch(e){if(null===ql)throw Error(i(330));Du(ql,e),ql=ql.nextEffect}}while(null!==ql);if(x=jr,E=hr(),b=x.focusedElem,l=x.selectionRange,E!==b&&b&&b.ownerDocument&&mr(b.ownerDocument.documentElement,b)){null!==l&&gr(b)&&(E=l.start,void 0===(x=l.end)&&(x=E),"selectionStart"in b?(b.selectionStart=E,b.selectionEnd=Math.min(x,b.value.length)):(x=(E=b.ownerDocument||document)&&E.defaultView||window).getSelection&&(x=x.getSelection(),u=b.textContent.length,w=Math.min(l.start,u),l=void 0===l.end?w:Math.min(l.end,u),!x.extend&&w>l&&(u=l,l=w,w=u),u=pr(b,w),o=pr(b,l),u&&o&&(1!==x.rangeCount||x.anchorNode!==u.node||x.anchorOffset!==u.offset||x.focusNode!==o.node||x.focusOffset!==o.offset)&&((E=E.createRange()).setStart(u.node,u.offset),x.removeAllRanges(),w>l?(x.addRange(E),x.extend(o.node,o.offset)):(E.setEnd(o.node,o.offset),x.addRange(E))))),E=[];for(x=b;x=x.parentNode;)1===x.nodeType&&E.push({element:x,left:x.scrollLeft,top:x.scrollTop});for("function"==typeof b.focus&&b.focus(),b=0;b<E.length;b++)(x=E[b]).element.scrollLeft=x.left,x.element.scrollTop=x.top}Zt=!!Br,jr=Br=null,e.current=n,ql=r;do{try{for(b=e;null!==ql;){var k=ql.flags;if(36&k&&ml(b,ql.alternate,ql),128&k){E=void 0;var S=ql.ref;if(null!==S){var N=ql.stateNode;ql.tag,E=N,"function"==typeof S?S(E):S.current=E}}ql=ql.nextEffect}}catch(e){if(null===ql)throw Error(i(330));Du(ql,e),ql=ql.nextEffect}}while(null!==ql);ql=null,Da(),Ol=a}else e.current=n;if(Kl)Kl=!1,Xl=e,Ql=t;else for(ql=r;null!==ql;)t=ql.nextEffect,ql.nextEffect=null,8&ql.flags&&((k=ql).sibling=null,k.stateNode=null),ql=t;if(0===(r=e.pendingLanes)&&(Yl=null),1===r?e===ru?nu++:(nu=0,ru=e):nu=0,n=n.stateNode,ka&&"function"==typeof ka.onCommitFiberRoot)try{ka.onCommitFiberRoot(wa,n,void 0,64==(64&n.current.flags))}catch(e){}if(pu(e,$a()),Wl)throw Wl=!1,e=Zl,Zl=null,e;return 0!=(8&Ol)||Wa(),null}function Tu(){for(;null!==ql;){var e=ql.alternate;uu||null===lu||(0!=(8&ql.flags)?Je(ql,lu)&&(uu=!0):13===ql.tag&&Nl(e,ql)&&Je(ql,lu)&&(uu=!0));var t=ql.flags;0!=(256&t)&&pl(e,ql),0==(512&t)||Kl||(Kl=!0,qa(97,(function(){return Lu(),null}))),ql=ql.nextEffect}}function Lu(){if(90!==Ql){var e=97<Ql?97:Ql;return Ql=90,Va(e,Fu)}return!1}function Ru(e,t){Jl.push(t,e),Kl||(Kl=!0,qa(97,(function(){return Lu(),null})))}function Pu(e,t){eu.push(t,e),Kl||(Kl=!0,qa(97,(function(){return Lu(),null})))}function Fu(){if(null===Xl)return!1;var e=Xl;if(Xl=null,0!=(48&Ol))throw Error(i(331));var t=Ol;Ol|=32;var n=eu;eu=[];for(var r=0;r<n.length;r+=2){var a=n[r],o=n[r+1],l=a.destroy;if(a.destroy=void 0,"function"==typeof l)try{l()}catch(e){if(null===o)throw Error(i(330));Du(o,e)}}for(n=Jl,Jl=[],r=0;r<n.length;r+=2){a=n[r],o=n[r+1];try{var u=a.create;a.destroy=u()}catch(e){if(null===o)throw Error(i(330));Du(o,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return Ol=t,Wa(),!0}function Uu(e,t,n){co(e,t=sl(0,t=il(n,t),1)),t=su(),null!==(e=fu(e,1))&&($t(e,1,t),pu(e,t))}function Du(e,t){if(3===e.tag)Uu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Uu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Yl||!Yl.has(r))){var a=cl(n,e=il(t,e),1);if(co(n,a),a=su(),null!==(n=fu(n,1)))$t(n,1,a),pu(n,a);else if("function"==typeof r.componentDidCatch&&(null===Yl||!Yl.has(r)))try{r.componentDidCatch(t,e)}catch(e){}break}}n=n.return}}function Mu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=su(),e.pingedLanes|=e.suspendedLanes&n,Il===e&&(Ll&n)===n&&(4===Fl||3===Fl&&(62914560&Ll)===Ll&&500>$a()-$l?xu(e,0):Bl|=n),pu(e,t)}function zu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===Ga()?1:2:(0===ou&&(ou=Dl),0===(t=Bt(62914560&~ou))&&(t=4194304))),n=su(),null!==(e=fu(e,t))&&($t(e,t,n),pu(e,n))}function Bu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function ju(e,t,n,r){return new Bu(e,t,n,r)}function $u(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Gu(e,t){var n=e.alternate;return null===n?((n=ju(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Hu(e,t,n,r,a,o){var l=2;if(r=e,"function"==typeof e)$u(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case S:return Vu(n.children,a,o,t);case U:l=8,a|=16;break;case N:l=8,a|=1;break;case A:return(e=ju(12,n,t,8|a)).elementType=A,e.type=A,e.lanes=o,e;case I:return(e=ju(13,n,t,a)).type=I,e.elementType=I,e.lanes=o,e;case T:return(e=ju(19,n,t,a)).elementType=T,e.lanes=o,e;case D:return qu(n,a,o,t);case M:return(e=ju(24,n,t,a)).elementType=M,e.lanes=o,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case C:l=10;break e;case _:l=9;break e;case O:l=11;break e;case L:l=14;break e;case R:l=16,r=null;break e;case P:l=22;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=ju(l,n,t,a)).elementType=e,t.type=r,t.lanes=o,t}function Vu(e,t,n,r){return(e=ju(7,e,r,t)).lanes=n,e}function qu(e,t,n,r){return(e=ju(23,e,r,t)).elementType=D,e.lanes=n,e}function Wu(e,t,n){return(e=ju(6,e,null,t)).lanes=n,e}function Zu(e,t,n){return(t=ju(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Yu(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=jt(0),this.expirationTimes=jt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=jt(0),this.mutableSourceEagerHydrationData=null}function Ku(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:k,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Xu(e,t,n,r){var a=t.current,o=su(),l=cu(a);e:if(n){t:{if(Ye(n=n._reactInternals)!==n||1!==n.tag)throw Error(i(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(ga(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(i(171))}if(1===n.tag){var s=n.type;if(ga(s)){n=ba(n,s,u);break e}}n=u}else n=da;return null===t.context?t.context=n:t.pendingContext=n,(t=so(o,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),co(a,t),du(a,l,o),l}function Qu(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Ju(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function es(e,t){Ju(e,t),(e=e.alternate)&&Ju(e,t)}function ts(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new Yu(e,t,null!=n&&!0===n.hydrate),t=ju(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,lo(t),e[Jr]=n.current,Tr(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var a=(t=r[e])._getVersion;a=a(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,a]:n.mutableSourceEagerHydrationData.push(t,a)}this._internalRoot=n}function ns(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function rs(e,t,n,r,a){var o=n._reactRootContainer;if(o){var i=o._internalRoot;if("function"==typeof a){var l=a;a=function(){var e=Qu(i);l.call(e)}}Xu(t,i,e,a)}else{if(o=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new ts(e,0,t?{hydrate:!0}:void 0)}(n,r),i=o._internalRoot,"function"==typeof a){var u=a;a=function(){var e=Qu(i);u.call(e)}}yu((function(){Xu(t,i,e,a)}))}return Qu(i)}function as(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ns(t))throw Error(i(200));return Ku(e,t,null,n)}Vl=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||pa.current)Ui=!0;else{if(0==(n&r)){switch(Ui=!1,t.tag){case 3:qi(t),Wo();break;case 5:Fo(t);break;case 1:ga(t.type)&&Ea(t);break;case 4:Ro(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var a=t.type._context;ca(Xa,a._currentValue),a._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?Xi(e,t,n):(ca(Do,1&Do.current),null!==(t=nl(e,t,n))?t.sibling:null);ca(Do,1&Do.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return tl(e,t,n);t.flags|=64}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),ca(Do,Do.current),r)break;return null;case 23:case 24:return t.lanes=0,ji(e,t,n)}return nl(e,t,n)}Ui=0!=(16384&e.flags)}else Ui=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=ha(t,fa.current),ao(t,n),a=ii(null,t,r,e,a,n),t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,ga(r)){var o=!0;Ea(t)}else o=!1;t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,lo(t);var l=r.getDerivedStateFromProps;"function"==typeof l&&go(t,r,l,e),a.updater=vo,t.stateNode=a,a._reactInternals=t,xo(t,r,e,n),t=Vi(null,t,r,!0,o,n)}else t.tag=0,Di(null,t,a,n),t=t.child;return t;case 16:a=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=(o=a._init)(a._payload),t.type=a,o=t.tag=function(e){if("function"==typeof e)return $u(e)?1:0;if(null!=e){if((e=e.$$typeof)===O)return 11;if(e===L)return 14}return 2}(a),e=Ka(a,e),o){case 0:t=Gi(null,t,a,e,n);break e;case 1:t=Hi(null,t,a,e,n);break e;case 11:t=Mi(null,t,a,e,n);break e;case 14:t=zi(null,t,a,Ka(a.type,e),r,n);break e}throw Error(i(306,a,""))}return t;case 0:return r=t.type,a=t.pendingProps,Gi(e,t,r,a=t.elementType===r?a:Ka(r,a),n);case 1:return r=t.type,a=t.pendingProps,Hi(e,t,r,a=t.elementType===r?a:Ka(r,a),n);case 3:if(qi(t),r=t.updateQueue,null===e||null===r)throw Error(i(282));if(r=t.pendingProps,a=null!==(a=t.memoizedState)?a.element:null,uo(e,t),po(t,r,null,n),(r=t.memoizedState.element)===a)Wo(),t=nl(e,t,n);else{if((o=(a=t.stateNode).hydrate)&&(Bo=Wr(t.stateNode.containerInfo.firstChild),zo=t,o=jo=!0),o){if(null!=(e=a.mutableSourceEagerHydrationData))for(a=0;a<e.length;a+=2)(o=e[a])._workInProgressVersionPrimary=e[a+1],Zo.push(o);for(n=Co(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else Di(e,t,r,n),Wo();t=t.child}return t;case 5:return Fo(t),null===e&&Ho(t),r=t.type,a=t.pendingProps,o=null!==e?e.memoizedProps:null,l=a.children,Gr(r,a)?l=null:null!==o&&Gr(r,o)&&(t.flags|=16),$i(e,t),Di(e,t,l,n),t.child;case 6:return null===e&&Ho(t),null;case 13:return Xi(e,t,n);case 4:return Ro(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Ao(t,null,r,n):Di(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,Mi(e,t,r,a=t.elementType===r?a:Ka(r,a),n);case 7:return Di(e,t,t.pendingProps,n),t.child;case 8:case 12:return Di(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,a=t.pendingProps,l=t.memoizedProps,o=a.value;var u=t.type._context;if(ca(Xa,u._currentValue),u._currentValue=o,null!==l)if(u=l.value,0==(o=sr(u,o)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,o):1073741823))){if(l.children===a.children&&!pa.current){t=nl(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var s=u.dependencies;if(null!==s){l=u.child;for(var c=s.firstContext;null!==c;){if(c.context===r&&0!=(c.observedBits&o)){1===u.tag&&((c=so(-1,n&-n)).tag=2,co(u,c)),u.lanes|=n,null!==(c=u.alternate)&&(c.lanes|=n),ro(u.return,n),s.lanes|=n;break}c=c.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}Di(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=(o=t.pendingProps).children,ao(t,n),r=r(a=oo(a,o.unstable_observedBits)),t.flags|=1,Di(e,t,r,n),t.child;case 14:return o=Ka(a=t.type,t.pendingProps),zi(e,t,a,o=Ka(a.type,o),r,n);case 15:return Bi(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:Ka(r,a),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,ga(r)?(e=!0,Ea(t)):e=!1,ao(t,n),bo(t,r,a),xo(t,r,a,n),Vi(null,t,r,!0,e,n);case 19:return tl(e,t,n);case 23:case 24:return ji(e,t,n)}throw Error(i(156,t.tag))},ts.prototype.render=function(e){Xu(e,this._internalRoot,null,null)},ts.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Xu(null,e,null,(function(){t[Jr]=null}))},et=function(e){13===e.tag&&(du(e,4,su()),es(e,4))},tt=function(e){13===e.tag&&(du(e,67108864,su()),es(e,67108864))},nt=function(e){if(13===e.tag){var t=su(),n=cu(e);du(e,n,t),es(e,n)}},rt=function(e,t){return t()},Ae=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=aa(r);if(!a)throw Error(i(90));X(r),ne(r,a)}}}break;case"textarea":se(e,n);break;case"select":null!=(t=n.value)&&ie(e,!!n.multiple,t,!1)}},Le=vu,Re=function(e,t,n,r,a){var o=Ol;Ol|=4;try{return Va(98,e.bind(null,t,n,r,a))}finally{0===(Ol=o)&&(Hl(),Wa())}},Pe=function(){0==(49&Ol)&&(function(){if(null!==tu){var e=tu;tu=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,pu(e,$a())}))}Wa()}(),Lu())},Fe=function(e,t){var n=Ol;Ol|=2;try{return e(t)}finally{0===(Ol=n)&&(Hl(),Wa())}};var os={Events:[na,ra,aa,Ie,Te,Lu,{current:!1}]},is={findFiberByHostInstance:ta,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},ls={bundleType:is.bundleType,version:is.version,rendererPackageName:is.rendererPackageName,rendererConfig:is.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:x.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Qe(e))?null:e.stateNode},findFiberByHostInstance:is.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var us=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!us.isDisabled&&us.supportsFiber)try{wa=us.inject(ls),ka=us}catch(he){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=os,t.createPortal=as,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(i(188));throw Error(i(268,Object.keys(e)))}return null===(e=Qe(t))?null:e.stateNode},t.flushSync=function(e,t){var n=Ol;if(0!=(48&n))return e(t);Ol|=1;try{if(e)return Va(99,e.bind(null,t))}finally{Ol=n,Wa()}},t.hydrate=function(e,t,n){if(!ns(t))throw Error(i(200));return rs(null,e,t,!0,n)},t.render=function(e,t,n){if(!ns(t))throw Error(i(200));return rs(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!ns(e))throw Error(i(40));return!!e._reactRootContainer&&(yu((function(){rs(null,null,e,!1,(function(){e._reactRootContainer=null,e[Jr]=null}))})),!0)},t.unstable_batchedUpdates=vu,t.unstable_createPortal=function(e,t){return as(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!ns(n))throw Error(i(200));if(null==e||void 0===e._reactInternals)throw Error(i(38));return rs(e,t,n,!1,r)},t.version="17.0.2"},3935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(4448)},4203:(e,t)=>{"use strict";var n,r,a,o;if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var l=Date,u=l.now();t.unstable_now=function(){return l.now()-u}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var s=null,c=null,d=function(){if(null!==s)try{var e=t.unstable_now();s(!0,e),s=null}catch(e){throw setTimeout(d,0),e}};n=function(e){null!==s?setTimeout(n,0,e):(s=e,setTimeout(d,0))},r=function(e,t){c=setTimeout(e,t)},a=function(){clearTimeout(c)},t.unstable_shouldYield=function(){return!1},o=t.unstable_forceFrameRate=function(){}}else{var f=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var m=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof m&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var h=!1,g=null,v=-1,y=5,b=0;t.unstable_shouldYield=function(){return t.unstable_now()>=b},o=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):y=0<e?Math.floor(1e3/e):5};var E=new MessageChannel,x=E.port2;E.port1.onmessage=function(){if(null!==g){var e=t.unstable_now();b=e+y;try{g(!0,e)?x.postMessage(null):(h=!1,g=null)}catch(e){throw x.postMessage(null),e}}else h=!1},n=function(e){g=e,h||(h=!0,x.postMessage(null))},r=function(e,n){v=f((function(){e(t.unstable_now())}),n)},a=function(){p(v),v=-1}}function w(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,a=e[r];if(!(void 0!==a&&0<N(a,t)))break e;e[r]=t,e[n]=a,n=r}}function k(e){return void 0===(e=e[0])?null:e}function S(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length;r<a;){var o=2*(r+1)-1,i=e[o],l=o+1,u=e[l];if(void 0!==i&&0>N(i,n))void 0!==u&&0>N(u,i)?(e[r]=u,e[l]=n,r=l):(e[r]=i,e[o]=n,r=o);else{if(!(void 0!==u&&0>N(u,n)))break e;e[r]=u,e[l]=n,r=l}}}return t}return null}function N(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var A=[],C=[],_=1,O=null,I=3,T=!1,L=!1,R=!1;function P(e){for(var t=k(C);null!==t;){if(null===t.callback)S(C);else{if(!(t.startTime<=e))break;S(C),t.sortIndex=t.expirationTime,w(A,t)}t=k(C)}}function F(e){if(R=!1,P(e),!L)if(null!==k(A))L=!0,n(U);else{var t=k(C);null!==t&&r(F,t.startTime-e)}}function U(e,n){L=!1,R&&(R=!1,a()),T=!0;var o=I;try{for(P(n),O=k(A);null!==O&&(!(O.expirationTime>n)||e&&!t.unstable_shouldYield());){var i=O.callback;if("function"==typeof i){O.callback=null,I=O.priorityLevel;var l=i(O.expirationTime<=n);n=t.unstable_now(),"function"==typeof l?O.callback=l:O===k(A)&&S(A),P(n)}else S(A);O=k(A)}if(null!==O)var u=!0;else{var s=k(C);null!==s&&r(F,s.startTime-n),u=!1}return u}finally{O=null,I=o,T=!1}}var D=o;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){L||T||(L=!0,n(U))},t.unstable_getCurrentPriorityLevel=function(){return I},t.unstable_getFirstCallbackNode=function(){return k(A)},t.unstable_next=function(e){switch(I){case 1:case 2:case 3:var t=3;break;default:t=I}var n=I;I=t;try{return e()}finally{I=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=D,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=I;I=e;try{return t()}finally{I=n}},t.unstable_scheduleCallback=function(e,o,i){var l=t.unstable_now();switch(i="object"==typeof i&&null!==i&&"number"==typeof(i=i.delay)&&0<i?l+i:l,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:_++,callback:o,priorityLevel:e,startTime:i,expirationTime:u=i+u,sortIndex:-1},i>l?(e.sortIndex=i,w(C,e),null===k(A)&&e===k(C)&&(R?a():R=!0,r(F,i-l))):(e.sortIndex=u,w(A,e),L||T||(L=!0,n(U))),e},t.unstable_wrapCallback=function(e){var t=I;return function(){var n=I;I=t;try{return e.apply(this,arguments)}finally{I=n}}}},4142:(e,t,n)=>{"use strict";e.exports=n(4203)},9921:(e,t)=>{"use strict";var n="function"==typeof Symbol&&Symbol.for,r=n?Symbol.for("react.element"):60103,a=n?Symbol.for("react.portal"):60106,o=n?Symbol.for("react.fragment"):60107,i=n?Symbol.for("react.strict_mode"):60108,l=n?Symbol.for("react.profiler"):60114,u=n?Symbol.for("react.provider"):60109,s=n?Symbol.for("react.context"):60110,c=n?Symbol.for("react.async_mode"):60111,d=n?Symbol.for("react.concurrent_mode"):60111,f=n?Symbol.for("react.forward_ref"):60112,p=n?Symbol.for("react.suspense"):60113,m=n?Symbol.for("react.suspense_list"):60120,h=n?Symbol.for("react.memo"):60115,g=n?Symbol.for("react.lazy"):60116,v=n?Symbol.for("react.block"):60121,y=n?Symbol.for("react.fundamental"):60117,b=n?Symbol.for("react.responder"):60118,E=n?Symbol.for("react.scope"):60119;function x(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case c:case d:case o:case l:case i:case p:return e;default:switch(e=e&&e.$$typeof){case s:case f:case g:case h:case u:return e;default:return t}}case a:return t}}}function w(e){return x(e)===d}t.AsyncMode=c,t.ConcurrentMode=d,t.ContextConsumer=s,t.ContextProvider=u,t.Element=r,t.ForwardRef=f,t.Fragment=o,t.Lazy=g,t.Memo=h,t.Portal=a,t.Profiler=l,t.StrictMode=i,t.Suspense=p,t.isAsyncMode=function(e){return w(e)||x(e)===c},t.isConcurrentMode=w,t.isContextConsumer=function(e){return x(e)===s},t.isContextProvider=function(e){return x(e)===u},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return x(e)===f},t.isFragment=function(e){return x(e)===o},t.isLazy=function(e){return x(e)===g},t.isMemo=function(e){return x(e)===h},t.isPortal=function(e){return x(e)===a},t.isProfiler=function(e){return x(e)===l},t.isStrictMode=function(e){return x(e)===i},t.isSuspense=function(e){return x(e)===p},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===o||e===d||e===l||e===i||e===p||e===m||"object"==typeof e&&null!==e&&(e.$$typeof===g||e.$$typeof===h||e.$$typeof===u||e.$$typeof===s||e.$$typeof===f||e.$$typeof===y||e.$$typeof===b||e.$$typeof===E||e.$$typeof===v)},t.typeOf=x},9864:(e,t,n)=>{"use strict";e.exports=n(9921)},6585:e=>{e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},9658:(e,t,n)=>{var r=n(6585);e.exports=function e(t,n,a){return r(n)||(a=n||a,n=[]),a=a||{},t instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return c(e,t)}(t,n):r(t)?function(t,n,r){for(var a=[],o=0;o<t.length;o++)a.push(e(t[o],n,r).source);return c(new RegExp("(?:"+a.join("|")+")",d(r)),n)}(t,n,a):function(e,t,n){return f(o(e,n),t,n)}(t,n,a)},e.exports.parse=o,e.exports.compile=function(e,t){return l(o(e,t),t)},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=f;var a=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function o(e,t){for(var n,r=[],o=0,i=0,l="",c=t&&t.delimiter||"/";null!=(n=a.exec(e));){var d=n[0],f=n[1],p=n.index;if(l+=e.slice(i,p),i=p+d.length,f)l+=f[1];else{var m=e[i],h=n[2],g=n[3],v=n[4],y=n[5],b=n[6],E=n[7];l&&(r.push(l),l="");var x=null!=h&&null!=m&&m!==h,w="+"===b||"*"===b,k="?"===b||"*"===b,S=n[2]||c,N=v||y;r.push({name:g||o++,prefix:h||"",delimiter:S,optional:k,repeat:w,partial:x,asterisk:!!E,pattern:N?s(N):E?".*":"[^"+u(S)+"]+?"})}}return i<e.length&&(l+=e.substr(i)),l&&r.push(l),r}function i(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function l(e,t){for(var n=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(n[a]=new RegExp("^(?:"+e[a].pattern+")$",d(t)));return function(t,a){for(var o="",l=t||{},u=(a||{}).pretty?i:encodeURIComponent,s=0;s<e.length;s++){var c=e[s];if("string"!=typeof c){var d,f=l[c.name];if(null==f){if(c.optional){c.partial&&(o+=c.prefix);continue}throw new TypeError('Expected "'+c.name+'" to be defined')}if(r(f)){if(!c.repeat)throw new TypeError('Expected "'+c.name+'" to not repeat, but received `'+JSON.stringify(f)+"`");if(0===f.length){if(c.optional)continue;throw new TypeError('Expected "'+c.name+'" to not be empty')}for(var p=0;p<f.length;p++){if(d=u(f[p]),!n[s].test(d))throw new TypeError('Expected all "'+c.name+'" to match "'+c.pattern+'", but received `'+JSON.stringify(d)+"`");o+=(0===p?c.prefix:c.delimiter)+d}}else{if(d=c.asterisk?encodeURI(f).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(f),!n[s].test(d))throw new TypeError('Expected "'+c.name+'" to match "'+c.pattern+'", but received "'+d+'"');o+=c.prefix+d}}else o+=c}return o}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function s(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function c(e,t){return e.keys=t,e}function d(e){return e&&e.sensitive?"":"i"}function f(e,t,n){r(t)||(n=t||n,t=[]);for(var a=(n=n||{}).strict,o=!1!==n.end,i="",l=0;l<e.length;l++){var s=e[l];if("string"==typeof s)i+=u(s);else{var f=u(s.prefix),p="(?:"+s.pattern+")";t.push(s),s.repeat&&(p+="(?:"+f+p+")*"),i+=p=s.optional?s.partial?f+"("+p+")?":"(?:"+f+"("+p+"))?":f+"("+p+")"}}var m=u(n.delimiter||"/"),h=i.slice(-m.length)===m;return a||(i=(h?i.slice(0,-m.length):i)+"(?:"+m+"(?=$))?"),i+=o?"$":a&&h?"":"(?="+m+"|$)",c(new RegExp("^"+i,d(n)),t)}},2408:(e,t,n)=>{"use strict";var r=n(7418),a=60103,o=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var i=60109,l=60110,u=60112;t.Suspense=60113;var s=60115,c=60116;if("function"==typeof Symbol&&Symbol.for){var d=Symbol.for;a=d("react.element"),o=d("react.portal"),t.Fragment=d("react.fragment"),t.StrictMode=d("react.strict_mode"),t.Profiler=d("react.profiler"),i=d("react.provider"),l=d("react.context"),u=d("react.forward_ref"),t.Suspense=d("react.suspense"),s=d("react.memo"),c=d("react.lazy")}var f="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},h={};function g(e,t,n){this.props=e,this.context=t,this.refs=h,this.updater=n||m}function v(){}function y(e,t,n){this.props=e,this.context=t,this.refs=h,this.updater=n||m}g.prototype.isReactComponent={},g.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},g.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=g.prototype;var b=y.prototype=new v;b.constructor=y,r(b,g.prototype),b.isPureReactComponent=!0;var E={current:null},x=Object.prototype.hasOwnProperty,w={key:!0,ref:!0,__self:!0,__source:!0};function k(e,t,n){var r,o={},i=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)x.call(t,r)&&!w.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];o.children=s}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:a,type:e,key:i,ref:l,props:o,_owner:E.current}}function S(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var N=/\/+/g;function A(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function C(e,t,n,r,i){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var u=!1;if(null===e)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case a:case o:u=!0}}if(u)return i=i(u=e),e=""===r?"."+A(u,0):r,Array.isArray(i)?(n="",null!=e&&(n=e.replace(N,"$&/")+"/"),C(i,t,n,"",(function(e){return e}))):null!=i&&(S(i)&&(i=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,n+(!i.key||u&&u.key===i.key?"":(""+i.key).replace(N,"$&/")+"/")+e)),t.push(i)),1;if(u=0,r=""===r?".":r+":",Array.isArray(e))for(var s=0;s<e.length;s++){var c=r+A(l=e[s],s);u+=C(l,t,n,c,i)}else if(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=f&&e[f]||e["@@iterator"])?e:null}(e),"function"==typeof c)for(e=c.call(e),s=0;!(l=e.next()).done;)u+=C(l=l.value,t,n,c=r+A(l,s++),i);else if("object"===l)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function _(e,t,n){if(null==e)return e;var r=[],a=0;return C(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function O(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var I={current:null};function T(){var e=I.current;if(null===e)throw Error(p(321));return e}var L={ReactCurrentDispatcher:I,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:E,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:_,forEach:function(e,t,n){_(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return _(e,(function(){t++})),t},toArray:function(e){return _(e,(function(e){return e}))||[]},only:function(e){if(!S(e))throw Error(p(143));return e}},t.Component=g,t.PureComponent=y,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=L,t.cloneElement=function(e,t,n){if(null==e)throw Error(p(267,e));var o=r({},e.props),i=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=E.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(c in t)x.call(t,c)&&!w.hasOwnProperty(c)&&(o[c]=void 0===t[c]&&void 0!==s?s[c]:t[c])}var c=arguments.length-2;if(1===c)o.children=n;else if(1<c){s=Array(c);for(var d=0;d<c;d++)s[d]=arguments[d+2];o.children=s}return{$$typeof:a,type:e.type,key:i,ref:l,props:o,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:l,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=k,t.createFactory=function(e){var t=k.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=S,t.lazy=function(e){return{$$typeof:c,_payload:{_status:-1,_result:e},_init:O}},t.memo=function(e,t){return{$$typeof:s,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return T().useCallback(e,t)},t.useContext=function(e,t){return T().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return T().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return T().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return T().useLayoutEffect(e,t)},t.useMemo=function(e,t){return T().useMemo(e,t)},t.useReducer=function(e,t,n){return T().useReducer(e,t,n)},t.useRef=function(e){return T().useRef(e)},t.useState=function(e){return T().useState(e)},t.version="17.0.2"},7294:(e,t,n)=>{"use strict";e.exports=n(2408)},1711:(e,t,n)=>{var r=n(977);"string"==typeof r&&(r=[[e.id,r,""]]);n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0}),r.locals&&(e.exports=r.locals)},5165:(e,t,n)=>{var r=n(5314);"string"==typeof r&&(r=[[e.id,r,""]]);n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0}),r.locals&&(e.exports=r.locals)},4046:(e,t,n)=>{var r=n(9458);"string"==typeof r&&(r=[[e.id,r,""]]);n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0}),r.locals&&(e.exports=r.locals)},9321:(e,t,n)=>{var r=n(297);"string"==typeof r&&(r=[[e.id,r,""]]);n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0}),r.locals&&(e.exports=r.locals)},2749:(e,t,n)=>{var r=n(6680);"string"==typeof r&&(r=[[e.id,r,""]]);n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0}),r.locals&&(e.exports=r.locals)},4243:(e,t,n)=>{var r=n(2550);"string"==typeof r&&(r=[[e.id,r,""]]);n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0}),r.locals&&(e.exports=r.locals)},2826:(e,t,n)=>{var r=n(2866);"string"==typeof r&&(r=[[e.id,r,""]]);n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0}),r.locals&&(e.exports=r.locals)},8643:(e,t,n)=>{var r=n(2710);"string"==typeof r&&(r=[[e.id,r,""]]);n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0}),r.locals&&(e.exports=r.locals)},3448:(e,t,n)=>{var r=n(8582);"string"==typeof r&&(r=[[e.id,r,""]]);n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0}),r.locals&&(e.exports=r.locals)},92:(e,t,n)=>{var r=n(149);"string"==typeof r&&(r=[[e.id,r,""]]);n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0}),r.locals&&(e.exports=r.locals)},4204:(e,t,n)=>{var r=n(4408);"string"==typeof r&&(r=[[e.id,r,""]]);n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0}),r.locals&&(e.exports=r.locals)},1117:(e,t,n)=>{var r=n(4092);"string"==typeof r&&(r=[[e.id,r,""]]);n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0}),r.locals&&(e.exports=r.locals)},7512:(e,t,n)=>{var r=n(5706);"string"==typeof r&&(r=[[e.id,r,""]]);n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0}),r.locals&&(e.exports=r.locals)},1601:(e,t,n)=>{var r=n(1828);"string"==typeof r&&(r=[[e.id,r,""]]);n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0}),r.locals&&(e.exports=r.locals)},2256:(e,t,n)=>{var r=n(4229);"string"==typeof r&&(r=[[e.id,r,""]]);n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0}),r.locals&&(e.exports=r.locals)},9959:(e,t,n)=>{var r=n(7953);"string"==typeof r&&(r=[[e.id,r,""]]);n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0}),r.locals&&(e.exports=r.locals)},949:(e,t,n)=>{var r=n(2935);"string"==typeof r&&(r=[[e.id,r,""]]);n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0}),r.locals&&(e.exports=r.locals)},944:(e,t,n)=>{var r=n(9031);"string"==typeof r&&(r=[[e.id,r,""]]);n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0}),r.locals&&(e.exports=r.locals)},9807:(e,t,n)=>{var r=n(9873);"string"==typeof r&&(r=[[e.id,r,""]]);n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0}),r.locals&&(e.exports=r.locals)},6534:(e,t,n)=>{var r=n(8124);"string"==typeof r&&(r=[[e.id,r,""]]);n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0}),r.locals&&(e.exports=r.locals)},8398:(e,t,n)=>{var r=n(4133);"string"==typeof r&&(r=[[e.id,r,""]]);n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0}),r.locals&&(e.exports=r.locals)},4430:(e,t,n)=>{var r=n(2566);"string"==typeof r&&(r=[[e.id,r,""]]);n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0}),r.locals&&(e.exports=r.locals)},3967:(e,t,n)=>{var r=n(2184);"string"==typeof r&&(r=[[e.id,r,""]]);n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0}),r.locals&&(e.exports=r.locals)},8710:(e,t,n)=>{var r=n(6988);"string"==typeof r&&(r=[[e.id,r,""]]);n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0}),r.locals&&(e.exports=r.locals)},6860:(e,t,n)=>{var r=n(5198);"string"==typeof r&&(r=[[e.id,r,""]]);n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0}),r.locals&&(e.exports=r.locals)},6723:(e,t,n)=>{var r,a,o={},i=(r=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===a&&(a=r.apply(this,arguments)),a}),l=function(e,t){return t?t.querySelector(e):document.querySelector(e)},u=function(e){var t={};return function(e,n){if("function"==typeof e)return e();if(void 0===t[e]){var r=l.call(this,e,n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}}(),s=null,c=0,d=[],f=n(1947);function p(e,t){for(var n=0;n<e.length;n++){var r=e[n],a=o[r.id];if(a){a.refs++;for(var i=0;i<a.parts.length;i++)a.parts[i](r.parts[i]);for(;i<r.parts.length;i++)a.parts.push(b(r.parts[i],t))}else{var l=[];for(i=0;i<r.parts.length;i++)l.push(b(r.parts[i],t));o[r.id]={id:r.id,refs:1,parts:l}}}}function m(e,t){for(var n=[],r={},a=0;a<e.length;a++){var o=e[a],i=t.base?o[0]+t.base:o[0],l={css:o[1],media:o[2],sourceMap:o[3]};r[i]?r[i].parts.push(l):n.push(r[i]={id:i,parts:[l]})}return n}function h(e,t){var n=u(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=d[d.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),d.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var a=u(e.insertAt.before,n);n.insertBefore(t,a)}}function g(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=d.indexOf(e);t>=0&&d.splice(t,1)}function v(e){var t=document.createElement("style");if(void 0===e.attrs.type&&(e.attrs.type="text/css"),void 0===e.attrs.nonce){var r=n.nc;r&&(e.attrs.nonce=r)}return y(t,e.attrs),h(e,t),t}function y(e,t){Object.keys(t).forEach((function(n){e.setAttribute(n,t[n])}))}function b(e,t){var n,r,a,o;if(t.transform&&e.css){if(!(o="function"==typeof t.transform?t.transform(e.css):t.transform.default(e.css)))return function(){};e.css=o}if(t.singleton){var i=c++;n=s||(s=v(t)),r=w.bind(null,n,i,!1),a=w.bind(null,n,i,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",y(t,e.attrs),h(e,t),t}(t),r=S.bind(null,n,t),a=function(){g(n),n.href&&URL.revokeObjectURL(n.href)}):(n=v(t),r=k.bind(null,n),a=function(){g(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else a()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=i()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=m(e,t);return p(n,t),function(e){for(var r=[],a=0;a<n.length;a++){var i=n[a];(l=o[i.id]).refs--,r.push(l)}for(e&&p(m(e,t),t),a=0;a<r.length;a++){var l;if(0===(l=r[a]).refs){for(var u=0;u<l.parts.length;u++)l.parts[u]();delete o[l.id]}}}};var E,x=(E=[],function(e,t){return E[e]=t,E.filter(Boolean).join("\n")});function w(e,t,n,r){var a=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=x(t,a);else{var o=document.createTextNode(a),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(o,i[t]):e.appendChild(o)}}function k(e,t){var n=t.css,r=t.media;if(r&&e.setAttribute("media",r),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}function S(e,t,n){var r=n.css,a=n.sourceMap,o=void 0===t.convertToAbsoluteUrls&&a;(t.convertToAbsoluteUrls||o)&&(r=f(r)),a&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */");var i=new Blob([r],{type:"text/css"}),l=e.href;e.href=URL.createObjectURL(i),l&&URL.revokeObjectURL(l)}},1947:e=>{e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,(function(e,t){var a,o=t.trim().replace(/^"(.*)"$/,(function(e,t){return t})).replace(/^'(.*)'$/,(function(e,t){return t}));return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(o)?e:(a=0===o.indexOf("//")?o:0===o.indexOf("/")?n+o:r+o.replace(/^\.\//,""),"url("+JSON.stringify(a)+")")}))}},7854:function(e,t,n){e.exports=function(){"use strict";var e=function(e){var t=e.id,n=e.viewBox,r=e.content;this.id=t,this.viewBox=n,this.content=r};e.prototype.stringify=function(){return this.content},e.prototype.toString=function(){return this.stringify()},e.prototype.destroy=function(){var e=this;["id","viewBox","content"].forEach((function(t){return delete e[t]}))};function t(e,t){return e(t={exports:{}},t.exports),t.exports}"undefined"!=typeof window?window:void 0!==n.g?n.g:"undefined"!=typeof self&&self;var r=t((function(e,t){e.exports=function(){function e(e){return e&&"object"==typeof e&&"[object RegExp]"!==Object.prototype.toString.call(e)&&"[object Date]"!==Object.prototype.toString.call(e)}function t(e){return Array.isArray(e)?[]:{}}function n(n,r){return r&&!0===r.clone&&e(n)?o(t(n),n,r):n}function r(t,r,a){var i=t.slice();return r.forEach((function(r,l){void 0===i[l]?i[l]=n(r,a):e(r)?i[l]=o(t[l],r,a):-1===t.indexOf(r)&&i.push(n(r,a))})),i}function a(t,r,a){var i={};return e(t)&&Object.keys(t).forEach((function(e){i[e]=n(t[e],a)})),Object.keys(r).forEach((function(l){e(r[l])&&t[l]?i[l]=o(t[l],r[l],a):i[l]=n(r[l],a)})),i}function o(e,t,o){var i=Array.isArray(t),l=(o||{arrayMerge:r}).arrayMerge||r;return i?Array.isArray(e)?l(e,t,o):n(t,o):a(e,t,o)}return o.all=function(e,t){if(!Array.isArray(e)||e.length<2)throw new Error("first argument should be an array with at least two elements");return e.reduce((function(e,n){return o(e,n,t)}))},o}()})),a=t((function(e,t){t.default={svg:{name:"xmlns",uri:"http://www.w3.org/2000/svg"},xlink:{name:"xmlns:xlink",uri:"http://www.w3.org/1999/xlink"}},e.exports=t.default})),o=a.svg,i=a.xlink,l={};l[o.name]=o.uri,l[i.name]=i.uri;var u=function(e,t){return void 0===e&&(e=""),"<svg "+function(e){return Object.keys(e).map((function(t){return t+'="'+e[t].toString().replace(/"/g,"&quot;")+'"'})).join(" ")}(r(l,t||{}))+">"+e+"</svg>"},s=function(e){function t(){e.apply(this,arguments)}e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t;var n={isMounted:{}};return n.isMounted.get=function(){return!!this.node},t.createFromExistingNode=function(e){return new t({id:e.getAttribute("id"),viewBox:e.getAttribute("viewBox"),content:e.outerHTML})},t.prototype.destroy=function(){this.isMounted&&this.unmount(),e.prototype.destroy.call(this)},t.prototype.mount=function(e){if(this.isMounted)return this.node;var t="string"==typeof e?document.querySelector(e):e,n=this.render();return this.node=n,t.appendChild(n),n},t.prototype.render=function(){var e=this.stringify();return function(e){var t=!!document.importNode,n=(new DOMParser).parseFromString(e,"image/svg+xml").documentElement;return t?document.importNode(n,!0):n}(u(e)).childNodes[0]},t.prototype.unmount=function(){this.node.parentNode.removeChild(this.node)},Object.defineProperties(t.prototype,n),t}(e);return s}()},6570:(e,t,n)=>{var r=n(7854),a=n(5348),o=new r({id:"kj",use:"kj-usage",viewBox:"0 0 1024 1024",content:'<symbol class="icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="kj"><defs><style type="text/css"></style></defs><path d="M600.96 503.808L96 217.642667c-12.650667-7.168-10.666667-8.32-10.666667 6.08v570.197333c0 14.4-1.962667 13.248 10.666667 6.101333l504.96-286.165333c3.157333-1.792 5.546667-3.498667 7.232-5.034667a41.173333 41.173333 0 0 0-7.210667-5.013333zM42.666667 223.722667c0-47.146667 33.322667-66.453333 74.346666-43.2l505.002667 286.165333c41.066667 23.274667 41.045333 61.013333 0 84.266667L117.013333 837.162667C75.946667 860.416 42.666667 841.002667 42.666667 793.92V223.722667z m362.304 32.725333a21.333333 21.333333 0 1 1-42.666667-0.170667l0.042667-9.045333c0.234667-63.402667 51.221333-92.949333 106.410666-61.653333L938.325333 451.626667c55.445333 31.402667 55.445333 89.856 0 121.258666l-469.546666 266.090667c-55.232 31.274667-106.176 1.578667-106.325334-61.888v-8.682667a21.333333 21.333333 0 1 1 42.666667-0.106666v8.682666c0.085333 30.869333 15.829333 40.042667 42.602667 24.874667l469.568-266.090667c26.602667-15.061333 26.602667-31.957333 0-47.018666l-469.546667-266.090667c-26.837333-15.189333-42.624-6.058667-42.730667 24.725333l-0.042666 9.045334z" fill="#1296db" p-id="3000" /></symbol>'});a.add(o),e.exports=o},2645:(e,t,n)=>{var r=n(7854),a=n(5348),o=new r({id:"baidu",use:"baidu-usage",viewBox:"0 0 1024 1024",content:'<symbol class="icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="baidu"><defs><style type="text/css"></style></defs><path d="M345.706 297.423c15.35 12.792 35.817 20.467 53.726 17.908 20.467 0 38.375-10.233 53.725-23.025 17.91-15.35 30.7-35.817 40.934-58.842C512 189.97 512 136.245 496.65 90.194c-10.234-30.7-28.142-58.842-53.726-76.75C427.574 3.21 404.548-1.906 384.081 0.652c-12.791 2.558-25.583 7.675-38.375 15.35-23.025 15.35-38.376 40.934-48.61 66.518-12.791 46.05-15.35 92.101-2.557 138.152 10.233 28.142 25.583 56.284 51.167 76.75z m255.837 2.558c17.909 15.35 40.934 25.584 63.96 25.584 20.466 2.558 38.375-2.558 56.283-12.792 17.909-10.233 33.26-25.584 43.493-43.492 12.792-20.467 23.025-40.934 30.7-63.96 5.117-17.908 7.675-38.375 5.117-58.842-2.559-28.142-15.35-53.726-33.259-76.751-12.792-15.35-28.142-30.7-46.05-38.376-12.792-5.116-28.143-10.233-40.935-7.675-17.908 2.559-33.258 12.792-46.05 23.026-17.909 15.35-33.259 33.258-43.493 53.725-10.233 17.909-20.466 38.376-23.025 61.401-2.558 25.584-2.558 51.168 2.559 74.193 5.116 23.025 12.791 46.05 30.7 63.96zM245.929 509.768c17.91-15.35 28.143-35.818 35.818-56.285 10.233-33.258 10.233-66.517 7.675-99.776 0-12.792-5.117-25.584-10.234-38.376-12.792-28.142-35.817-53.725-63.959-69.076-23.025-10.233-46.05-15.35-66.518-10.233-25.583 2.558-46.05 20.467-61.4 40.934-20.467 28.142-30.7 63.96-35.818 97.218-2.558 20.467 0 40.934 5.117 61.4 7.675 30.701 23.025 58.843 46.05 79.31 17.91 15.35 40.935 23.026 63.96 23.026 28.142 0 56.284-7.675 79.31-28.142z m736.811-76.752c-2.558-20.467-7.675-38.375-17.908-56.284-10.234-20.467-28.143-40.934-48.61-51.167-23.025-12.792-51.167-15.35-76.75-12.792-12.792 2.558-28.143 5.117-40.935 12.792-17.908 10.233-30.7 28.142-40.933 48.609-10.234 25.584-15.35 53.726-15.35 81.868 0 25.583 0 53.726 7.674 79.31 5.117 17.908 15.35 38.375 33.26 48.608 17.908 15.35 40.933 20.467 63.959 23.026 17.908 2.558 38.375 2.558 56.284-2.559 17.908-5.116 35.817-15.35 46.05-30.7 12.792-15.35 20.467-35.817 23.026-53.726 12.792-30.7 10.233-58.842 10.233-86.985zM911.106 819.33c-2.559-35.817-20.467-71.634-46.05-99.776-5.118-5.117-10.234-10.234-17.91-15.35-33.258-28.142-66.517-58.843-99.776-89.543-33.259-33.26-63.96-69.076-92.101-107.452-20.467-33.259-48.61-63.96-86.985-81.868-23.025-10.233-51.167-15.35-76.751-12.792-46.05 5.117-86.985 30.7-115.127 66.518-7.675 7.675-12.791 17.909-17.908 28.142-20.467 30.7-46.05 61.401-74.193 86.985-15.35 15.35-30.7 28.142-46.05 40.934-7.676 7.675-17.91 15.35-25.584 23.025-30.7 23.025-61.401 53.726-79.31 86.985-12.792 23.025-20.467 48.609-23.025 76.75 0 23.026 2.558 46.051 10.233 66.518 7.675 23.026 17.909 46.051 33.26 63.96 25.583 30.7 63.958 51.167 102.334 53.725 48.609 2.559 97.218 0 143.269-7.675 20.467-2.558 40.934-10.233 63.959-12.792 46.05-5.116 92.101-2.558 135.594 10.234 35.817 12.792 74.192 17.909 112.568 20.467 38.375 2.558 79.31-2.558 115.127-23.025 25.583-12.792 46.05-35.818 58.842-61.401 20.467-33.26 30.7-71.635 25.584-112.569zM481.3 924.224H363.615c-12.792 0-25.584 0-38.376-2.559-25.584-5.117-48.61-20.467-63.96-43.492-12.791-15.35-20.466-33.259-23.025-53.726a246.563 246.563 0 0 1 0-61.4c5.117-23.026 17.909-43.493 33.26-58.843 12.791-12.792 30.7-23.026 48.608-30.7 7.675-2.56 15.35-5.117 23.026-5.117h69.076v-97.219h66.517c2.559 120.244 2.559 237.929 2.559 353.056z m263.512 0H583.634c-17.908-2.559-33.258-7.676-46.05-17.909-15.35-12.792-23.026-33.259-23.026-51.167v-173.97h66.518v161.178c0 7.675 2.558 12.792 7.675 17.908 5.117 5.117 12.792 7.675 20.467 7.675h69.076V678.62h66.518v245.604z" fill="#306CFF" p-id="3127" /><path d="M340.59 734.904c-12.793 5.117-25.585 15.35-33.26 30.7-5.116 12.792-7.675 25.584-7.675 38.376 0 15.35 5.117 30.7 12.792 43.492 10.234 15.35 28.142 25.584 46.05 23.026h53.727V732.346H353.38c-2.558-2.559-7.675 0-12.792 2.558z" fill="#306CFF" p-id="3128" /></symbol>'});a.add(o),e.exports=o},2793:(e,t,n)=>{var r=n(7854),a=n(5348),o=new r({id:"cuowu",use:"cuowu-usage",viewBox:"0 0 1024 1024",content:'<symbol class="icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="cuowu"><defs><style type="text/css"></style></defs><path d="M169.444811 740.975033c-4.473054 4.473762-4.897693 11.303404-0.945964 15.255133l99.271341 99.270633c3.951375 3.951375 10.781371 3.528152 15.254779-0.944548L854.555189 283.025321c4.474116-4.474116 4.897339-11.304112 0.945964-15.255133l-99.271341-99.270987c-3.951375-3.951729-10.780308-3.528152-15.255133 0.945964L169.444811 740.975033z" fill="#4b4c4d" p-id="1989" /><path d="M283.024967 169.444457c-4.473762-4.473054-11.303404-4.897693-15.255133-0.945964l-99.270633 99.271341c-3.951375 3.951375-3.528152 10.781371 0.944548 15.254779L740.974679 854.555189c4.474116 4.474116 11.304466 4.897339 15.255133 0.945964l99.271341-99.271341c3.951375-3.951375 3.527798-10.780308-0.946318-15.255133L283.024967 169.444457z" fill="#4b4c4d" p-id="1990" /></symbol>'});a.add(o),e.exports=o},2065:(e,t,n)=>{var r=n(7854),a=n(5348),o=new r({id:"kj",use:"kj-usage",viewBox:"0 0 1024 1024",content:'<symbol class="icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="kj"><defs><style type="text/css"></style></defs><path d="M600.96 503.808L96 217.642667c-12.650667-7.168-10.666667-8.32-10.666667 6.08v570.197333c0 14.4-1.962667 13.248 10.666667 6.101333l504.96-286.165333c3.157333-1.792 5.546667-3.498667 7.232-5.034667a41.173333 41.173333 0 0 0-7.210667-5.013333zM42.666667 223.722667c0-47.146667 33.322667-66.453333 74.346666-43.2l505.002667 286.165333c41.066667 23.274667 41.045333 61.013333 0 84.266667L117.013333 837.162667C75.946667 860.416 42.666667 841.002667 42.666667 793.92V223.722667z m362.304 32.725333a21.333333 21.333333 0 1 1-42.666667-0.170667l0.042667-9.045333c0.234667-63.402667 51.221333-92.949333 106.410666-61.653333L938.325333 451.626667c55.445333 31.402667 55.445333 89.856 0 121.258666l-469.546666 266.090667c-55.232 31.274667-106.176 1.578667-106.325334-61.888v-8.682667a21.333333 21.333333 0 1 1 42.666667-0.106666v8.682666c0.085333 30.869333 15.829333 40.042667 42.602667 24.874667l469.568-266.090667c26.602667-15.061333 26.602667-31.957333 0-47.018666l-469.546667-266.090667c-26.837333-15.189333-42.624-6.058667-42.730667 24.725333l-0.042666 9.045334z" fill="#1296db" p-id="3000" /></symbol>'});a.add(o),e.exports=o},8339:(e,t,n)=>{var r=n(7854),a=n(5348),o=new r({id:"ks",use:"ks-usage",viewBox:"0 0 1048 1024",content:'<symbol class="icon" viewBox="0 0 1048 1024" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="ks"><defs><style type="text/css"></style></defs><path d="M359.966106 800.470016 816.001126 543.319962l35.088998-22.936986-35.725005-21.89097L359.509197 239.925043l0.380006 71.140045 0 442.83L359.966106 800.470016zM414.601114 335.592038 733.773107 521.152 414.601114 706.715034 414.601114 335.592zM524.2752 0.018022C241.516134 0.018022 12.288102 229.245952 12.288102 512.005018c0 112.735027 36.439962 216.958976 98.182042 301.539021l38.667981-40.257024C97.458176 699.231027 67.143168 609.159987 67.143168 512.005018c0-252.46505 204.668006-457.132032 457.132032-457.132032 252.45399 0 457.120973 204.668006 457.120973 457.132032 0 252.460954-204.668006 457.118003-457.120973 457.118003-96.240026 0-185.530982-29.744026-259.189965-80.534016l-34.539008 42.797978c83.15095 58.344038 184.438989 92.594995 293.728973 92.594995 282.755994 0 511.984026-229.220966 511.984026-511.976038C1036.258202 229.245952 807.03017 0.018022 524.2752 0.018022z" p-id="1263" fill="#1296db" /></symbol>'});a.add(o),e.exports=o},2563:(e,t,n)=>{var r=n(7854),a=n(5348),o=new r({id:"kt",use:"kt-usage",viewBox:"0 0 1024 1024",content:'<symbol class="icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="kt"><defs><style type="text/css"></style></defs><path d="M981.333333 223.722667v570.197333c0 47.082667-33.28 66.496-74.346666 43.221333L401.984 550.976c-41.045333-23.253333-41.066667-61.013333 0-84.266667L906.986667 180.501333C948.010667 157.269333 981.333333 176.597333 981.333333 223.722667z m-558.293333 280.106666a41.173333 41.173333 0 0 0-7.232 4.992c1.706667 1.536 4.074667 3.242667 7.210667 5.034667L928.021333 800c12.608 7.146667 10.645333 8.32 10.645334-6.101333V223.722667c0-14.4 1.984-13.226667-10.666667-6.08L423.04 503.808z m195.989333-247.381333l-0.042666-9.045333c-0.106667-30.784-15.893333-39.914667-42.709334-24.725334L106.709333 488.768c-26.602667 15.061333-26.602667 31.957333 0 47.018667l469.546667 266.090666c26.794667 15.168 42.538667 5.973333 42.624-24.874666v-8.682667a21.333333 21.333333 0 1 1 42.666667 0.106667v8.682666c-0.149333 63.466667-51.093333 93.162667-106.304 61.866667L85.674667 572.928c-55.445333-31.402667-55.445333-89.856 0-121.258667l469.546666-266.090666c55.210667-31.274667 106.197333-1.728 106.453334 61.674666v9.045334a21.333333 21.333333 0 1 1-42.666667 0.170666z" fill="#1296db" p-id="3868" /></symbol>'});a.add(o),e.exports=o},9292:(e,t,n)=>{var r=n(7854),a=n(5348),o=new r({id:"qq",use:"qq-usage",viewBox:"0 0 1024 1024",content:'<symbol class="icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="qq"><defs><style type="text/css"></style></defs><path d="M511.09761 957.257c-80.159 0-153.737-25.019-201.11-62.386-24.057 6.702-54.831 17.489-74.252 30.864-16.617 11.439-14.546 23.106-11.55 27.816 13.15 20.689 225.583 13.211 286.912 6.767v-3.061z" fill="#FAAD08" p-id="4207" /><path d="M496.65061 957.257c80.157 0 153.737-25.019 201.11-62.386 24.057 6.702 54.83 17.489 74.253 30.864 16.616 11.439 14.543 23.106 11.55 27.816-13.15 20.689-225.584 13.211-286.914 6.767v-3.061z" fill="#FAAD08" p-id="4208" /><path d="M497.12861 474.524c131.934-0.876 237.669-25.783 273.497-35.34 8.541-2.28 13.11-6.364 13.11-6.364 0.03-1.172 0.542-20.952 0.542-31.155C784.27761 229.833 701.12561 57.173 496.64061 57.162 292.15661 57.173 209.00061 229.832 209.00061 401.665c0 10.203 0.516 29.983 0.547 31.155 0 0 3.717 3.821 10.529 5.67 33.078 8.98 140.803 35.139 276.08 36.034h0.972z" fill="#000000" p-id="4209" /><path d="M860.28261 619.782c-8.12-26.086-19.204-56.506-30.427-85.72 0 0-6.456-0.795-9.718 0.148-100.71 29.205-222.773 47.818-315.792 46.695h-0.962C410.88561 582.017 289.65061 563.617 189.27961 534.698 185.44461 533.595 177.87261 534.063 177.87261 534.063 166.64961 563.276 155.56661 593.696 147.44761 619.782 108.72961 744.168 121.27261 795.644 130.82461 796.798c20.496 2.474 79.78-93.637 79.78-93.637 0 97.66 88.324 247.617 290.576 248.996a718.01 718.01 0 0 1 5.367 0C708.80161 950.778 797.12261 800.822 797.12261 703.162c0 0 59.284 96.111 79.783 93.637 9.55-1.154 22.093-52.63-16.623-177.017" fill="#000000" p-id="4210" /><path d="M434.38261 316.917c-27.9 1.24-51.745-30.106-53.24-69.956-1.518-39.877 19.858-73.207 47.764-74.454 27.875-1.224 51.703 30.109 53.218 69.974 1.527 39.877-19.853 73.2-47.742 74.436m206.67-69.956c-1.494 39.85-25.34 71.194-53.24 69.956-27.888-1.238-49.269-34.559-47.742-74.435 1.513-39.868 25.341-71.201 53.216-69.974 27.909 1.247 49.285 34.576 47.767 74.453" fill="#FFFFFF" p-id="4211" /><path d="M683.94261 368.627c-7.323-17.609-81.062-37.227-172.353-37.227h-0.98c-91.29 0-165.031 19.618-172.352 37.227a6.244 6.244 0 0 0-0.535 2.505c0 1.269 0.393 2.414 1.006 3.386 6.168 9.765 88.054 58.018 171.882 58.018h0.98c83.827 0 165.71-48.25 171.881-58.016a6.352 6.352 0 0 0 1.002-3.395c0-0.897-0.2-1.736-0.531-2.498" fill="#FAAD08" p-id="4212" /><path d="M467.63161 256.377c1.26 15.886-7.377 30-19.266 31.542-11.907 1.544-22.569-10.083-23.836-25.978-1.243-15.895 7.381-30.008 19.25-31.538 11.927-1.549 22.607 10.088 23.852 25.974m73.097 7.935c2.533-4.118 19.827-25.77 55.62-17.886 9.401 2.07 13.75 5.116 14.668 6.316 1.355 1.77 1.726 4.29 0.352 7.684-2.722 6.725-8.338 6.542-11.454 5.226-2.01-0.85-26.94-15.889-49.905 6.553-1.579 1.545-4.405 2.074-7.085 0.242-2.678-1.834-3.786-5.553-2.196-8.135" fill="#000000" p-id="4213" /><path d="M504.33261 584.495h-0.967c-63.568 0.752-140.646-7.504-215.286-21.92-6.391 36.262-10.25 81.838-6.936 136.196 8.37 137.384 91.62 223.736 220.118 224.996H506.48461c128.498-1.26 211.748-87.612 220.12-224.996 3.314-54.362-0.547-99.938-6.94-136.203-74.654 14.423-151.745 22.684-215.332 21.927" fill="#FFFFFF" p-id="4214" /><path d="M323.27461 577.016v137.468s64.957 12.705 130.031 3.91V591.59c-41.225-2.262-85.688-7.304-130.031-14.574" fill="#EB1C26" p-id="4215" /><path d="M788.09761 432.536s-121.98 40.387-283.743 41.539h-0.962c-161.497-1.147-283.328-41.401-283.744-41.539l-40.854 106.952c102.186 32.31 228.837 53.135 324.598 51.926l0.96-0.002c95.768 1.216 222.4-19.61 324.6-51.924l-40.855-106.952z" fill="#EB1C26" p-id="4216" /></symbol>'});a.add(o),e.exports=o},3101:(e,t,n)=>{var r=n(7854),a=n(5348),o=new r({id:"wechal",use:"wechal-usage",viewBox:"0 0 1024 1024",content:'<symbol class="icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="wechal"><defs><style type="text/css"></style></defs><path d="M512 1.896C229.452 1.896 0 229.452 0 512s229.452 510.104 512 510.104S1022.104 794.548 1022.104 512 794.548 1.896 512 1.896z m-91.022 629.57c-26.548 0-49.304-5.688-75.852-11.377l-75.852 37.926 22.756-66.37c-54.993-37.926-87.23-87.23-87.23-147.912 0-104.296 98.607-185.837 218.074-185.837 108.089 0 201.007 64.474 219.97 153.6-7.585 0-13.274-1.896-20.859-1.896-104.296 0-185.837 77.748-185.837 172.563 0 15.17 1.896 30.34 7.585 45.511-7.585 3.793-15.17 3.793-22.755 3.793z m322.37 77.749l17.067 54.992-58.785-34.133c-22.756 5.689-43.615 11.378-66.37 11.378-104.297 0-185.838-70.163-185.838-157.393S530.963 424.77 635.26 424.77c98.608 0 185.837 70.163 185.837 159.29 0 47.407-32.237 91.021-77.748 125.155z" fill="#46BB36" p-id="2191" /><path d="M318.578 379.26c0 17.066 13.274 30.34 30.34 30.34s30.341-13.274 30.341-30.34-13.274-30.341-30.34-30.341-30.341 13.274-30.341 30.34z m235.14 159.288c0 13.274 11.378 24.652 24.652 24.652 13.274 0 24.652-11.378 24.652-24.652 0-13.274-11.378-24.652-24.652-24.652-13.274-1.896-24.651 9.482-24.651 24.652z m-81.54-159.289c0 17.067 13.274 30.341 30.34 30.341 17.067 0 30.341-13.274 30.341-30.34 0-17.067-13.274-30.341-30.34-30.341-17.067 0-30.341 13.274-30.341 30.34zM675.08 538.55c0 13.273 11.378 24.651 24.652 24.651 13.274 0 24.652-11.378 24.652-24.652 0-13.274-11.378-24.652-24.652-24.652-13.274-1.896-24.652 9.482-24.652 24.652z" fill="#46BB36" p-id="2192" /></symbol>'});a.add(o),e.exports=o},8152:(e,t,n)=>{var r=n(7854),a=n(5348),o=new r({id:"zhifubao",use:"zhifubao-usage",viewBox:"0 0 1024 1024",content:'<symbol class="icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="zhifubao"><defs><style type="text/css"></style></defs><path d="M230.4 576.512c-12.288 9.728-25.088 24.064-28.672 41.984-5.12 24.576-1.024 55.296 22.528 79.872 28.672 29.184 72.704 37.376 91.648 38.912 51.2 3.584 105.984-22.016 147.456-50.688 16.384-11.264 44.032-34.304 70.144-69.632-59.392-30.72-133.632-64.512-212.48-61.44-40.448 1.536-69.632 9.728-90.624 20.992z m752.64 135.68c26.112-61.44 40.96-129.024 40.96-200.192C1024 229.888 794.112 0 512 0S0 229.888 0 512s229.888 512 512 512c170.496 0 321.536-83.968 414.72-211.968-88.064-43.52-232.96-115.712-322.56-159.232-42.496 48.64-105.472 97.28-176.64 118.272-44.544 13.312-84.992 18.432-126.976 9.728-41.984-8.704-72.704-28.16-90.624-47.616-9.216-10.24-19.456-22.528-27.136-37.888 0.512 1.024 1.024 2.048 1.024 3.072 0 0-4.608-7.68-7.68-19.456-1.536-6.144-3.072-11.776-3.584-17.92-0.512-4.096-0.512-8.704 0-12.8-0.512-7.68 0-15.872 1.536-24.064 4.096-20.48 12.8-44.032 35.328-65.536 49.152-48.128 114.688-50.688 148.992-50.176 50.176 0.512 138.24 22.528 211.968 48.64 20.48-43.52 33.792-90.112 41.984-121.344h-307.2v-33.28h157.696v-66.56H272.384V302.08h190.464V235.52c0-9.216 2.048-16.384 16.384-16.384h74.752V302.08h207.36v33.28h-207.36v66.56h165.888s-16.896 92.672-68.608 184.32c115.2 40.96 278.016 104.448 331.776 125.952z" fill="#06B4FD" p-id="2787" /></symbol>'});a.add(o),e.exports=o},8366:(e,t,n)=>{var r=n(7854),a=n(5348),o=new r({id:"zt",use:"zt-usage",viewBox:"0 0 1024 1024",content:'<symbol class="icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="zt"><defs><style type="text/css"></style></defs><path d="M512 1024C228.266667 1024 0 795.733333 0 512S228.266667 0 512 0s512 228.266667 512 512-228.266667 512-512 512z m0-42.666667c260.266667 0 469.333333-209.066667 469.333333-469.333333S772.266667 42.666667 512 42.666667 42.666667 251.733333 42.666667 512s209.066667 469.333333 469.333333 469.333333z m-106.666667-682.666666c12.8 0 21.333333 8.533333 21.333334 21.333333v384c0 12.8-8.533333 21.333333-21.333334 21.333333s-21.333333-8.533333-21.333333-21.333333V320c0-12.8 8.533333-21.333333 21.333333-21.333333z m213.333334 0c12.8 0 21.333333 8.533333 21.333333 21.333333v384c0 12.8-8.533333 21.333333-21.333333 21.333333s-21.333333-8.533333-21.333334-21.333333V320c0-12.8 8.533333-21.333333 21.333334-21.333333z" p-id="2141" fill="#1296db" /></symbol>'});a.add(o),e.exports=o},5348:function(e,t,n){e.exports=function(){"use strict";function e(e,t){return e(t={exports:{}},t.exports),t.exports}"undefined"!=typeof window?window:void 0!==n.g?n.g:"undefined"!=typeof self&&self;var t=e((function(e,t){e.exports=function(){function e(e){return e&&"object"==typeof e&&"[object RegExp]"!==Object.prototype.toString.call(e)&&"[object Date]"!==Object.prototype.toString.call(e)}function t(e){return Array.isArray(e)?[]:{}}function n(n,r){return r&&!0===r.clone&&e(n)?o(t(n),n,r):n}function r(t,r,a){var i=t.slice();return r.forEach((function(r,l){void 0===i[l]?i[l]=n(r,a):e(r)?i[l]=o(t[l],r,a):-1===t.indexOf(r)&&i.push(n(r,a))})),i}function a(t,r,a){var i={};return e(t)&&Object.keys(t).forEach((function(e){i[e]=n(t[e],a)})),Object.keys(r).forEach((function(l){e(r[l])&&t[l]?i[l]=o(t[l],r[l],a):i[l]=n(r[l],a)})),i}function o(e,t,o){var i=Array.isArray(t),l=(o||{arrayMerge:r}).arrayMerge||r;return i?Array.isArray(e)?l(e,t,o):n(t,o):a(e,t,o)}return o.all=function(e,t){if(!Array.isArray(e)||e.length<2)throw new Error("first argument should be an array with at least two elements");return e.reduce((function(e,n){return o(e,n,t)}))},o}()}));var r=e((function(e,t){t.default={svg:{name:"xmlns",uri:"http://www.w3.org/2000/svg"},xlink:{name:"xmlns:xlink",uri:"http://www.w3.org/1999/xlink"}},e.exports=t.default})),a=r.svg,o=r.xlink,i={};i[a.name]=a.uri,i[o.name]=o.uri;var l,u=function(e,n){return void 0===e&&(e=""),"<svg "+function(e){return Object.keys(e).map((function(t){return t+'="'+e[t].toString().replace(/"/g,"&quot;")+'"'})).join(" ")}(t(i,n||{}))+">"+e+"</svg>"},s=r.svg,c=r.xlink,d={attrs:(l={style:["position: absolute","width: 0","height: 0"].join("; "),"aria-hidden":"true"},l[s.name]=s.uri,l[c.name]=c.uri,l)},f=function(e){this.config=t(d,e||{}),this.symbols=[]};f.prototype.add=function(e){var t=this.symbols,n=this.find(e.id);return n?(t[t.indexOf(n)]=e,!1):(t.push(e),!0)},f.prototype.remove=function(e){var t=this.symbols,n=this.find(e);return!!n&&(t.splice(t.indexOf(n),1),n.destroy(),!0)},f.prototype.find=function(e){return this.symbols.filter((function(t){return t.id===e}))[0]||null},f.prototype.has=function(e){return null!==this.find(e)},f.prototype.stringify=function(){var e=this.config.attrs,t=this.symbols.map((function(e){return e.stringify()})).join("");return u(t,e)},f.prototype.toString=function(){return this.stringify()},f.prototype.destroy=function(){this.symbols.forEach((function(e){return e.destroy()}))};var p=function(e){var t=e.id,n=e.viewBox,r=e.content;this.id=t,this.viewBox=n,this.content=r};p.prototype.stringify=function(){return this.content},p.prototype.toString=function(){return this.stringify()},p.prototype.destroy=function(){var e=this;["id","viewBox","content"].forEach((function(t){return delete e[t]}))};var m=function(e){var t=!!document.importNode,n=(new DOMParser).parseFromString(e,"image/svg+xml").documentElement;return t?document.importNode(n,!0):n},h=function(e){function t(){e.apply(this,arguments)}e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t;var n={isMounted:{}};return n.isMounted.get=function(){return!!this.node},t.createFromExistingNode=function(e){return new t({id:e.getAttribute("id"),viewBox:e.getAttribute("viewBox"),content:e.outerHTML})},t.prototype.destroy=function(){this.isMounted&&this.unmount(),e.prototype.destroy.call(this)},t.prototype.mount=function(e){if(this.isMounted)return this.node;var t="string"==typeof e?document.querySelector(e):e,n=this.render();return this.node=n,t.appendChild(n),n},t.prototype.render=function(){var e=this.stringify();return m(u(e)).childNodes[0]},t.prototype.unmount=function(){this.node.parentNode.removeChild(this.node)},Object.defineProperties(t.prototype,n),t}(p),g={autoConfigure:!0,mountTo:"body",syncUrlsWithBaseTag:!1,listenLocationChangeEvent:!0,locationChangeEvent:"locationChange",locationChangeAngularEmitter:!1,usagesToUpdate:"use[*|href]",moveGradientsOutsideSymbol:!1},v=function(e){return Array.prototype.slice.call(e,0)},y=function(){return/firefox/i.test(navigator.userAgent)},b=function(){return/msie/i.test(navigator.userAgent)||/trident/i.test(navigator.userAgent)},E=function(){return/edge/i.test(navigator.userAgent)},x=function(e){return(e||window.location.href).split("#")[0]},w=function(e){angular.module("ng").run(["$rootScope",function(t){t.$on("$locationChangeSuccess",(function(t,n,r){var a,o,i;a=e,o={oldUrl:r,newUrl:n},(i=document.createEvent("CustomEvent")).initCustomEvent(a,!1,!1,o),window.dispatchEvent(i)}))}])},k=function(e,t){return void 0===t&&(t="linearGradient, radialGradient, pattern, mask, clipPath"),v(e.querySelectorAll("symbol")).forEach((function(e){v(e.querySelectorAll(t)).forEach((function(t){e.parentNode.insertBefore(t,e)}))})),e};var S=r.xlink.uri,N="xlink:href",A=/[{}|\\\^\[\]`"<>]/g;function C(e){return e.replace(A,(function(e){return"%"+e[0].charCodeAt(0).toString(16).toUpperCase()}))}var _,O=["clipPath","colorProfile","src","cursor","fill","filter","marker","markerStart","markerMid","markerEnd","mask","stroke","style"],I=O.map((function(e){return"["+e+"]"})).join(","),T=function(e,t,n,r){var a,o,i=C(n),l=C(r);(a=e.querySelectorAll(I),o=function(e){var t=e.localName,n=e.value;return-1!==O.indexOf(t)&&-1!==n.indexOf("url("+i)},v(a).reduce((function(e,t){if(!t.attributes)return e;var n=v(t.attributes),r=o?n.filter(o):n;return e.concat(r)}),[])).forEach((function(e){return e.value=e.value.replace(new RegExp(i.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),"g"),l)})),function(e,t,n){v(e).forEach((function(e){var r=e.getAttribute(N);if(r&&0===r.indexOf(t)){var a=r.replace(t,n);e.setAttributeNS(S,N,a)}}))}(t,i,l)},L="mount",R="symbol_mount",P=function(e){function n(n){var r=this;void 0===n&&(n={}),e.call(this,t(g,n));var a,o=(a=a||Object.create(null),{on:function(e,t){(a[e]||(a[e]=[])).push(t)},off:function(e,t){a[e]&&a[e].splice(a[e].indexOf(t)>>>0,1)},emit:function(e,t){(a[e]||[]).map((function(e){e(t)})),(a["*"]||[]).map((function(n){n(e,t)}))}});this._emitter=o,this.node=null;var i=this.config;if(i.autoConfigure&&this._autoConfigure(n),i.syncUrlsWithBaseTag){var l=document.getElementsByTagName("base")[0].getAttribute("href");o.on(L,(function(){return r.updateUrls("#",l)}))}var u=this._handleLocationChange.bind(this);this._handleLocationChange=u,i.listenLocationChangeEvent&&window.addEventListener(i.locationChangeEvent,u),i.locationChangeAngularEmitter&&w(i.locationChangeEvent),o.on(L,(function(e){i.moveGradientsOutsideSymbol&&k(e)})),o.on(R,(function(e){var t;i.moveGradientsOutsideSymbol&&k(e.parentNode),(b()||E())&&(t=[],v(e.querySelectorAll("style")).forEach((function(e){e.textContent+="",t.push(e)})))}))}e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n;var r={isMounted:{}};return r.isMounted.get=function(){return!!this.node},n.prototype._autoConfigure=function(e){var t=this.config;void 0===e.syncUrlsWithBaseTag&&(t.syncUrlsWithBaseTag=void 0!==document.getElementsByTagName("base")[0]),void 0===e.locationChangeAngularEmitter&&(t.locationChangeAngularEmitter=void 0!==window.angular),void 0===e.moveGradientsOutsideSymbol&&(t.moveGradientsOutsideSymbol=y())},n.prototype._handleLocationChange=function(e){var t=e.detail,n=t.oldUrl,r=t.newUrl;this.updateUrls(n,r)},n.prototype.add=function(t){var n=e.prototype.add.call(this,t);return this.isMounted&&n&&(t.mount(this.node),this._emitter.emit(R,t.node)),n},n.prototype.attach=function(e){var t=this,n=this;if(n.isMounted)return n.node;var r="string"==typeof e?document.querySelector(e):e;return n.node=r,this.symbols.forEach((function(e){e.mount(n.node),t._emitter.emit(R,e.node)})),v(r.querySelectorAll("symbol")).forEach((function(e){var t=h.createFromExistingNode(e);t.node=e,n.add(t)})),this._emitter.emit(L,r),r},n.prototype.destroy=function(){var e=this,t=e.config,n=e.symbols,r=e._emitter;n.forEach((function(e){return e.destroy()})),r.off("*"),window.removeEventListener(t.locationChangeEvent,this._handleLocationChange),this.isMounted&&this.unmount()},n.prototype.mount=function(e,t){void 0===e&&(e=this.config.mountTo),void 0===t&&(t=!1);var n=this;if(n.isMounted)return n.node;var r="string"==typeof e?document.querySelector(e):e,a=n.render();return this.node=a,t&&r.childNodes[0]?r.insertBefore(a,r.childNodes[0]):r.appendChild(a),this._emitter.emit(L,a),a},n.prototype.render=function(){return m(this.stringify())},n.prototype.unmount=function(){this.node.parentNode.removeChild(this.node)},n.prototype.updateUrls=function(e,t){if(!this.isMounted)return!1;var n=document.querySelectorAll(this.config.usagesToUpdate);return T(this.node,n,x(e)+"#",x(t)+"#"),!0},Object.defineProperties(n.prototype,r),n}(f),F=e((function(e){var t;t=function(){var e,t=[],n=document,r=n.documentElement.doScroll,a="DOMContentLoaded",o=(r?/^loaded|^c/:/^loaded|^i|^c/).test(n.readyState);return o||n.addEventListener(a,e=function(){for(n.removeEventListener(a,e),o=1;e=t.shift();)e()}),function(e){o?setTimeout(e,0):t.push(e)}},e.exports=t()})),U="__SVG_SPRITE_NODE__";window.__SVG_SPRITE__?_=window.__SVG_SPRITE__:(_=new P({attrs:{id:U,"aria-hidden":"true"}}),window.__SVG_SPRITE__=_);var D=function(){var e=document.getElementById(U);e?_.attach(e):_.mount(document.body,!0)};return document.body?D():F(D),_}()},3715:(e,t,n)=>{"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a=n(702),o=null,i=void 0;function l(e){return e||null===o?("object"===("undefined"==typeof Intl?"undefined":r(Intl))&&Intl.Collator?(i=new Intl.Collator(["zh-Hans-CN","zh-CN"]),o=1===Intl.Collator.supportedLocalesOf(["zh-CN"]).length):o=!1,o):o}function u(e){var t=a.UNIHANS,n=a.PINYINS,r=a.EXCEPTIONS,o={source:e};if(e in r)return o.type=2,o.target=r[e],o;var l=-1,u=void 0;if(e.charCodeAt(0)<256)return o.type=1,o.target=e,o;if((u=i.compare(e,"阿"))<0)return o.type=3,o.target=e,o;if(0===u)o.type=2,l=0;else{if((u=i.compare(e,"鿿"))>0)return o.type=3,o.target=e,o;0===u&&(o.type=2,l=t.length-1)}if(o.type=2,l<0)for(var s=0,c=t.length-1;s<=c;){var d=t[l=~~((s+c)/2)];if(0===(u=i.compare(e,d)))break;u>0?s=l+1:c=l-1}return u<0&&l--,o.target=n[l],o.target||(o.type=3,o.target=o.source),o}function s(e){if("string"!=typeof e)throw new Error("argument should be string.");if(!l())throw new Error("not support Intl or zh-CN language.");return e.split("").map((function(e){return u(e)}))}e.exports={isSupported:l,parse:s,patchDict:function(e){e&&("function"==typeof e&&(e=[e]),e.forEach&&e.forEach((function(e){"function"==typeof e&&e(a)})))},genToken:u,convertToPinyin:function(e,t,n){return s(e).map((function(e){return n&&2===e.type?e.target.toLowerCase():e.target})).join(t||"")}}},702:e=>{"use strict";e.exports={PINYINS:["A","AI","AN","ANG","AO","BA","BAI","BAN","BANG","BAO","BEI","BEN","BENG","BI","BIAN","BIAO","BIE","BIN","BING","BO","BU","CA","CAI","CAN","CANG","CAO","CE","CEN","CENG","CHA","CHAI","CHAN","CHANG","CHAO","CHE","CHEN","CHENG","CHI","CHONG","CHOU","CHU","CHUA","CHUAI","CHUAN","CHUANG","CHUI","CHUN","CHUO","CI","CONG","COU","CU","CUAN","CUI","CUN","CUO","DA","DAI","DAN","DANG","DAO","DE","DEN","DENG","DI","DIAN","DIAO","DIE","DING","DIU","DONG","DOU","DU","DUAN","DUI","DUN","DUO","E","EI","EN","ENG","ER","FA","FAN","FANG","FEI","FEN","FENG","FIAO","FO","FOU","FU","GA","GAI","GAN","GANG","GAO","GE","GEI","GEN","GENG","GONG","GOU","GU","GUA","GUAI","GUAN","GUANG","GUI","GUN","GUO","HA","HAI","HAN","HANG","HAO","HE","HEI","HEN","HENG","HM","HONG","HOU","HU","HUA","HUAI","HUAN","HUANG","HUI","HUN","HUO","JI","JIA","JIAN","JIANG","JIAO","JIE","JIN","JING","JIONG","JIU","JU","JUAN","JUE","JUN","KA","KAI","KAN","KANG","KAO","KE","KEN","KENG","KONG","KOU","KU","KUA","KUAI","KUAN","KUANG","KUI","KUN","KUO","LA","LAI","LAN","LANG","LAO","LE","LEI","LENG","LI","LIA","LIAN","LIANG","LIAO","LIE","LIN","LING","LIU","LO","LONG","LOU","LU","LV","LUAN","LVE","LUN","LUO","M","MA","MAI","MAN","MANG","MAO","ME","MEI","MEN","MENG","MI","MIAN","MIAO","MIE","MIN","MING","MIU","MO","MOU","MU","N","NA","NAI","NAN","NANG","NAO","NE","NEI","NEN","NENG","NI","NIAN","NIANG","NIAO","NIE","NIN","NING","NIU","NONG","NOU","NU","NV","NUAN","NVE","NUN","NUO","O","OU","PA","PAI","PAN","PANG","PAO","PEI","PEN","PENG","PI","PIAN","PIAO","PIE","PIN","PING","PO","POU","PU","QI","QIA","QIAN","QIANG","QIAO","QIE","QIN","QING","QIONG","QIU","QU","QUAN","QUE","QUN","RAN","RANG","RAO","RE","REN","RENG","RI","RONG","ROU","RU","RUA","RUAN","RUI","RUN","RUO","SA","SAI","SAN","SANG","SAO","SE","SEN","SENG","SHA","SHAI","SHAN","SHANG","SHAO","SHE","SHEN","SHENG","SHI","SHOU","SHU","SHUA","SHUAI","SHUAN","SHUANG","SHUI","SHUN","SHUO","SI","SONG","SOU","SU","SUAN","SUI","SUN","SUO","TA","TAI","TAN","TANG","TAO","TE","TENG","TI","TIAN","TIAO","TIE","TING","TONG","TOU","TU","TUAN","TUI","TUN","TUO","WA","WAI","WAN","WANG","WEI","WEN","WENG","WO","WU","XI","XIA","XIAN","XIANG","XIAO","XIE","XIN","XING","XIONG","XIU","XU","XUAN","XUE","XUN","YA","YAN","YANG","YAO","YE","YI","YIN","YING","YO","YONG","YOU","YU","YUAN","YUE","YUN","ZA","ZAI","ZAN","ZANG","ZAO","ZE","ZEI","ZEN","ZENG","ZHA","ZHAI","ZHAN","ZHANG","ZHAO","ZHE","ZHEN","ZHENG","ZHI","ZHONG","ZHOU","ZHU","ZHUA","ZHUAI","ZHUAN","ZHUANG","ZHUI","ZHUN","ZHUO","ZI","ZONG","ZOU","ZU","ZUAN","ZUI","ZUN","ZUO",""],UNIHANS:["阿","哎","安","肮","凹","八","挀","扳","邦","勹","陂","奔","伻","屄","边","灬","憋","汃","冫","癶","峬","嚓","偲","参","仓","撡","冊","嵾","曽","叉","芆","辿","伥","抄","车","抻","阷","吃","充","抽","出","欻","揣","巛","刅","吹","旾","逴","呲","匆","凑","粗","汆","崔","邨","搓","咑","呆","丹","当","刀","嘚","扥","灯","氐","甸","刁","爹","丁","丟","东","吺","厾","耑","垖","吨","多","妸","诶","奀","鞥","儿","发","帆","匚","飞","分","丰","覅","仏","紑","夫","旮","侅","甘","冈","皋","戈","给","根","刯","工","勾","估","瓜","乖","关","光","归","丨","呙","哈","咍","佄","夯","茠","诃","黒","拫","亨","噷","叿","齁","乎","花","怀","欢","巟","灰","昏","吙","丌","加","戋","江","艽","阶","巾","坕","冂","丩","凥","姢","噘","军","咔","开","刊","忼","尻","匼","肎","劥","空","抠","扝","夸","蒯","宽","匡","亏","坤","扩","垃","来","兰","啷","捞","肋","勒","崚","哩","俩","奁","良","撩","毟","拎","伶","溜","囖","龙","瞜","噜","驴","娈","掠","抡","罗","呣","妈","埋","嫚","牤","猫","么","呅","门","甿","咪","宀","喵","乜","民","名","谬","摸","哞","毪","嗯","拏","腉","囡","囔","孬","疒","娞","恁","能","妮","拈","娘","鸟","捏","囜","宁","妞","农","羺","奴","女","奻","疟","黁","挪","喔","讴","妑","拍","眅","乓","抛","呸","喷","匉","丕","囨","剽","氕","姘","乒","钋","剖","仆","七","掐","千","呛","悄","癿","亲","靑","卭","丘","区","峑","缺","夋","呥","穣","娆","惹","人","扔","日","茸","厹","邚","挼","堧","婑","瞤","捼","仨","毢","三","桒","掻","閪","森","僧","杀","筛","山","伤","弰","奢","申","升","尸","収","书","刷","衰","闩","双","脽","吮","说","厶","忪","捜","苏","狻","夊","孙","唆","他","囼","坍","汤","夲","忑","熥","剔","天","旫","帖","厅","囲","偷","凸","湍","推","吞","乇","穵","歪","弯","尣","危","昷","翁","挝","乌","夕","虲","仙","乡","灱","些","心","星","凶","休","吁","吅","削","坃","丫","恹","央","幺","倻","一","囙","应","哟","佣","优","扜","囦","曰","晕","帀","災","兂","匨","傮","则","贼","怎","増","扎","捚","沾","张","佋","蜇","贞","争","之","中","州","朱","抓","拽","专","妆","隹","宒","卓","乲","宗","邹","租","钻","厜","尊","昨","兙"],EXCEPTIONS:{曾:"ZENG",沈:"SHEN",嗲:"DIA",碡:"ZHOU",聒:"GUO",炔:"QUE",蚵:"KE",砉:"HUA",嬤:"MO",嬷:"MO",蹒:"PAN",蹊:"XI",丬:"PAN",霰:"XIAN",莘:"XIN",豉:"CHI",饧:"XING",筠:"JUN",长:"CHANG",帧:"ZHEN",峙:"SHI",郍:"NA",芎:"XIONG",谁:"SHUI"}}},981:(e,t,n)=>{"use strict";var r=n(3715),a=n(5631);r.isSupported()&&a.shouldPatch(r.genToken)&&r.patchDict(a),e.exports=r},5631:(e,t)=>{"use strict";(e.exports=function(e){e.EXCEPTIONS={嗲:"DIA",碡:"ZHOU",聒:"GUO",炔:"QUE",蚵:"KE",砉:"HUA",嬷:"MO",蹊:"XI",丬:"PAN",霰:"XIAN",豉:"CHI",饧:"XING",帧:"ZHEN",芎:"XIONG",谁:"SHUI",钶:"KE"},e.UNIHANS[91]="伕",e.UNIHANS[347]="仚",e.UNIHANS[393]="诌",e.UNIHANS[39]="婤",e.UNIHANS[50]="腠",e.UNIHANS[369]="攸",e.UNIHANS[123]="乯",e.UNIHANS[171]="刕",e.UNIHANS[102]="佝",e.UNIHANS[126]="犿",e.UNIHANS[176]="列",e.UNIHANS[178]="刢",e.UNIHANS[252]="娝",e.UNIHANS[330]="偸"}).shouldPatch=function(e){return"function"==typeof e&&"FOU"===e("伕").target&&"XIA"===e("仚").target&&"ZHONG"===e("诌").target&&"CHONG"===e("婤").target&&"CONG"===e("腠").target&&"YONG"===e("攸").target&&"HOU"===e("乯").target&&"LENG"===e("刕").target&&"GONG"===e("佝").target&&"HUAI"===e("犿").target&&"LIAO"===e("列").target&&"LIN"===e("刢").target&&"E"===e("钶").target}},5530:(e,t,n)=>{var r;try{(r=n(11)).keys().forEach(r)}catch(e){}}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var o=t[r]={id:r,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),(()=>{"use strict";var e=n(7294),t=n(3935);function r(e,t){return r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},r(e,t)}function a(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,r(e,t)}function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o.apply(this,arguments)}function i(e){return"/"===e.charAt(0)}function l(e,t){for(var n=t,r=n+1,a=e.length;r<a;n+=1,r+=1)e[n]=e[r];e.pop()}function u(e,t){if(!e)throw new Error("Invariant failed")}function s(e){return"/"===e.charAt(0)?e:"/"+e}function c(e){return"/"===e.charAt(0)?e.substr(1):e}function d(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function f(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function p(e){var t=e.pathname,n=e.search,r=e.hash,a=t||"/";return n&&"?"!==n&&(a+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(a+="#"===r.charAt(0)?r:"#"+r),a}function m(e,t,n,r){var a;"string"==typeof e?(a=function(e){var t=e||"/",n="",r="",a=t.indexOf("#");-1!==a&&(r=t.substr(a),t=t.substr(0,a));var o=t.indexOf("?");return-1!==o&&(n=t.substr(o),t=t.substr(0,o)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e),a.state=t):(void 0===(a=o({},e)).pathname&&(a.pathname=""),a.search?"?"!==a.search.charAt(0)&&(a.search="?"+a.search):a.search="",a.hash?"#"!==a.hash.charAt(0)&&(a.hash="#"+a.hash):a.hash="",void 0!==t&&void 0===a.state&&(a.state=t));try{a.pathname=decodeURI(a.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+a.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(a.key=n),r?a.pathname?"/"!==a.pathname.charAt(0)&&(a.pathname=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],a=t&&t.split("/")||[],o=e&&i(e),u=t&&i(t),s=o||u;if(e&&i(e)?a=r:r.length&&(a.pop(),a=a.concat(r)),!a.length)return"/";if(a.length){var c=a[a.length-1];n="."===c||".."===c||""===c}else n=!1;for(var d=0,f=a.length;f>=0;f--){var p=a[f];"."===p?l(a,f):".."===p?(l(a,f),d++):d&&(l(a,f),d--)}if(!s)for(;d--;d)a.unshift("..");!s||""===a[0]||a[0]&&i(a[0])||a.unshift("");var m=a.join("/");return n&&"/"!==m.substr(-1)&&(m+="/"),m}(a.pathname,r.pathname)):a.pathname=r.pathname:a.pathname||(a.pathname="/"),a}function h(){var e=null,t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,a){if(null!=e){var o="function"==typeof e?e(t,n):e;"string"==typeof o?"function"==typeof r?r(o,a):a(!0):a(!1!==o)}else a(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var g=!("undefined"==typeof window||!window.document||!window.document.createElement);function v(e,t){t(window.confirm(e))}var y="hashchange",b={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+c(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:c,decodePath:s},slash:{encodePath:s,decodePath:s}};function E(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function x(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function w(e){window.location.replace(E(window.location.href)+"#"+e)}function k(e){void 0===e&&(e={}),g||u(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),r=n.getUserConfirmation,a=void 0===r?v:r,i=n.hashType,l=void 0===i?"slash":i,c=e.basename?f(s(e.basename)):"",k=b[l],S=k.encodePath,N=k.decodePath;function A(){var e=N(x());return c&&(e=d(e,c)),m(e)}var C=h();function _(e){o(B,e),B.length=t.length,C.notifyListeners(B.location,B.action)}var O=!1,I=null;function T(){var e,t,n=x(),r=S(n);if(n!==r)w(r);else{var o=A(),i=B.location;if(!O&&(t=o,(e=i).pathname===t.pathname&&e.search===t.search&&e.hash===t.hash))return;if(I===p(o))return;I=null,function(e){if(O)O=!1,_();else{C.confirmTransitionTo(e,"POP",a,(function(t){t?_({action:"POP",location:e}):function(e){var t=B.location,n=F.lastIndexOf(p(t));-1===n&&(n=0);var r=F.lastIndexOf(p(e));-1===r&&(r=0);var a=n-r;a&&(O=!0,U(a))}(e)}))}}(o)}}var L=x(),R=S(L);L!==R&&w(R);var P=A(),F=[p(P)];function U(e){t.go(e)}var D=0;function M(e){1===(D+=e)&&1===e?window.addEventListener(y,T):0===D&&window.removeEventListener(y,T)}var z=!1,B={length:t.length,action:"POP",location:P,createHref:function(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&(n=E(window.location.href)),n+"#"+S(c+p(e))},push:function(e,t){var n="PUSH",r=m(e,void 0,void 0,B.location);C.confirmTransitionTo(r,n,a,(function(e){if(e){var t=p(r),a=S(c+t);if(x()!==a){I=t,function(e){window.location.hash=e}(a);var o=F.lastIndexOf(p(B.location)),i=F.slice(0,o+1);i.push(t),F=i,_({action:n,location:r})}else _()}}))},replace:function(e,t){var n="REPLACE",r=m(e,void 0,void 0,B.location);C.confirmTransitionTo(r,n,a,(function(e){if(e){var t=p(r),a=S(c+t);x()!==a&&(I=t,w(a));var o=F.indexOf(p(B.location));-1!==o&&(F[o]=t),_({action:n,location:r})}}))},go:U,goBack:function(){U(-1)},goForward:function(){U(1)},block:function(e){void 0===e&&(e=!1);var t=C.setPrompt(e);return z||(M(1),z=!0),function(){return z&&(z=!1,M(-1)),t()}},listen:function(e){var t=C.appendListener(e);return M(1),function(){M(-1),t()}}};return B}var S=n(5697),N=n.n(S),A=1073741823,C="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:{};function _(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,r){e=n,t.forEach((function(t){return t(e,r)}))}}}const O=e.createContext||function(t,n){var r,o,i,l="__create-react-context-"+((C[i="__global_unique_id__"]=(C[i]||0)+1)+"__"),u=function(e){function t(){var t;return(t=e.apply(this,arguments)||this).emitter=_(t.props.value),t}a(t,e);var r=t.prototype;return r.getChildContext=function(){var e;return(e={})[l]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var t,r=this.props.value,a=e.value;((o=r)===(i=a)?0!==o||1/o==1/i:o!=o&&i!=i)?t=0:(t="function"==typeof n?n(r,a):A,0!=(t|=0)&&this.emitter.set(e.value,t))}var o,i},r.render=function(){return this.props.children},t}(e.Component);u.childContextTypes=((r={})[l]=N().object.isRequired,r);var s=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).state={value:t.getValue()},t.onUpdate=function(e,n){0!=((0|t.observedBits)&n)&&t.setState({value:t.getValue()})},t}a(n,e);var r=n.prototype;return r.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?A:t},r.componentDidMount=function(){this.context[l]&&this.context[l].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?A:e},r.componentWillUnmount=function(){this.context[l]&&this.context[l].off(this.onUpdate)},r.getValue=function(){return this.context[l]?this.context[l].get():t},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(e.Component);return s.contextTypes=((o={})[l]=N().object,o),{Provider:u,Consumer:s}};var I=n(9658),T=n.n(I);function L(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}n(9864),n(8679);var R=function(e){var t=O();return t.displayName=e,t},P=R("Router-History"),F=R("Router"),U=function(t){function n(e){var n;return(n=t.call(this,e)||this).state={location:e.history.location},n._isMounted=!1,n._pendingLocation=null,e.staticContext||(n.unlisten=e.history.listen((function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e}))),n}a(n,t),n.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var r=n.prototype;return r.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},r.componentWillUnmount=function(){this.unlisten&&(this.unlisten(),this._isMounted=!1,this._pendingLocation=null)},r.render=function(){return e.createElement(F.Provider,{value:{history:this.props.history,location:this.state.location,match:n.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},e.createElement(P.Provider,{children:this.props.children||null,value:this.props.history}))},n}(e.Component);e.Component,e.Component;var D={},M=0;function z(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,a=n.exact,o=void 0!==a&&a,i=n.strict,l=void 0!==i&&i,u=n.sensitive,s=void 0!==u&&u;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=D[n]||(D[n]={});if(r[e])return r[e];var a=[],o={regexp:T()(e,a,t),keys:a};return M<1e4&&(r[e]=o,M++),o}(n,{end:o,strict:l,sensitive:s}),a=r.regexp,i=r.keys,u=a.exec(e);if(!u)return null;var c=u[0],d=u.slice(1),f=e===c;return o&&!f?null:{path:n,url:"/"===n&&""===c?"/":c,isExact:f,params:i.reduce((function(e,t,n){return e[t.name]=d[n],e}),{})}}),null)}var B=function(t){function n(){return t.apply(this,arguments)||this}return a(n,t),n.prototype.render=function(){var t=this;return e.createElement(F.Consumer,null,(function(n){n||u(!1);var r=t.props.location||n.location,a=o({},n,{location:r,match:t.props.computedMatch?t.props.computedMatch:t.props.path?z(r.pathname,t.props):n.match}),i=t.props,l=i.children,s=i.component,c=i.render;return Array.isArray(l)&&function(t){return 0===e.Children.count(t)}(l)&&(l=null),e.createElement(F.Provider,{value:a},a.match?l?"function"==typeof l?l(a):l:s?e.createElement(s,a):c?c(a):null:"function"==typeof l?l(a):null)}))},n}(e.Component);e.Component,e.Component,e.useContext,e.Component;var j=function(t){function n(){for(var e,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return(e=t.call.apply(t,[this].concat(r))||this).history=k(e.props),e}return a(n,t),n.prototype.render=function(){return e.createElement(U,{history:this.history,children:this.props.children})},n}(e.Component),$=function(e,t){return"function"==typeof e?e(t):e},G=function(e,t){return"string"==typeof e?m(e,null,null,t):e},H=function(e){return e},V=e.forwardRef;void 0===V&&(V=H);var q=V((function(t,n){var r=t.innerRef,a=t.navigate,i=t.onClick,l=L(t,["innerRef","navigate","onClick"]),u=l.target,s=o({},l,{onClick:function(e){try{i&&i(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||u&&"_self"!==u||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),a())}});return s.ref=H!==V&&n||r,e.createElement("a",s)})),W=V((function(t,n){var r=t.component,a=void 0===r?q:r,i=t.replace,l=t.to,s=t.innerRef,c=L(t,["component","replace","to","innerRef"]);return e.createElement(F.Consumer,null,(function(t){t||u(!1);var r=t.history,d=G($(l,t.location),t.location),f=d?r.createHref(d):"",m=o({},c,{href:f,navigate:function(){var e=$(l,t.location),n=p(t.location)===p(G(e));(i||n?r.replace:r.push)(e)}});return H!==V?m.ref=n||s:m.innerRef=s,e.createElement(a,m)}))})),Z=function(e){return e},Y=e.forwardRef;void 0===Y&&(Y=Z);var K=Y((function(t,n){var r=t["aria-current"],a=void 0===r?"page":r,i=t.activeClassName,l=void 0===i?"active":i,s=t.activeStyle,c=t.className,d=t.exact,f=t.isActive,p=t.location,m=t.sensitive,h=t.strict,g=t.style,v=t.to,y=t.innerRef,b=L(t,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return e.createElement(F.Consumer,null,(function(t){t||u(!1);var r=p||t.location,i=G($(v,r),r),E=i.pathname,x=E&&E.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),w=x?z(r.pathname,{path:x,exact:d,sensitive:m,strict:h}):null,k=!!(f?f(w,r):w),S="function"==typeof c?c(k):c,N="function"==typeof g?g(k):g;k&&(S=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(S,l),N=o({},N,s));var A=o({"aria-current":k&&a||null,className:S,style:N,to:i},b);return Z!==Y?A.ref=n||y:A.innerRef=y,e.createElement(W,A)}))})),X=function(){return X=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},X.apply(this,arguments)};function Q(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}function J(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,o=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=o.next()).done;)i.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=o.return)&&n.call(o)}finally{if(a)throw a.error}}return i}function ee(e,t,n){if(n||2===arguments.length)for(var r,a=0,o=t.length;a<o;a++)!r&&a in t||(r||(r=Array.prototype.slice.call(t,0,a)),r[a]=t[a]);return e.concat(r||Array.prototype.slice.call(t))}Object.create,Object.create,n(3448),n(5530),n(1601);const te=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return e.filter(Boolean).join(" ")};var ne=function(e){return function(t,n){var r;return Object.entries(t instanceof Object?t:(r={},r[t]=t,r)).filter((function(e){return!1!==e[1]})).map((function(e){return e[0]})).map((function(t){return[e,t].filter(Boolean).join("-")})).concat(n&&n.extra||[]).join(" ")}};const re=function(t){var n=t.className,r=t.name,a=Q(t,["className","name"]);return e.createElement("svg",X({className:te("fui-icon",n)},a),e.createElement("use",{xlinkHref:"#".concat(r)}))};n(2256),n(4243);var ae=function(t){var n=t.className,r=t.children,a=t.level,o=Q(t,["className","children","level"]);return e.createElement("button",X({type:"button",className:te("fui-button","fui-button-".concat(a),n)},o),r)};ae.defaultProps={level:"normal"};const oe=ae;var ie=ne("fui-dialog"),le=function(n){var r=n.visible&&e.createElement(e.Fragment,null,e.createElement("div",{className:ie("mask"),onClick:function(e){n.closeOnClickMask&&n.onClose(e)}}),e.createElement("div",{className:ie("")},e.createElement("div",{className:ie("close"),onClick:function(e){n.onClose(e)}},e.createElement(re,{name:"cuowu"})),e.createElement("header",{className:ie("header")},"提示"),e.createElement("main",{className:ie("main")},n.children),n.buttons&&n.buttons.length>0&&e.createElement("footer",{className:ie("footer")},n.buttons&&n.buttons.map((function(t,n){return e.cloneElement(t,{key:n})})))));return t.createPortal(r,document.body)};le.defaultProps={closeOnClickMask:!1};var ue=function(n,r,a){var o=function(){t.render(e.cloneElement(i,{visible:!1}),l),t.unmountComponentAtNode(l),l.remove()},i=e.createElement(le,{visible:!0,buttons:r,onClose:function(){o(),a&&a()}},n),l=document.createElement("div");return document.body.append(l),t.render(i,l),o};const se=le,ce=function(){return e.createElement("div",null,e.createElement("div",null,e.createElement(oe,null,"默认按钮"),e.createElement(oe,{level:"important"},"蓝色按钮"),e.createElement(oe,{level:"red"},"红色")))};n(2749);var de=function(){var e=/(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i,t=0,n={},r={util:{encode:function e(t){return t instanceof a?new a(t.type,e(t.content),t.alias):Array.isArray(t)?t.map(e):t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(e){return Object.prototype.toString.call(e).slice(8,-1)},objId:function(e){return e.__id||Object.defineProperty(e,"__id",{value:++t}),e.__id},clone:function e(t,n){var a,o;switch(n=n||{},r.util.type(t)){case"Object":if(o=r.util.objId(t),n[o])return n[o];for(var i in a={},n[o]=a,t)t.hasOwnProperty(i)&&(a[i]=e(t[i],n));return a;case"Array":return o=r.util.objId(t),n[o]?n[o]:(a=[],n[o]=a,t.forEach((function(t,r){a[r]=e(t,n)})),a);default:return t}},getLanguage:function(t){for(;t;){var n=e.exec(t.className);if(n)return n[1].toLowerCase();t=t.parentElement}return"none"},setLanguage:function(t,n){t.className=t.className.replace(RegExp(e,"gi"),""),t.classList.add("language-"+n)},isActive:function(e,t,n){for(var r="no-"+t;e;){var a=e.classList;if(a.contains(t))return!0;if(a.contains(r))return!1;e=e.parentElement}return!!n}},languages:{plain:n,plaintext:n,text:n,txt:n,extend:function(e,t){var n=r.util.clone(r.languages[e]);for(var a in t)n[a]=t[a];return n},insertBefore:function(e,t,n,a){var o=(a=a||r.languages)[e],i={};for(var l in o)if(o.hasOwnProperty(l)){if(l==t)for(var u in n)n.hasOwnProperty(u)&&(i[u]=n[u]);n.hasOwnProperty(l)||(i[l]=o[l])}var s=a[e];return a[e]=i,r.languages.DFS(r.languages,(function(t,n){n===s&&t!=e&&(this[t]=i)})),i},DFS:function e(t,n,a,o){o=o||{};var i=r.util.objId;for(var l in t)if(t.hasOwnProperty(l)){n.call(t,l,t[l],a||l);var u=t[l],s=r.util.type(u);"Object"!==s||o[i(u)]?"Array"!==s||o[i(u)]||(o[i(u)]=!0,e(u,n,l,o)):(o[i(u)]=!0,e(u,n,null,o))}}},plugins:{},highlight:function(e,t,n){var o={code:e,grammar:t,language:n};return r.hooks.run("before-tokenize",o),o.tokens=r.tokenize(o.code,o.grammar),r.hooks.run("after-tokenize",o),a.stringify(r.util.encode(o.tokens),o.language)},tokenize:function(e,t){var n=t.rest;if(n){for(var r in n)t[r]=n[r];delete t.rest}var a=new l;return u(a,a.head,e),i(e,a,t,a.head,0),function(e){for(var t=[],n=e.head.next;n!==e.tail;)t.push(n.value),n=n.next;return t}(a)},hooks:{all:{},add:function(e,t){var n=r.hooks.all;n[e]=n[e]||[],n[e].push(t)},run:function(e,t){var n=r.hooks.all[e];if(n&&n.length)for(var a,o=0;a=n[o++];)a(t)}},Token:a};function a(e,t,n,r){this.type=e,this.content=t,this.alias=n,this.length=0|(r||"").length}function o(e,t,n,r){e.lastIndex=t;var a=e.exec(n);if(a&&r&&a[1]){var o=a[1].length;a.index+=o,a[0]=a[0].slice(o)}return a}function i(e,t,n,l,c,d){for(var f in n)if(n.hasOwnProperty(f)&&n[f]){var p=n[f];p=Array.isArray(p)?p:[p];for(var m=0;m<p.length;++m){if(d&&d.cause==f+","+m)return;var h=p[m],g=h.inside,v=!!h.lookbehind,y=!!h.greedy,b=h.alias;if(y&&!h.pattern.global){var E=h.pattern.toString().match(/[imsuy]*$/)[0];h.pattern=RegExp(h.pattern.source,E+"g")}for(var x=h.pattern||h,w=l.next,k=c;w!==t.tail&&!(d&&k>=d.reach);k+=w.value.length,w=w.next){var S=w.value;if(t.length>e.length)return;if(!(S instanceof a)){var N,A=1;if(y){if(!(N=o(x,k,e,v))||N.index>=e.length)break;var C=N.index,_=N.index+N[0].length,O=k;for(O+=w.value.length;C>=O;)O+=(w=w.next).value.length;if(k=O-=w.value.length,w.value instanceof a)continue;for(var I=w;I!==t.tail&&(O<_||"string"==typeof I.value);I=I.next)A++,O+=I.value.length;A--,S=e.slice(k,O),N.index-=k}else if(!(N=o(x,0,S,v)))continue;C=N.index;var T=N[0],L=S.slice(0,C),R=S.slice(C+T.length),P=k+S.length;d&&P>d.reach&&(d.reach=P);var F=w.prev;if(L&&(F=u(t,F,L),k+=L.length),s(t,F,A),w=u(t,F,new a(f,g?r.tokenize(T,g):T,b,T)),R&&u(t,w,R),A>1){var U={cause:f+","+m,reach:P};i(e,t,n,w.prev,k,U),d&&U.reach>d.reach&&(d.reach=U.reach)}}}}}}function l(){var e={value:null,prev:null,next:null},t={value:null,prev:e,next:null};e.next=t,this.head=e,this.tail=t,this.length=0}function u(e,t,n){var r=t.next,a={value:n,prev:t,next:r};return t.next=a,r.prev=a,e.length++,a}function s(e,t,n){for(var r=t.next,a=0;a<n&&r!==e.tail;a++)r=r.next;t.next=r,r.prev=t,e.length-=a}return a.stringify=function e(t,n){if("string"==typeof t)return t;if(Array.isArray(t)){var a="";return t.forEach((function(t){a+=e(t,n)})),a}var o={type:t.type,content:e(t.content,n),tag:"span",classes:["token",t.type],attributes:{},language:n},i=t.alias;i&&(Array.isArray(i)?Array.prototype.push.apply(o.classes,i):o.classes.push(i)),r.hooks.run("wrap",o);var l="";for(var u in o.attributes)l+=" "+u+'="'+(o.attributes[u]||"").replace(/"/g,"&quot;")+'"';return"<"+o.tag+' class="'+o.classes.join(" ")+'"'+l+">"+o.content+"</"+o.tag+">"},r}(),fe=de;de.default=de,fe.languages.markup={comment:{pattern:/<!--(?:(?!<!--)[\s\S])*?-->/,greedy:!0},prolog:{pattern:/<\?[\s\S]+?\?>/,greedy:!0},doctype:{pattern:/<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,greedy:!0,inside:{"internal-subset":{pattern:/(^[^\[]*\[)[\s\S]+(?=\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/"[^"]*"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\]]/,"doctype-tag":/^DOCTYPE/i,name:/[^\s<>'"]+/}},cdata:{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,greedy:!0},tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"special-attr":[],"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:[{pattern:/&[\da-z]{1,8};/i,alias:"named-entity"},/&#x?[\da-f]{1,8};/i]},fe.languages.markup.tag.inside["attr-value"].inside.entity=fe.languages.markup.entity,fe.languages.markup.doctype.inside["internal-subset"].inside=fe.languages.markup,fe.hooks.add("wrap",(function(e){"entity"===e.type&&(e.attributes.title=e.content.replace(/&amp;/,"&"))})),Object.defineProperty(fe.languages.markup.tag,"addInlined",{value:function(e,t){var n={};n["language-"+t]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:fe.languages[t]},n.cdata=/^<!\[CDATA\[|\]\]>$/i;var r={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:n}};r["language-"+t]={pattern:/[\s\S]+/,inside:fe.languages[t]};var a={};a[e]={pattern:RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g,(function(){return e})),"i"),lookbehind:!0,greedy:!0,inside:r},fe.languages.insertBefore("markup","cdata",a)}}),Object.defineProperty(fe.languages.markup.tag,"addAttribute",{value:function(e,t){fe.languages.markup.tag.inside["special-attr"].push({pattern:RegExp(/(^|["'\s])/.source+"(?:"+e+")"+/\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source,"i"),lookbehind:!0,inside:{"attr-name":/^[^\s=]+/,"attr-value":{pattern:/=[\s\S]+/,inside:{value:{pattern:/(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,lookbehind:!0,alias:[t,"language-"+t],inside:fe.languages[t]},punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}}}})}}),fe.languages.html=fe.languages.markup,fe.languages.mathml=fe.languages.markup,fe.languages.svg=fe.languages.markup,fe.languages.xml=fe.languages.extend("markup",{}),fe.languages.ssml=fe.languages.xml,fe.languages.atom=fe.languages.xml,fe.languages.rss=fe.languages.xml,function(e){var t="\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b",n={pattern:/(^(["']?)\w+\2)[ \t]+\S.*/,lookbehind:!0,alias:"punctuation",inside:null},r={bash:n,environment:{pattern:RegExp("\\$"+t),alias:"constant"},variable:[{pattern:/\$?\(\([\s\S]+?\)\)/,greedy:!0,inside:{variable:[{pattern:/(^\$\(\([\s\S]+)\)\)/,lookbehind:!0},/^\$\(\(/],number:/\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,operator:/--|\+\+|\*\*=?|<<=?|>>=?|&&|\|\||[=!+\-*/%<>^&|]=?|[?~:]/,punctuation:/\(\(?|\)\)?|,|;/}},{pattern:/\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/,greedy:!0,inside:{variable:/^\$\(|^`|\)$|`$/}},{pattern:/\$\{[^}]+\}/,greedy:!0,inside:{operator:/:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/,punctuation:/[\[\]]/,environment:{pattern:RegExp("(\\{)"+t),lookbehind:!0,alias:"constant"}}},/\$(?:\w+|[#?*!@$])/],entity:/\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/};e.languages.bash={shebang:{pattern:/^#!\s*\/.*/,alias:"important"},comment:{pattern:/(^|[^"{\\$])#.*/,lookbehind:!0},"function-name":[{pattern:/(\bfunction\s+)[\w-]+(?=(?:\s*\(?:\s*\))?\s*\{)/,lookbehind:!0,alias:"function"},{pattern:/\b[\w-]+(?=\s*\(\s*\)\s*\{)/,alias:"function"}],"for-or-select":{pattern:/(\b(?:for|select)\s+)\w+(?=\s+in\s)/,alias:"variable",lookbehind:!0},"assign-left":{pattern:/(^|[\s;|&]|[<>]\()\w+(?=\+?=)/,inside:{environment:{pattern:RegExp("(^|[\\s;|&]|[<>]\\()"+t),lookbehind:!0,alias:"constant"}},alias:"variable",lookbehind:!0},string:[{pattern:/((?:^|[^<])<<-?\s*)(\w+)\s[\s\S]*?(?:\r?\n|\r)\2/,lookbehind:!0,greedy:!0,inside:r},{pattern:/((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s[\s\S]*?(?:\r?\n|\r)\3/,lookbehind:!0,greedy:!0,inside:{bash:n}},{pattern:/(^|[^\\](?:\\\\)*)"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/,lookbehind:!0,greedy:!0,inside:r},{pattern:/(^|[^$\\])'[^']*'/,lookbehind:!0,greedy:!0},{pattern:/\$'(?:[^'\\]|\\[\s\S])*'/,greedy:!0,inside:{entity:r.entity}}],environment:{pattern:RegExp("\\$?"+t),alias:"constant"},variable:r.variable,function:{pattern:/(^|[\s;|&]|[<>]\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/,lookbehind:!0},keyword:{pattern:/(^|[\s;|&]|[<>]\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\s;|&])/,lookbehind:!0},builtin:{pattern:/(^|[\s;|&]|[<>]\()(?:\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\s;|&])/,lookbehind:!0,alias:"class-name"},boolean:{pattern:/(^|[\s;|&]|[<>]\()(?:false|true)(?=$|[)\s;|&])/,lookbehind:!0},"file-descriptor":{pattern:/\B&\d\b/,alias:"important"},operator:{pattern:/\d?<>|>\||\+=|=[=~]?|!=?|<<[<-]?|[&\d]?>>|\d[<>]&?|[<>][&=]?|&[>&]?|\|[&|]?/,inside:{"file-descriptor":{pattern:/^\d/,alias:"important"}}},punctuation:/\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/,number:{pattern:/(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/,lookbehind:!0}},n.inside=e.languages.bash;for(var a=["comment","function-name","for-or-select","assign-left","string","environment","function","keyword","builtin","boolean","file-descriptor","operator","punctuation","number"],o=r.variable[1].inside,i=0;i<a.length;i++)o[a[i]]=e.languages.bash[a[i]];e.languages.shell=e.languages.bash}(fe),fe.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,boolean:/\b(?:false|true)\b/,function:/\b\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,punctuation:/[{}[\];(),.:]/},fe.languages.c=fe.languages.extend("clike",{comment:{pattern:/\/\/(?:[^\r\n\\]|\\(?:\r\n?|\n|(?![\r\n])))*|\/\*[\s\S]*?(?:\*\/|$)/,greedy:!0},string:{pattern:/"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,greedy:!0},"class-name":{pattern:/(\b(?:enum|struct)\s+(?:__attribute__\s*\(\([\s\S]*?\)\)\s*)?)\w+|\b[a-z]\w*_t\b/,lookbehind:!0},keyword:/\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\b/,function:/\b[a-z_]\w*(?=\s*\()/i,number:/(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ful]{0,4}/i,operator:/>>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?/}),fe.languages.insertBefore("c","string",{char:{pattern:/'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n]){0,32}'/,greedy:!0}}),fe.languages.insertBefore("c","string",{macro:{pattern:/(^[\t ]*)#\s*[a-z](?:[^\r\n\\/]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|\\(?:\r\n|[\s\S]))*/im,lookbehind:!0,greedy:!0,alias:"property",inside:{string:[{pattern:/^(#\s*include\s*)<[^>]+>/,lookbehind:!0},fe.languages.c.string],char:fe.languages.c.char,comment:fe.languages.c.comment,"macro-name":[{pattern:/(^#\s*define\s+)\w+\b(?!\()/i,lookbehind:!0},{pattern:/(^#\s*define\s+)\w+\b(?=\()/i,lookbehind:!0,alias:"function"}],directive:{pattern:/^(#\s*)[a-z]+/,lookbehind:!0,alias:"keyword"},"directive-hash":/^#/,punctuation:/##|\\(?=[\r\n])/,expression:{pattern:/\S[\s\S]*/,inside:fe.languages.c}}}}),fe.languages.insertBefore("c","function",{constant:/\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\b/}),delete fe.languages.c.boolean,function(e){var t=/\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/,n=/\b(?!<keyword>)\w+(?:\s*\.\s*\w+)*\b/.source.replace(/<keyword>/g,(function(){return t.source}));e.languages.cpp=e.languages.extend("c",{"class-name":[{pattern:RegExp(/(\b(?:class|concept|enum|struct|typename)\s+)(?!<keyword>)\w+/.source.replace(/<keyword>/g,(function(){return t.source}))),lookbehind:!0},/\b[A-Z]\w*(?=\s*::\s*\w+\s*\()/,/\b[A-Z_]\w*(?=\s*::\s*~\w+\s*\()/i,/\b\w+(?=\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\s*::\s*\w+\s*\()/],keyword:t,number:{pattern:/(?:\b0b[01']+|\b0x(?:[\da-f']+(?:\.[\da-f']*)?|\.[\da-f']+)(?:p[+-]?[\d']+)?|(?:\b[\d']+(?:\.[\d']*)?|\B\.[\d']+)(?:e[+-]?[\d']+)?)[ful]{0,4}/i,greedy:!0},operator:/>>=?|<<=?|->|--|\+\+|&&|\|\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/,boolean:/\b(?:false|true)\b/}),e.languages.insertBefore("cpp","string",{module:{pattern:RegExp(/(\b(?:import|module)\s+)/.source+"(?:"+/"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|<[^<>\r\n]*>/.source+"|"+/<mod-name>(?:\s*:\s*<mod-name>)?|:\s*<mod-name>/.source.replace(/<mod-name>/g,(function(){return n}))+")"),lookbehind:!0,greedy:!0,inside:{string:/^[<"][\s\S]+/,operator:/:/,punctuation:/\./}},"raw-string":{pattern:/R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/,alias:"string",greedy:!0}}),e.languages.insertBefore("cpp","keyword",{"generic-function":{pattern:/\b(?!operator\b)[a-z_]\w*\s*<(?:[^<>]|<[^<>]*>)*>(?=\s*\()/i,inside:{function:/^\w+/,generic:{pattern:/<[\s\S]+/,alias:"class-name",inside:e.languages.cpp}}}}),e.languages.insertBefore("cpp","operator",{"double-colon":{pattern:/::/,alias:"punctuation"}}),e.languages.insertBefore("cpp","class-name",{"base-clause":{pattern:/(\b(?:class|struct)\s+\w+\s*:\s*)[^;{}"'\s]+(?:\s+[^;{}"'\s]+)*(?=\s*[;{])/,lookbehind:!0,greedy:!0,inside:e.languages.extend("cpp",{})}}),e.languages.insertBefore("inside","double-colon",{"class-name":/\b[a-z_]\w*\b(?!\s*::)/i},e.languages.cpp["base-clause"])}(fe),function(e){var t=/(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;e.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:/@[\w-](?:[^;{\s]|\s+(?![\s{]))*(?:;|(?=\s*\{))/,inside:{rule:/^@[\w-]+/,"selector-function-argument":{pattern:/(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,lookbehind:!0,alias:"selector"},keyword:{pattern:/(^|[^\w-])(?:and|not|only|or)(?![\w-])/,lookbehind:!0}}},url:{pattern:RegExp("\\burl\\((?:"+t.source+"|"+/(?:[^\\\r\n()"']|\\[\s\S])*/.source+")\\)","i"),greedy:!0,inside:{function:/^url/i,punctuation:/^\(|\)$/,string:{pattern:RegExp("^"+t.source+"$"),alias:"url"}}},selector:{pattern:RegExp("(^|[{}\\s])[^{}\\s](?:[^{};\"'\\s]|\\s+(?![\\s{])|"+t.source+")*(?=\\s*\\{)"),lookbehind:!0},string:{pattern:t,greedy:!0},property:{pattern:/(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,lookbehind:!0},important:/!important\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,lookbehind:!0},punctuation:/[(){};:,]/},e.languages.css.atrule.inside.rest=e.languages.css;var n=e.languages.markup;n&&(n.tag.addInlined("style","css"),n.tag.addAttribute("style","css"))}(fe),function(e){var t,n=/("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/;e.languages.css.selector={pattern:e.languages.css.selector.pattern,lookbehind:!0,inside:t={"pseudo-element":/:(?:after|before|first-letter|first-line|selection)|::[-\w]+/,"pseudo-class":/:[-\w]+/,class:/\.[-\w]+/,id:/#[-\w]+/,attribute:{pattern:RegExp("\\[(?:[^[\\]\"']|"+n.source+")*\\]"),greedy:!0,inside:{punctuation:/^\[|\]$/,"case-sensitivity":{pattern:/(\s)[si]$/i,lookbehind:!0,alias:"keyword"},namespace:{pattern:/^(\s*)(?:(?!\s)[-*\w\xA0-\uFFFF])*\|(?!=)/,lookbehind:!0,inside:{punctuation:/\|$/}},"attr-name":{pattern:/^(\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+/,lookbehind:!0},"attr-value":[n,{pattern:/(=\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+(?=\s*$)/,lookbehind:!0}],operator:/[|~*^$]?=/}},"n-th":[{pattern:/(\(\s*)[+-]?\d*[\dn](?:\s*[+-]\s*\d+)?(?=\s*\))/,lookbehind:!0,inside:{number:/[\dn]+/,operator:/[+-]/}},{pattern:/(\(\s*)(?:even|odd)(?=\s*\))/i,lookbehind:!0}],combinator:/>|\+|~|\|\|/,punctuation:/[(),]/}},e.languages.css.atrule.inside["selector-function-argument"].inside=t,e.languages.insertBefore("css","property",{variable:{pattern:/(^|[^-\w\xA0-\uFFFF])--(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*/i,lookbehind:!0}});var r={pattern:/(\b\d+)(?:%|[a-z]+(?![\w-]))/,lookbehind:!0},a={pattern:/(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/,lookbehind:!0};e.languages.insertBefore("css","function",{operator:{pattern:/(\s)[+\-*\/](?=\s)/,lookbehind:!0},hexcode:{pattern:/\B#[\da-f]{3,8}\b/i,alias:"color"},color:[{pattern:/(^|[^\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\w-])/i,lookbehind:!0},{pattern:/\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,inside:{unit:r,number:a,function:/[\w-]+(?=\()/,punctuation:/[(),]/}}],entity:/\\[\da-f]{1,8}/i,unit:r,number:a})}(fe),fe.languages.javascript=fe.languages.extend("clike",{"class-name":[fe.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\})\s*)catch\b/,lookbehind:!0},{pattern:/(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],function:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,number:{pattern:RegExp(/(^|[^\w$])/.source+"(?:"+/NaN|Infinity/.source+"|"+/0[bB][01]+(?:_[01]+)*n?/.source+"|"+/0[oO][0-7]+(?:_[0-7]+)*n?/.source+"|"+/0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?/.source+"|"+/\d+(?:_\d+)*n/.source+"|"+/(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?/.source+")"+/(?![\w$])/.source),lookbehind:!0},operator:/--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/}),fe.languages.javascript["class-name"][0].pattern=/(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/,fe.languages.insertBefore("javascript","keyword",{regex:{pattern:/((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/,lookbehind:!0,greedy:!0,inside:{"regex-source":{pattern:/^(\/)[\s\S]+(?=\/[a-z]*$)/,lookbehind:!0,alias:"language-regex",inside:fe.languages.regex},"regex-delimiter":/^\/|\/$/,"regex-flags":/^[a-z]+$/}},"function-variable":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,lookbehind:!0,inside:fe.languages.javascript},{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,lookbehind:!0,inside:fe.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,lookbehind:!0,inside:fe.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,lookbehind:!0,inside:fe.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/}),fe.languages.insertBefore("javascript","string",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:"comment"},"template-string":{pattern:/`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:fe.languages.javascript}},string:/[\s\S]+/}},"string-property":{pattern:/((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,lookbehind:!0,greedy:!0,alias:"property"}}),fe.languages.insertBefore("javascript","operator",{"literal-property":{pattern:/((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,lookbehind:!0,alias:"property"}}),fe.languages.markup&&(fe.languages.markup.tag.addInlined("script","javascript"),fe.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,"javascript")),fe.languages.js=fe.languages.javascript,function(e){var t=e.util.clone(e.languages.javascript),n=/(?:\s|\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))\*\/)/.source,r=/(?:\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])*\})/.source,a=/(?:\{<S>*\.{3}(?:[^{}]|<BRACES>)*\})/.source;function o(e,t){return e=e.replace(/<S>/g,(function(){return n})).replace(/<BRACES>/g,(function(){return r})).replace(/<SPREAD>/g,(function(){return a})),RegExp(e,t)}a=o(a).source,e.languages.jsx=e.languages.extend("markup",t),e.languages.jsx.tag.pattern=o(/<\/?(?:[\w.:-]+(?:<S>+(?:[\w.:$-]+(?:=(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s{'"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\/?)?>/.source),e.languages.jsx.tag.inside.tag.pattern=/^<\/?[^\s>\/]*/,e.languages.jsx.tag.inside["attr-value"].pattern=/=(?!\{)(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s'">]+)/,e.languages.jsx.tag.inside.tag.inside["class-name"]=/^[A-Z]\w*(?:\.[A-Z]\w*)*$/,e.languages.jsx.tag.inside.comment=t.comment,e.languages.insertBefore("inside","attr-name",{spread:{pattern:o(/<SPREAD>/.source),inside:e.languages.jsx}},e.languages.jsx.tag),e.languages.insertBefore("inside","special-attr",{script:{pattern:o(/=<BRACES>/.source),alias:"language-javascript",inside:{"script-punctuation":{pattern:/^=(?=\{)/,alias:"punctuation"},rest:e.languages.jsx}}},e.languages.jsx.tag);var i=function(e){return e?"string"==typeof e?e:"string"==typeof e.content?e.content:e.content.map(i).join(""):""},l=function(t){for(var n=[],r=0;r<t.length;r++){var a=t[r],o=!1;if("string"!=typeof a&&("tag"===a.type&&a.content[0]&&"tag"===a.content[0].type?"</"===a.content[0].content[0].content?n.length>0&&n[n.length-1].tagName===i(a.content[0].content[1])&&n.pop():"/>"===a.content[a.content.length-1].content||n.push({tagName:i(a.content[0].content[1]),openedBraces:0}):n.length>0&&"punctuation"===a.type&&"{"===a.content?n[n.length-1].openedBraces++:n.length>0&&n[n.length-1].openedBraces>0&&"punctuation"===a.type&&"}"===a.content?n[n.length-1].openedBraces--:o=!0),(o||"string"==typeof a)&&n.length>0&&0===n[n.length-1].openedBraces){var u=i(a);r<t.length-1&&("string"==typeof t[r+1]||"plain-text"===t[r+1].type)&&(u+=i(t[r+1]),t.splice(r+1,1)),r>0&&("string"==typeof t[r-1]||"plain-text"===t[r-1].type)&&(u=i(t[r-1])+u,t.splice(r-1,1),r--),t[r]=new e.Token("plain-text",u,null,u)}a.content&&"string"!=typeof a.content&&l(a.content)}};e.hooks.add("after-tokenize",(function(e){"jsx"!==e.language&&"tsx"!==e.language||l(e.tokens)}))}(fe),function(e){function t(e,t){return RegExp(e.replace(/<ID>/g,(function(){return/(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/.source})),t)}e.languages.insertBefore("javascript","function-variable",{"method-variable":{pattern:RegExp("(\\.\\s*)"+e.languages.javascript["function-variable"].pattern.source),lookbehind:!0,alias:["function-variable","method","function","property-access"]}}),e.languages.insertBefore("javascript","function",{method:{pattern:RegExp("(\\.\\s*)"+e.languages.javascript.function.source),lookbehind:!0,alias:["function","property-access"]}}),e.languages.insertBefore("javascript","constant",{"known-class-name":[{pattern:/\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\b/,alias:"class-name"},{pattern:/\b(?:[A-Z]\w*)Error\b/,alias:"class-name"}]}),e.languages.insertBefore("javascript","keyword",{imports:{pattern:t(/(\bimport\b\s*)(?:<ID>(?:\s*,\s*(?:\*\s*as\s+<ID>|\{[^{}]*\}))?|\*\s*as\s+<ID>|\{[^{}]*\})(?=\s*\bfrom\b)/.source),lookbehind:!0,inside:e.languages.javascript},exports:{pattern:t(/(\bexport\b\s*)(?:\*(?:\s*as\s+<ID>)?(?=\s*\bfrom\b)|\{[^{}]*\})/.source),lookbehind:!0,inside:e.languages.javascript}}),e.languages.javascript.keyword.unshift({pattern:/\b(?:as|default|export|from|import)\b/,alias:"module"},{pattern:/\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\b/,alias:"control-flow"},{pattern:/\bnull\b/,alias:["null","nil"]},{pattern:/\bundefined\b/,alias:"nil"}),e.languages.insertBefore("javascript","operator",{spread:{pattern:/\.{3}/,alias:"operator"},arrow:{pattern:/=>/,alias:"operator"}}),e.languages.insertBefore("javascript","punctuation",{"property-access":{pattern:t(/(\.\s*)#?<ID>/.source),lookbehind:!0},"maybe-class-name":{pattern:/(^|[^$\w\xA0-\uFFFF])[A-Z][$\w\xA0-\uFFFF]+/,lookbehind:!0},dom:{pattern:/\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\b/,alias:"variable"},console:{pattern:/\bconsole(?=\s*\.)/,alias:"class-name"}});for(var n=["function","function-variable","method","method-variable","property-access"],r=0;r<n.length;r++){var a=n[r],o=e.languages.javascript[a];"RegExp"===e.util.type(o)&&(o=e.languages.javascript[a]={pattern:o});var i=o.inside||{};o.inside=i,i["maybe-class-name"]=/^[A-Z][\s\S]*/}}(fe),function(e){var t=e.languages.javascript["template-string"],n=t.pattern.source,r=t.inside.interpolation,a=r.inside["interpolation-punctuation"],o=r.pattern.source;function i(t,r){if(e.languages[t])return{pattern:RegExp("((?:"+r+")\\s*)"+n),lookbehind:!0,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},"embedded-code":{pattern:/[\s\S]+/,alias:t}}}}function l(e,t){return"___"+t.toUpperCase()+"_"+e+"___"}function u(t,n,r){var a={code:t,grammar:n,language:r};return e.hooks.run("before-tokenize",a),a.tokens=e.tokenize(a.code,a.grammar),e.hooks.run("after-tokenize",a),a.tokens}function s(t){var n={};n["interpolation-punctuation"]=a;var o=e.tokenize(t,n);if(3===o.length){var i=[1,1];i.push.apply(i,u(o[1],e.languages.javascript,"javascript")),o.splice.apply(o,i)}return new e.Token("interpolation",o,r.alias,t)}function c(t,n,r){var a=e.tokenize(t,{interpolation:{pattern:RegExp(o),lookbehind:!0}}),i=0,c={},d=u(a.map((function(e){if("string"==typeof e)return e;for(var n,a=e.content;-1!==t.indexOf(n=l(i++,r)););return c[n]=a,n})).join(""),n,r),f=Object.keys(c);return i=0,function e(t){for(var n=0;n<t.length;n++){if(i>=f.length)return;var r=t[n];if("string"==typeof r||"string"==typeof r.content){var a=f[i],o="string"==typeof r?r:r.content,l=o.indexOf(a);if(-1!==l){++i;var u=o.substring(0,l),d=s(c[a]),p=o.substring(l+a.length),m=[];if(u&&m.push(u),m.push(d),p){var h=[p];e(h),m.push.apply(m,h)}"string"==typeof r?(t.splice.apply(t,[n,1].concat(m)),n+=m.length-1):r.content=m}}else{var g=r.content;Array.isArray(g)?e(g):e([g])}}}(d),new e.Token(r,d,"language-"+r,t)}e.languages.javascript["template-string"]=[i("css",/\b(?:styled(?:\([^)]*\))?(?:\s*\.\s*\w+(?:\([^)]*\))*)*|css(?:\s*\.\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source),i("html",/\bhtml|\.\s*(?:inner|outer)HTML\s*\+?=/.source),i("svg",/\bsvg/.source),i("markdown",/\b(?:markdown|md)/.source),i("graphql",/\b(?:gql|graphql(?:\s*\.\s*experimental)?)/.source),i("sql",/\bsql/.source),t].filter(Boolean);var d={javascript:!0,js:!0,typescript:!0,ts:!0,jsx:!0,tsx:!0};function f(e){return"string"==typeof e?e:Array.isArray(e)?e.map(f).join(""):f(e.content)}e.hooks.add("after-tokenize",(function(t){t.language in d&&function t(n){for(var r=0,a=n.length;r<a;r++){var o=n[r];if("string"!=typeof o){var i=o.content;if(Array.isArray(i))if("template-string"===o.type){var l=i[1];if(3===i.length&&"string"!=typeof l&&"embedded-code"===l.type){var u=f(l),s=l.alias,d=Array.isArray(s)?s[0]:s,p=e.languages[d];if(!p)continue;i[1]=c(u,p,d)}}else t(i);else"string"!=typeof i&&t([i])}}}(t.tokens)}))}(fe),function(e){var t=/#(?!\{).+/,n={pattern:/#\{[^}]+\}/,alias:"variable"};e.languages.coffeescript=e.languages.extend("javascript",{comment:t,string:[{pattern:/'(?:\\[\s\S]|[^\\'])*'/,greedy:!0},{pattern:/"(?:\\[\s\S]|[^\\"])*"/,greedy:!0,inside:{interpolation:n}}],keyword:/\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\b/,"class-member":{pattern:/@(?!\d)\w+/,alias:"variable"}}),e.languages.insertBefore("coffeescript","comment",{"multiline-comment":{pattern:/###[\s\S]+?###/,alias:"comment"},"block-regex":{pattern:/\/{3}[\s\S]*?\/{3}/,alias:"regex",inside:{comment:t,interpolation:n}}}),e.languages.insertBefore("coffeescript","string",{"inline-javascript":{pattern:/`(?:\\[\s\S]|[^\\`])*`/,inside:{delimiter:{pattern:/^`|`$/,alias:"punctuation"},script:{pattern:/[\s\S]+/,alias:"language-javascript",inside:e.languages.javascript}}},"multiline-string":[{pattern:/'''[\s\S]*?'''/,greedy:!0,alias:"string"},{pattern:/"""[\s\S]*?"""/,greedy:!0,alias:"string",inside:{interpolation:n}}]}),e.languages.insertBefore("coffeescript","keyword",{property:/(?!\d)\w+(?=\s*:(?!:))/}),delete e.languages.coffeescript["template-string"],e.languages.coffee=e.languages.coffeescript}(fe),function(e){e.languages.diff={coord:[/^(?:\*{3}|-{3}|\+{3}).*$/m,/^@@.*@@$/m,/^\d.*$/m]};var t={"deleted-sign":"-","deleted-arrow":"<","inserted-sign":"+","inserted-arrow":">",unchanged:" ",diff:"!"};Object.keys(t).forEach((function(n){var r=t[n],a=[];/^\w+$/.test(n)||a.push(/\w+/.exec(n)[0]),"diff"===n&&a.push("bold"),e.languages.diff[n]={pattern:RegExp("^(?:["+r+"].*(?:\r\n?|\n|(?![\\s\\S])))+","m"),alias:a,inside:{line:{pattern:/(.)(?=[\s\S]).*(?:\r\n?|\n)?/,lookbehind:!0},prefix:{pattern:/[\s\S]/,alias:/\w+/.exec(n)[0]}}}})),Object.defineProperty(e.languages.diff,"PREFIXES",{value:t})}(fe),fe.languages.git={comment:/^#.*/m,deleted:/^[-–].*/m,inserted:/^\+.*/m,string:/("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,command:{pattern:/^.*\$ git .*$/m,inside:{parameter:/\s--?\w+/}},coord:/^@@.*@@$/m,"commit-sha1":/^commit \w{40}$/m},fe.languages.go=fe.languages.extend("clike",{string:{pattern:/(^|[^\\])"(?:\\.|[^"\\\r\n])*"|`[^`]*`/,lookbehind:!0,greedy:!0},keyword:/\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\b/,boolean:/\b(?:_|false|iota|nil|true)\b/,number:[/\b0(?:b[01_]+|o[0-7_]+)i?\b/i,/\b0x(?:[a-f\d_]+(?:\.[a-f\d_]*)?|\.[a-f\d_]+)(?:p[+-]?\d+(?:_\d+)*)?i?(?!\w)/i,/(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?[\d_]+)?i?(?!\w)/i],operator:/[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\./,builtin:/\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\b/}),fe.languages.insertBefore("go","string",{char:{pattern:/'(?:\\.|[^'\\\r\n]){0,10}'/,greedy:!0}}),delete fe.languages.go["class-name"],fe.languages.graphql={comment:/#.*/,description:{pattern:/(?:"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*")(?=\s*[a-z_])/i,greedy:!0,alias:"string",inside:{"language-markdown":{pattern:/(^"(?:"")?)(?!\1)[\s\S]+(?=\1$)/,lookbehind:!0,inside:fe.languages.markdown}}},string:{pattern:/"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*"/,greedy:!0},number:/(?:\B-|\b)\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,boolean:/\b(?:false|true)\b/,variable:/\$[a-z_]\w*/i,directive:{pattern:/@[a-z_]\w*/i,alias:"function"},"attr-name":{pattern:/\b[a-z_]\w*(?=\s*(?:\((?:[^()"]|"(?:\\.|[^\\"\r\n])*")*\))?:)/i,greedy:!0},"atom-input":{pattern:/\b[A-Z]\w*Input\b/,alias:"class-name"},scalar:/\b(?:Boolean|Float|ID|Int|String)\b/,constant:/\b[A-Z][A-Z_\d]*\b/,"class-name":{pattern:/(\b(?:enum|implements|interface|on|scalar|type|union)\s+|&\s*|:\s*|\[)[A-Z_]\w*/,lookbehind:!0},fragment:{pattern:/(\bfragment\s+|\.{3}\s*(?!on\b))[a-zA-Z_]\w*/,lookbehind:!0,alias:"function"},"definition-mutation":{pattern:/(\bmutation\s+)[a-zA-Z_]\w*/,lookbehind:!0,alias:"function"},"definition-query":{pattern:/(\bquery\s+)[a-zA-Z_]\w*/,lookbehind:!0,alias:"function"},keyword:/\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\b/,operator:/[!=|&]|\.{3}/,"property-query":/\w+(?=\s*\()/,object:/\w+(?=\s*\{)/,punctuation:/[!(){}\[\]:=,]/,property:/\w+/},fe.hooks.add("after-tokenize",(function(e){if("graphql"===e.language)for(var t=e.tokens.filter((function(e){return"string"!=typeof e&&"comment"!==e.type&&"scalar"!==e.type})),n=0;n<t.length;){var r=t[n++];if("keyword"===r.type&&"mutation"===r.content){var a=[];if(d(["definition-mutation","punctuation"])&&"("===c(1).content){n+=2;var o=f(/^\($/,/^\)$/);if(-1===o)continue;for(;n<o;n++){var i=c(0);"variable"===i.type&&(p(i,"variable-input"),a.push(i.content))}n=o+1}if(d(["punctuation","property-query"])&&"{"===c(0).content&&(n++,p(c(0),"property-mutation"),a.length>0)){var l=f(/^\{$/,/^\}$/);if(-1===l)continue;for(var u=n;u<l;u++){var s=t[u];"variable"===s.type&&a.indexOf(s.content)>=0&&p(s,"variable-input")}}}}function c(e){return t[n+e]}function d(e,t){t=t||0;for(var n=0;n<e.length;n++){var r=c(n+t);if(!r||r.type!==e[n])return!1}return!0}function f(e,r){for(var a=1,o=n;o<t.length;o++){var i=t[o],l=i.content;if("punctuation"===i.type&&"string"==typeof l)if(e.test(l))a++;else if(r.test(l)&&0==--a)return o}return-1}function p(e,t){var n=e.alias;n?Array.isArray(n)||(e.alias=n=[n]):e.alias=n=[],n.push(t)}})),function(e){function t(e,t){return"___"+e.toUpperCase()+t+"___"}Object.defineProperties(e.languages["markup-templating"]={},{buildPlaceholders:{value:function(n,r,a,o){if(n.language===r){var i=n.tokenStack=[];n.code=n.code.replace(a,(function(e){if("function"==typeof o&&!o(e))return e;for(var a,l=i.length;-1!==n.code.indexOf(a=t(r,l));)++l;return i[l]=e,a})),n.grammar=e.languages.markup}}},tokenizePlaceholders:{value:function(n,r){if(n.language===r&&n.tokenStack){n.grammar=e.languages[r];var a=0,o=Object.keys(n.tokenStack);!function i(l){for(var u=0;u<l.length&&!(a>=o.length);u++){var s=l[u];if("string"==typeof s||s.content&&"string"==typeof s.content){var c=o[a],d=n.tokenStack[c],f="string"==typeof s?s:s.content,p=t(r,c),m=f.indexOf(p);if(m>-1){++a;var h=f.substring(0,m),g=new e.Token(r,e.tokenize(d,n.grammar),"language-"+r,d),v=f.substring(m+p.length),y=[];h&&y.push.apply(y,i([h])),y.push(g),v&&y.push.apply(y,i([v])),"string"==typeof s?l.splice.apply(l,[u,1].concat(y)):s.content=y}}else s.content&&i(s.content)}return l}(n.tokens)}}}})}(fe),function(e){e.languages.handlebars={comment:/\{\{![\s\S]*?\}\}/,delimiter:{pattern:/^\{\{\{?|\}\}\}?$/,alias:"punctuation"},string:/(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/,number:/\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][+-]?\d+)?/,boolean:/\b(?:false|true)\b/,block:{pattern:/^(\s*(?:~\s*)?)[#\/]\S+?(?=\s*(?:~\s*)?$|\s)/,lookbehind:!0,alias:"keyword"},brackets:{pattern:/\[[^\]]+\]/,inside:{punctuation:/\[|\]/,variable:/[\s\S]+/}},punctuation:/[!"#%&':()*+,.\/;<=>@\[\\\]^`{|}~]/,variable:/[^!"#%&'()*+,\/;<=>@\[\\\]^`{|}~\s]+/},e.hooks.add("before-tokenize",(function(t){e.languages["markup-templating"].buildPlaceholders(t,"handlebars",/\{\{\{[\s\S]+?\}\}\}|\{\{[\s\S]+?\}\}/g)})),e.hooks.add("after-tokenize",(function(t){e.languages["markup-templating"].tokenizePlaceholders(t,"handlebars")})),e.languages.hbs=e.languages.handlebars}(fe),fe.languages.json={property:{pattern:/(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?=\s*:)/,lookbehind:!0,greedy:!0},string:{pattern:/(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,lookbehind:!0,greedy:!0},comment:{pattern:/\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,greedy:!0},number:/-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,punctuation:/[{}[\],]/,operator:/:/,boolean:/\b(?:false|true)\b/,null:{pattern:/\bnull\b/,alias:"keyword"}},fe.languages.webmanifest=fe.languages.json,fe.languages.less=fe.languages.extend("css",{comment:[/\/\*[\s\S]*?\*\//,{pattern:/(^|[^\\])\/\/.*/,lookbehind:!0}],atrule:{pattern:/@[\w-](?:\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};\s]|\s+(?!\s))*?(?=\s*\{)/,inside:{punctuation:/[:()]/}},selector:{pattern:/(?:@\{[\w-]+\}|[^{};\s@])(?:@\{[\w-]+\}|\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};@\s]|\s+(?!\s))*?(?=\s*\{)/,inside:{variable:/@+[\w-]+/}},property:/(?:@\{[\w-]+\}|[\w-])+(?:\+_?)?(?=\s*:)/,operator:/[+\-*\/]/}),fe.languages.insertBefore("less","property",{variable:[{pattern:/@[\w-]+\s*:/,inside:{punctuation:/:/}},/@@?[\w-]+/],"mixin-usage":{pattern:/([{;]\s*)[.#](?!\d)[\w-].*?(?=[(;])/,lookbehind:!0,alias:"function"}}),fe.languages.makefile={comment:{pattern:/(^|[^\\])#(?:\\(?:\r\n|[\s\S])|[^\\\r\n])*/,lookbehind:!0},string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"builtin-target":{pattern:/\.[A-Z][^:#=\s]+(?=\s*:(?!=))/,alias:"builtin"},target:{pattern:/^(?:[^:=\s]|[ \t]+(?![\s:]))+(?=\s*:(?!=))/m,alias:"symbol",inside:{variable:/\$+(?:(?!\$)[^(){}:#=\s]+|(?=[({]))/}},variable:/\$+(?:(?!\$)[^(){}:#=\s]+|\([@*%<^+?][DF]\)|(?=[({]))/,keyword:/-include\b|\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\b/,function:{pattern:/(\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \t])/,lookbehind:!0},operator:/(?:::|[?:+!])?=|[|@]/,punctuation:/[:;(){}]/},function(e){var t=/(?:\\.|[^\\\n\r]|(?:\n|\r\n?)(?![\r\n]))/.source;function n(e){return e=e.replace(/<inner>/g,(function(){return t})),RegExp(/((?:^|[^\\])(?:\\{2})*)/.source+"(?:"+e+")")}var r=/(?:\\.|``(?:[^`\r\n]|`(?!`))+``|`[^`\r\n]+`|[^\\|\r\n`])+/.source,a=/\|?__(?:\|__)+\|?(?:(?:\n|\r\n?)|(?![\s\S]))/.source.replace(/__/g,(function(){return r})),o=/\|?[ \t]*:?-{3,}:?[ \t]*(?:\|[ \t]*:?-{3,}:?[ \t]*)+\|?(?:\n|\r\n?)/.source;e.languages.markdown=e.languages.extend("markup",{}),e.languages.insertBefore("markdown","prolog",{"front-matter-block":{pattern:/(^(?:\s*[\r\n])?)---(?!.)[\s\S]*?[\r\n]---(?!.)/,lookbehind:!0,greedy:!0,inside:{punctuation:/^---|---$/,"front-matter":{pattern:/\S+(?:\s+\S+)*/,alias:["yaml","language-yaml"],inside:e.languages.yaml}}},blockquote:{pattern:/^>(?:[\t ]*>)*/m,alias:"punctuation"},table:{pattern:RegExp("^"+a+o+"(?:"+a+")*","m"),inside:{"table-data-rows":{pattern:RegExp("^("+a+o+")(?:"+a+")*$"),lookbehind:!0,inside:{"table-data":{pattern:RegExp(r),inside:e.languages.markdown},punctuation:/\|/}},"table-line":{pattern:RegExp("^("+a+")"+o+"$"),lookbehind:!0,inside:{punctuation:/\||:?-{3,}:?/}},"table-header-row":{pattern:RegExp("^"+a+"$"),inside:{"table-header":{pattern:RegExp(r),alias:"important",inside:e.languages.markdown},punctuation:/\|/}}}},code:[{pattern:/((?:^|\n)[ \t]*\n|(?:^|\r\n?)[ \t]*\r\n?)(?: {4}|\t).+(?:(?:\n|\r\n?)(?: {4}|\t).+)*/,lookbehind:!0,alias:"keyword"},{pattern:/^```[\s\S]*?^```$/m,greedy:!0,inside:{"code-block":{pattern:/^(```.*(?:\n|\r\n?))[\s\S]+?(?=(?:\n|\r\n?)^```$)/m,lookbehind:!0},"code-language":{pattern:/^(```).+/,lookbehind:!0},punctuation:/```/}}],title:[{pattern:/\S.*(?:\n|\r\n?)(?:==+|--+)(?=[ \t]*$)/m,alias:"important",inside:{punctuation:/==+$|--+$/}},{pattern:/(^\s*)#.+/m,lookbehind:!0,alias:"important",inside:{punctuation:/^#+|#+$/}}],hr:{pattern:/(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m,lookbehind:!0,alias:"punctuation"},list:{pattern:/(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m,lookbehind:!0,alias:"punctuation"},"url-reference":{pattern:/!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/,inside:{variable:{pattern:/^(!?\[)[^\]]+/,lookbehind:!0},string:/(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/,punctuation:/^[\[\]!:]|[<>]/},alias:"url"},bold:{pattern:n(/\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\b|\*\*(?:(?!\*)<inner>|\*(?:(?!\*)<inner>)+\*)+\*\*/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^..)[\s\S]+(?=..$)/,lookbehind:!0,inside:{}},punctuation:/\*\*|__/}},italic:{pattern:n(/\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\b|\*(?:(?!\*)<inner>|\*\*(?:(?!\*)<inner>)+\*\*)+\*/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^.)[\s\S]+(?=.$)/,lookbehind:!0,inside:{}},punctuation:/[*_]/}},strike:{pattern:n(/(~~?)(?:(?!~)<inner>)+\2/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^~~?)[\s\S]+(?=\1$)/,lookbehind:!0,inside:{}},punctuation:/~~?/}},"code-snippet":{pattern:/(^|[^\\`])(?:``[^`\r\n]+(?:`[^`\r\n]+)*``(?!`)|`[^`\r\n]+`(?!`))/,lookbehind:!0,greedy:!0,alias:["code","keyword"]},url:{pattern:n(/!?\[(?:(?!\])<inner>)+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)|[ \t]?\[(?:(?!\])<inner>)+\])/.source),lookbehind:!0,greedy:!0,inside:{operator:/^!/,content:{pattern:/(^\[)[^\]]+(?=\])/,lookbehind:!0,inside:{}},variable:{pattern:/(^\][ \t]?\[)[^\]]+(?=\]$)/,lookbehind:!0},url:{pattern:/(^\]\()[^\s)]+/,lookbehind:!0},string:{pattern:/(^[ \t]+)"(?:\\.|[^"\\])*"(?=\)$)/,lookbehind:!0}}}}),["url","bold","italic","strike"].forEach((function(t){["url","bold","italic","strike","code-snippet"].forEach((function(n){t!==n&&(e.languages.markdown[t].inside.content.inside[n]=e.languages.markdown[n])}))})),e.hooks.add("after-tokenize",(function(e){"markdown"!==e.language&&"md"!==e.language||function e(t){if(t&&"string"!=typeof t)for(var n=0,r=t.length;n<r;n++){var a=t[n];if("code"===a.type){var o=a.content[1],i=a.content[3];if(o&&i&&"code-language"===o.type&&"code-block"===i.type&&"string"==typeof o.content){var l=o.content.replace(/\b#/g,"sharp").replace(/\b\+\+/g,"pp"),u="language-"+(l=(/[a-z][\w-]*/i.exec(l)||[""])[0].toLowerCase());i.alias?"string"==typeof i.alias?i.alias=[i.alias,u]:i.alias.push(u):i.alias=[u]}}else e(a.content)}}(e.tokens)})),e.hooks.add("wrap",(function(t){if("code-block"===t.type){for(var n="",r=0,a=t.classes.length;r<a;r++){var o=t.classes[r],s=/language-(.+)/.exec(o);if(s){n=s[1];break}}var c=e.languages[n];if(c)t.content=e.highlight(t.content.replace(i,"").replace(/&(\w{1,8}|#x?[\da-f]{1,8});/gi,(function(e,t){var n;return"#"===(t=t.toLowerCase())[0]?(n="x"===t[1]?parseInt(t.slice(2),16):Number(t.slice(1)),u(n)):l[t]||e})),c,n);else if(n&&"none"!==n&&e.plugins.autoloader){var d="md-"+(new Date).valueOf()+"-"+Math.floor(1e16*Math.random());t.attributes.id=d,e.plugins.autoloader.loadLanguages(n,(function(){var t=document.getElementById(d);t&&(t.innerHTML=e.highlight(t.textContent,e.languages[n],n))}))}}}));var i=RegExp(e.languages.markup.tag.pattern.source,"gi"),l={amp:"&",lt:"<",gt:">",quot:'"'},u=String.fromCodePoint||String.fromCharCode;e.languages.md=e.languages.markdown}(fe),fe.languages.objectivec=fe.languages.extend("c",{string:{pattern:/@?"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,greedy:!0},keyword:/\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\b/,operator:/-[->]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|\|?|[~^%?*\/@]/}),delete fe.languages.objectivec["class-name"],fe.languages.objc=fe.languages.objectivec,fe.languages.ocaml={comment:{pattern:/\(\*[\s\S]*?\*\)/,greedy:!0},char:{pattern:/'(?:[^\\\r\n']|\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,greedy:!0},string:[{pattern:/"(?:\\(?:[\s\S]|\r\n)|[^\\\r\n"])*"/,greedy:!0},{pattern:/\{([a-z_]*)\|[\s\S]*?\|\1\}/,greedy:!0}],number:[/\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\b/i,/\b0x[a-f0-9][a-f0-9_]*(?:\.[a-f0-9_]*)?(?:p[+-]?\d[\d_]*)?(?!\w)/i,/\b\d[\d_]*(?:\.[\d_]*)?(?:e[+-]?\d[\d_]*)?(?!\w)/i],directive:{pattern:/\B#\w+/,alias:"property"},label:{pattern:/\B~\w+/,alias:"property"},"type-variable":{pattern:/\B'\w+/,alias:"function"},variant:{pattern:/`\w+/,alias:"symbol"},keyword:/\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\b/,boolean:/\b(?:false|true)\b/,"operator-like-punctuation":{pattern:/\[[<>|]|[>|]\]|\{<|>\}/,alias:"punctuation"},operator:/\.[.~]|:[=>]|[=<>@^|&+\-*\/$%!?~][!$%&*+\-.\/:<=>?@^|~]*|\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\b/,punctuation:/;;|::|[(){}\[\].,:;#]|\b_\b/},fe.languages.python={comment:{pattern:/(^|[^\\])#.*/,lookbehind:!0,greedy:!0},"string-interpolation":{pattern:/(?:f|fr|rf)(?:("""|''')[\s\S]*?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,greedy:!0,inside:{interpolation:{pattern:/((?:^|[^{])(?:\{\{)*)\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}])+\})+\})+\}/,lookbehind:!0,inside:{"format-spec":{pattern:/(:)[^:(){}]+(?=\}$)/,lookbehind:!0},"conversion-option":{pattern:/![sra](?=[:}]$)/,alias:"punctuation"},rest:null}},string:/[\s\S]+/}},"triple-quoted-string":{pattern:/(?:[rub]|br|rb)?("""|''')[\s\S]*?\1/i,greedy:!0,alias:"string"},string:{pattern:/(?:[rub]|br|rb)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,greedy:!0},function:{pattern:/((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,lookbehind:!0},"class-name":{pattern:/(\bclass\s+)\w+/i,lookbehind:!0},decorator:{pattern:/(^[\t ]*)@\w+(?:\.\w+)*/m,lookbehind:!0,alias:["annotation","punctuation"],inside:{punctuation:/\./}},keyword:/\b(?:_(?=\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,builtin:/\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,boolean:/\b(?:False|None|True)\b/,number:/\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\b|(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:e[+-]?\d+(?:_\d+)*)?j?(?!\w)/i,operator:/[-+%=]=?|!=|:=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,punctuation:/[{}[\];(),.:]/},fe.languages.python["string-interpolation"].inside.interpolation.inside.rest=fe.languages.python,fe.languages.py=fe.languages.python,fe.languages.reason=fe.languages.extend("clike",{string:{pattern:/"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/,greedy:!0},"class-name":/\b[A-Z]\w*/,keyword:/\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\b/,operator:/\.{3}|:[:=]|\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\-*\/]\.?|\b(?:asr|land|lor|lsl|lsr|lxor|mod)\b/}),fe.languages.insertBefore("reason","class-name",{char:{pattern:/'(?:\\x[\da-f]{2}|\\o[0-3][0-7][0-7]|\\\d{3}|\\.|[^'\\\r\n])'/,greedy:!0},constructor:/\b[A-Z]\w*\b(?!\s*\.)/,label:{pattern:/\b[a-z]\w*(?=::)/,alias:"symbol"}}),delete fe.languages.reason.function,function(e){e.languages.sass=e.languages.extend("css",{comment:{pattern:/^([ \t]*)\/[\/*].*(?:(?:\r?\n|\r)\1[ \t].+)*/m,lookbehind:!0,greedy:!0}}),e.languages.insertBefore("sass","atrule",{"atrule-line":{pattern:/^(?:[ \t]*)[@+=].+/m,greedy:!0,inside:{atrule:/(?:@[\w-]+|[+=])/}}}),delete e.languages.sass.atrule;var t=/\$[-\w]+|#\{\$[-\w]+\}/,n=[/[+*\/%]|[=!]=|<=?|>=?|\b(?:and|not|or)\b/,{pattern:/(\s)-(?=\s)/,lookbehind:!0}];e.languages.insertBefore("sass","property",{"variable-line":{pattern:/^[ \t]*\$.+/m,greedy:!0,inside:{punctuation:/:/,variable:t,operator:n}},"property-line":{pattern:/^[ \t]*(?:[^:\s]+ *:.*|:[^:\s].*)/m,greedy:!0,inside:{property:[/[^:\s]+(?=\s*:)/,{pattern:/(:)[^:\s]+/,lookbehind:!0}],punctuation:/:/,variable:t,operator:n,important:e.languages.sass.important}}}),delete e.languages.sass.property,delete e.languages.sass.important,e.languages.insertBefore("sass","punctuation",{selector:{pattern:/^([ \t]*)\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*(?:,(?:\r?\n|\r)\1[ \t]+\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*)*/m,lookbehind:!0,greedy:!0}})}(fe),fe.languages.scss=fe.languages.extend("css",{comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0},atrule:{pattern:/@[\w-](?:\([^()]+\)|[^()\s]|\s+(?!\s))*?(?=\s+[{;])/,inside:{rule:/@[\w-]+/}},url:/(?:[-a-z]+-)?url(?=\()/i,selector:{pattern:/(?=\S)[^@;{}()]?(?:[^@;{}()\s]|\s+(?!\s)|#\{\$[-\w]+\})+(?=\s*\{(?:\}|\s|[^}][^:{}]*[:{][^}]))/,inside:{parent:{pattern:/&/,alias:"important"},placeholder:/%[-\w]+/,variable:/\$[-\w]+|#\{\$[-\w]+\}/}},property:{pattern:/(?:[-\w]|\$[-\w]|#\{\$[-\w]+\})+(?=\s*:)/,inside:{variable:/\$[-\w]+|#\{\$[-\w]+\}/}}}),fe.languages.insertBefore("scss","atrule",{keyword:[/@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\b/i,{pattern:/( )(?:from|through)(?= )/,lookbehind:!0}]}),fe.languages.insertBefore("scss","important",{variable:/\$[-\w]+|#\{\$[-\w]+\}/}),fe.languages.insertBefore("scss","function",{"module-modifier":{pattern:/\b(?:as|hide|show|with)\b/i,alias:"keyword"},placeholder:{pattern:/%[-\w]+/,alias:"selector"},statement:{pattern:/\B!(?:default|optional)\b/i,alias:"keyword"},boolean:/\b(?:false|true)\b/,null:{pattern:/\bnull\b/,alias:"keyword"},operator:{pattern:/(\s)(?:[-+*\/%]|[=!]=|<=?|>=?|and|not|or)(?=\s)/,lookbehind:!0}}),fe.languages.scss.atrule.inside.rest=fe.languages.scss,fe.languages.sql={comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,lookbehind:!0},variable:[{pattern:/@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/,greedy:!0},/@[\w.$]+/],string:{pattern:/(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\]|\2\2)*\2/,greedy:!0,lookbehind:!0},identifier:{pattern:/(^|[^@\\])`(?:\\[\s\S]|[^`\\]|``)*`/,greedy:!0,lookbehind:!0,inside:{punctuation:/^`|`$/}},function:/\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i,keyword:/\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i,boolean:/\b(?:FALSE|NULL|TRUE)\b/i,number:/\b0x[\da-f]+\b|\b\d+(?:\.\d*)?|\B\.\d+\b/i,operator:/[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i,punctuation:/[;[\]()`,.]/},function(e){var t={pattern:/(\b\d+)(?:%|[a-z]+)/,lookbehind:!0},n={pattern:/(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/,lookbehind:!0},r={comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0},url:{pattern:/\burl\((["']?).*?\1\)/i,greedy:!0},string:{pattern:/("|')(?:(?!\1)[^\\\r\n]|\\(?:\r\n|[\s\S]))*\1/,greedy:!0},interpolation:null,func:null,important:/\B!(?:important|optional)\b/i,keyword:{pattern:/(^|\s+)(?:(?:else|for|if|return|unless)(?=\s|$)|@[\w-]+)/,lookbehind:!0},hexcode:/#[\da-f]{3,6}/i,color:[/\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\b/i,{pattern:/\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,inside:{unit:t,number:n,function:/[\w-]+(?=\()/,punctuation:/[(),]/}}],entity:/\\[\da-f]{1,8}/i,unit:t,boolean:/\b(?:false|true)\b/,operator:[/~|[+!\/%<>?=]=?|[-:]=|\*[*=]?|\.{2,3}|&&|\|\||\B-\B|\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\b/],number:n,punctuation:/[{}()\[\];:,]/};r.interpolation={pattern:/\{[^\r\n}:]+\}/,alias:"variable",inside:{delimiter:{pattern:/^\{|\}$/,alias:"punctuation"},rest:r}},r.func={pattern:/[\w-]+\([^)]*\).*/,inside:{function:/^[^(]+/,rest:r}},e.languages.stylus={"atrule-declaration":{pattern:/(^[ \t]*)@.+/m,lookbehind:!0,inside:{atrule:/^@[\w-]+/,rest:r}},"variable-declaration":{pattern:/(^[ \t]*)[\w$-]+\s*.?=[ \t]*(?:\{[^{}]*\}|\S.*|$)/m,lookbehind:!0,inside:{variable:/^\S+/,rest:r}},statement:{pattern:/(^[ \t]*)(?:else|for|if|return|unless)[ \t].+/m,lookbehind:!0,inside:{keyword:/^\S+/,rest:r}},"property-declaration":{pattern:/((?:^|\{)([ \t]*))(?:[\w-]|\{[^}\r\n]+\})+(?:\s*:\s*|[ \t]+)(?!\s)[^{\r\n]*(?:;|[^{\r\n,]$(?!(?:\r?\n|\r)(?:\{|\2[ \t])))/m,lookbehind:!0,inside:{property:{pattern:/^[^\s:]+/,inside:{interpolation:r.interpolation}},rest:r}},selector:{pattern:/(^[ \t]*)(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\)|(?![\w-]))|\{[^}\r\n]+\})+)(?:(?:\r?\n|\r)(?:\1(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\)|(?![\w-]))|\{[^}\r\n]+\})+)))*(?:,$|\{|(?=(?:\r?\n|\r)(?:\{|\1[ \t])))/m,lookbehind:!0,inside:{interpolation:r.interpolation,comment:r.comment,punctuation:/[{},]/}},func:r.func,string:r.string,comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,lookbehind:!0,greedy:!0},interpolation:r.interpolation,punctuation:/[{}()\[\];:.]/}}(fe),function(e){e.languages.typescript=e.languages.extend("javascript",{"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|type)\s+)(?!keyof\b)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?:\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,lookbehind:!0,greedy:!0,inside:null},builtin:/\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\b/}),e.languages.typescript.keyword.push(/\b(?:abstract|declare|is|keyof|readonly|require)\b/,/\b(?:asserts|infer|interface|module|namespace|type)\b(?=\s*(?:[{_$a-zA-Z\xA0-\uFFFF]|$))/,/\btype\b(?=\s*(?:[\{*]|$))/),delete e.languages.typescript.parameter,delete e.languages.typescript["literal-property"];var t=e.languages.extend("typescript",{});delete t["class-name"],e.languages.typescript["class-name"].inside=t,e.languages.insertBefore("typescript","function",{decorator:{pattern:/@[$\w\xA0-\uFFFF]+/,inside:{at:{pattern:/^@/,alias:"operator"},function:/^[\s\S]+/}},"generic-function":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\s*\()/,greedy:!0,inside:{function:/^#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/,generic:{pattern:/<[\s\S]+/,alias:"class-name",inside:t}}}}),e.languages.ts=e.languages.typescript}(fe),function(e){var t=e.util.clone(e.languages.typescript);e.languages.tsx=e.languages.extend("jsx",t),delete e.languages.tsx.parameter,delete e.languages.tsx["literal-property"];var n=e.languages.tsx.tag;n.pattern=RegExp(/(^|[^\w$]|(?=<\/))/.source+"(?:"+n.pattern.source+")",n.pattern.flags),n.lookbehind=!0}(fe),fe.languages.wasm={comment:[/\(;[\s\S]*?;\)/,{pattern:/;;.*/,greedy:!0}],string:{pattern:/"(?:\\[\s\S]|[^"\\])*"/,greedy:!0},keyword:[{pattern:/\b(?:align|offset)=/,inside:{operator:/=/}},{pattern:/\b(?:(?:f32|f64|i32|i64)(?:\.(?:abs|add|and|ceil|clz|const|convert_[su]\/i(?:32|64)|copysign|ctz|demote\/f64|div(?:_[su])?|eqz?|extend_[su]\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\/f32|reinterpret\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\/f(?:32|64))?|wrap\/i64|xor))?|memory\.(?:grow|size))\b/,inside:{punctuation:/\./}},/\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\b/],variable:/\$[\w!#$%&'*+\-./:<=>?@\\^`|~]+/,number:/[+-]?\b(?:\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:[eE][+-]?\d(?:_?\d)*)?|0x[\da-fA-F](?:_?[\da-fA-F])*(?:\.[\da-fA-F](?:_?[\da-fA-D])*)?(?:[pP][+-]?\d(?:_?\d)*)?)\b|\binf\b|\bnan(?::0x[\da-fA-F](?:_?[\da-fA-D])*)?\b/,punctuation:/[()]/},function(e){var t=/[*&][^\s[\]{},]+/,n=/!(?:<[\w\-%#;/?:@&=+$,.!~*'()[\]]+>|(?:[a-zA-Z\d-]*!)?[\w\-%#;/?:@&=+$.~*'()]+)?/,r="(?:"+n.source+"(?:[ \t]+"+t.source+")?|"+t.source+"(?:[ \t]+"+n.source+")?)",a=/(?:[^\s\x00-\x08\x0e-\x1f!"#%&'*,\-:>?@[\]`{|}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]|[?:-]<PLAIN>)(?:[ \t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g,(function(){return/[^\s\x00-\x08\x0e-\x1f,[\]{}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]/.source})),o=/"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'/.source;function i(e,t){t=(t||"").replace(/m/g,"")+"m";var n=/([:\-,[{]\s*(?:\s<<prop>>[ \t]+)?)(?:<<value>>)(?=[ \t]*(?:$|,|\]|\}|(?:[\r\n]\s*)?#))/.source.replace(/<<prop>>/g,(function(){return r})).replace(/<<value>>/g,(function(){return e}));return RegExp(n,t)}e.languages.yaml={scalar:{pattern:RegExp(/([\-:]\s*(?:\s<<prop>>[ \t]+)?[|>])[ \t]*(?:((?:\r?\n|\r)[ \t]+)\S[^\r\n]*(?:\2[^\r\n]+)*)/.source.replace(/<<prop>>/g,(function(){return r}))),lookbehind:!0,alias:"string"},comment:/#.*/,key:{pattern:RegExp(/((?:^|[:\-,[{\r\n?])[ \t]*(?:<<prop>>[ \t]+)?)<<key>>(?=\s*:\s)/.source.replace(/<<prop>>/g,(function(){return r})).replace(/<<key>>/g,(function(){return"(?:"+a+"|"+o+")"}))),lookbehind:!0,greedy:!0,alias:"atrule"},directive:{pattern:/(^[ \t]*)%.+/m,lookbehind:!0,alias:"important"},datetime:{pattern:i(/\d{4}-\d\d?-\d\d?(?:[tT]|[ \t]+)\d\d?:\d{2}:\d{2}(?:\.\d*)?(?:[ \t]*(?:Z|[-+]\d\d?(?::\d{2})?))?|\d{4}-\d{2}-\d{2}|\d\d?:\d{2}(?::\d{2}(?:\.\d*)?)?/.source),lookbehind:!0,alias:"number"},boolean:{pattern:i(/false|true/.source,"i"),lookbehind:!0,alias:"important"},null:{pattern:i(/null|~/.source,"i"),lookbehind:!0,alias:"important"},string:{pattern:i(o),lookbehind:!0,greedy:!0},number:{pattern:i(/[+-]?(?:0x[\da-f]+|0o[0-7]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|\.inf|\.nan)/.source,"i"),lookbehind:!0},tag:n,important:t,punctuation:/---|[:[\]{}\-,|>?]|\.\.\./},e.languages.yml=e.languages.yaml}(fe);var pe={Prism:fe,theme:{plain:{backgroundColor:"#2a2734",color:"#9a86fd"},styles:[{types:["comment","prolog","doctype","cdata","punctuation"],style:{color:"#6c6783"}},{types:["namespace"],style:{opacity:.7}},{types:["tag","operator","number"],style:{color:"#e09142"}},{types:["property","function"],style:{color:"#9a86fd"}},{types:["tag-id","selector","atrule-id"],style:{color:"#eeebff"}},{types:["attr-name"],style:{color:"#c4b9fe"}},{types:["boolean","string","entity","url","attr-value","keyword","control","directive","unit","statement","regex","at-rule","placeholder","variable"],style:{color:"#ffcc99"}},{types:["deleted"],style:{textDecorationLine:"line-through"}},{types:["inserted"],style:{textDecorationLine:"underline"}},{types:["italic"],style:{fontStyle:"italic"}},{types:["important","bold"],style:{fontWeight:"bold"}},{types:["important"],style:{color:"#c4b9fe"}}]}};function me(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function he(){return he=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},he.apply(this,arguments)}var ge=/\r\n|\r|\n/,ve=function(e){0===e.length?e.push({types:["plain"],content:"\n",empty:!0}):1===e.length&&""===e[0].content&&(e[0].content="\n",e[0].empty=!0)},ye=function(e,t){var n=e.length;return n>0&&e[n-1]===t?e:e.concat(t)},be=function(e,t){var n=e.plain,r=Object.create(null),a=e.styles.reduce((function(e,n){var r=n.languages,a=n.style;return r&&!r.includes(t)||n.types.forEach((function(t){var n=he({},e[t],a);e[t]=n})),e}),r);return a.root=n,a.plain=he({},n,{backgroundColor:null}),a};function Ee(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===t.indexOf(r)&&(n[r]=e[r]);return n}var xe=function(e){function t(){for(var t=this,n=[],r=arguments.length;r--;)n[r]=arguments[r];e.apply(this,n),me(this,"getThemeDict",(function(e){if(void 0!==t.themeDict&&e.theme===t.prevTheme&&e.language===t.prevLanguage)return t.themeDict;t.prevTheme=e.theme,t.prevLanguage=e.language;var n=e.theme?be(e.theme,e.language):void 0;return t.themeDict=n})),me(this,"getLineProps",(function(e){var n=e.key,r=e.className,a=e.style,o=he({},Ee(e,["key","className","style","line"]),{className:"token-line",style:void 0,key:void 0}),i=t.getThemeDict(t.props);return void 0!==i&&(o.style=i.plain),void 0!==a&&(o.style=void 0!==o.style?he({},o.style,a):a),void 0!==n&&(o.key=n),r&&(o.className+=" "+r),o})),me(this,"getStyleForToken",(function(e){var n=e.types,r=e.empty,a=n.length,o=t.getThemeDict(t.props);if(void 0!==o){if(1===a&&"plain"===n[0])return r?{display:"inline-block"}:void 0;if(1===a&&!r)return o[n[0]];var i=r?{display:"inline-block"}:{},l=n.map((function(e){return o[e]}));return Object.assign.apply(Object,[i].concat(l))}})),me(this,"getTokenProps",(function(e){var n=e.key,r=e.className,a=e.style,o=e.token,i=he({},Ee(e,["key","className","style","token"]),{className:"token "+o.types.join(" "),children:o.content,style:t.getStyleForToken(o),key:void 0});return void 0!==a&&(i.style=void 0!==i.style?he({},i.style,a):a),void 0!==n&&(i.key=n),r&&(i.className+=" "+r),i})),me(this,"tokenize",(function(e,t,n,r){var a={code:t,grammar:n,language:r,tokens:[]};e.hooks.run("before-tokenize",a);var o=a.tokens=e.tokenize(a.code,a.grammar,a.language);return e.hooks.run("after-tokenize",a),o}))}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.render=function(){var e=this.props,t=e.Prism,n=e.language,r=e.code,a=e.children,o=this.getThemeDict(this.props),i=t.languages[n],l=function(e){for(var t=[[]],n=[e],r=[0],a=[e.length],o=0,i=0,l=[],u=[l];i>-1;){for(;(o=r[i]++)<a[i];){var s=void 0,c=t[i],d=n[i][o];if("string"==typeof d?(c=i>0?c:["plain"],s=d):(c=ye(c,d.type),d.alias&&(c=ye(c,d.alias)),s=d.content),"string"==typeof s){var f=s.split(ge),p=f.length;l.push({types:c,content:f[0]});for(var m=1;m<p;m++)ve(l),u.push(l=[]),l.push({types:c,content:f[m]})}else i++,t.push(c),n.push(s),r.push(0),a.push(s.length)}i--,t.pop(),n.pop(),r.pop(),a.pop()}return ve(l),u}(void 0!==i?this.tokenize(t,r,i,n):[r]);return a({tokens:l,className:"prism-code language-"+n,style:void 0!==o?o.root:{},getLineProps:this.getLineProps,getTokenProps:this.getTokenProps})},t}(e.Component);const we=xe,ke=function(t){var n=e.createElement(we,X({},pe,{code:t.code,language:"jsx"}),(function(t){var n=t.className,r=t.style,a=t.tokens,o=t.getLineProps,i=t.getTokenProps;return e.createElement("pre",{className:n,style:r},a.map((function(t,n){return e.createElement("div",X({},o({line:t,key:n})),t.map((function(t,n){return e.createElement("span",X({},i({token:t,key:n})))})))})))}));return e.createElement("div",null,e.createElement("div",{className:"example"},t.children),e.createElement("div",null,n))};var Se=function(){return e.createElement(e.Fragment,null,e.createElement(ke,{code:n(3942).Z}))};n(9807);var Ne=ne("gu-layout");const Ae=function(t){var n=t.className,r=Q(t,["className"]);return e.createElement("div",X({className:Ne("aside",{extra:n})},r),t.children)};var Ce=ne("gu-layout");const _e=function(t){var n=t.className,r=Q(t,["className"]);return e.createElement("div",X({className:Ce("header",{extra:n})},r),t.children)};var Oe=ne("gu-layout");const Ie=function(t){var n=t.className,r=Q(t,["className"]);return e.createElement("div",X({className:Oe("content",{extra:n})},r),t.children)};var Te=ne("gu-layout");const Le=function(t){var n=t.className,r=Q(t,["className"]);return e.createElement("div",X({className:Te("footer",{extra:n})},r),t.children)};var Re=ne("gu-layout"),Pe=function(t){var n=t.className,r=Q(t,["className"]),a=t.children,o="length"in a&&a.reduce((function(e,t){return e||t.type===Ae}),!1);return e.createElement("div",X({className:Re({"":!0,hasAside:o},{extra:n})},r),t.children)};const Fe=Pe;n(944),n(1711);const Ue=function(){return e.createElement("div",null,e.createElement(re,{name:"qq"}),e.createElement(re,{name:"baidu"}),e.createElement(re,{name:"wechal"}))},De=function(){return e.createElement("div",null,"example 2")};n(7512);n(1117),n(9959);const Me=function(t){var n=t.className,r=Q(t,["className"]);return e.createElement("input",X({className:te("fui-input",n)},r))};n(4204);var ze=function(t){var n=t.value,r=function(e){return t.transformError&&t.transformError(e)||{required:"必填",minLength:"太短",maxLength:"太长"}[e]||"未知错误"};return e.createElement("form",{onSubmit:function(e){e.preventDefault(),t.onSubmit(e)}},e.createElement("table",{className:"fui-form-table"},e.createElement("tbody",null,t.fields.map((function(a){return e.createElement("tr",{className:te("fui-form-tr"),key:a.name},e.createElement("td",{className:"fui-form-td"},e.createElement("span",{className:"fui-form-label"},a.label)),e.createElement("td",{className:"fui-form-td"},e.createElement(Me,{className:"fui-form-input",type:a.input.type,value:n[a.name]||"",onChange:function(e){return r=a.name,o=e.target.value,l=X(X({},n),((i={})[r]=o,i)),void t.onChange(l);var r,o,i,l}}),e.createElement("div",{className:"fui-form-error"},t.errors[a.name]?"first"===t.errorsDisplayMode?r(t.errors[a.name][0]):t.errors[a.name].map(r).join():e.createElement("span",null," ")," ")))})),e.createElement("tr",{className:"fui-form-tr"},e.createElement("td",{className:"fui-form-td"}),e.createElement("td",{className:"fui-form-td"},t.buttons)))))};ze.defaultProps={errorsDisplayMode:"first"};const Be=ze;function je(e){return null==e||""===e}var $e=["frank","jack","frankfrank","alice","bob"];const Ge=function(){var t=J((0,e.useState)({username:"",password:""}),2),n=t[0],r=t[1],a=J((0,e.useState)([{name:"username",label:"头像",input:{type:"text"}},{name:"password",label:"密码",input:{type:"password"}}]),1)[0],o=J((0,e.useState)({}),2),i=o[0],l=o[1],u=function(e){return new Promise((function(t,n){!function(e,t,r){setTimeout((function(){console.log("我现在知道用户名是否存在"),$e.indexOf(e)>=0?n("unique"):t()}),2e3)}(e,t)}))};return e.createElement("div",null,e.createElement(Be,{value:n,fields:a,buttons:e.createElement(e.Fragment,null,e.createElement(oe,{type:"submit",level:"important"},"提交"),e.createElement(oe,null,"返回")),errors:i,transformError:function(e){return{unique:"username is taken",required:"required",minLength:"too short",maxLength:"too long"}[e]},onChange:function(e){return r(e)},onSubmit:function(e){!function(e,t,n){var r={},a=function(e,t){void 0===r[e]&&(r[e]=[]),r[e].push(t)};function o(e){return"string"==typeof e[1]}t.map((function(t){var n=e[t.key];if(t.validator){var r=t.validator(n);a(t.key,r)}t.required&&je(n)&&a(t.key,"required"),t.minLength&&!je(n)&&n.length<t.minLength&&a(t.key,"minLength"),t.maxLength&&!je(n)&&n.length>t.maxLength&&a(t.key,"maxLength"),t.pattern&&(t.pattern.test(n)||a(t.key,"pattern"))}));var i=function(e){for(var t=[],n=0;n<e.length;n++)e[n]instanceof Array?t.push.apply(t,ee([],J(e[n]),!1)):t.push(e[n]);return t}(Object.keys(r).map((function(e){return r[e].map((function(t){return[e,t]}))}))).map((function(e){var t=J(e,2),n=t[0],r=t[1];return(r instanceof Promise?r:Promise.reject(r)).then((function(){return[n,void 0]}),(function(e){return[n,e]}))}));Promise.all(i).then((function(e){var t,r;n((t=e.filter(o),r={},t.map((function(e){var t=J(e,2),n=t[0],a=t[1];r[n]=r[n]||[],r[n].push(a)})),r))}))}(n,[{key:"username",required:!0},{key:"username",minLength:8,maxLength:16},{key:"username",validator:u},{key:"username",validator:u},{key:"username",pattern:/^[A-Za-z0-9]+$/},{key:"password",required:!0},{key:"password",validator:u},{key:"password",validator:u}],(function(e){console.log(e),l(e),function(e){Object.keys(e).length}(e)}))}}))},He=function(){return e.createElement(e.Fragment,null,e.createElement(ke,{code:n(8215).Z}))};n(949);const Ve=function(){var t=J((0,e.useState)("你好"),2),n=t[0],r=t[1];return e.createElement("div",null,e.createElement(Me,{value:n,onChange:function(e){r(e.target.value)}}),e.createElement("div",null,n))};var qe=function(){return e.createElement(e.Fragment,null,e.createElement(ke,{code:n(2251).Z}))};var We,Ze=(We=function(t){return e.createElement("div",null,t.name,"-----",t.stage)},function(t){return e.createElement(We,X({},t,{name:"高阶组件"}))});n(6860);var Ye=ne("ands-tree");const Ke=function(t){var n,r=function(t,n,a,o){var i,l;void 0===o&&(o=1);var u=((i={})["level-"+o]=!0,i.item=!0,i);return e.createElement("div",{key:t.value,className:Ye(u)},e.createElement("div",null,e.createElement("label",{htmlFor:"",className:Ye("text")},e.createElement("input",{type:"checkbox",onChange:function(e){return a(t,e.target.checked)},checked:n.indexOf(t.value)>=0})),t.text),null===(l=t.children)||void 0===l?void 0:l.map((function(e){return r(e,n,a,o+1)})))};return t.multiple?e.createElement("div",null,null===(n=t.sourceData)||void 0===n?void 0:n.map((function(e,n){return r(e,t.selected,t.onChange)}))):e.createElement("div",null,"未完成")};n(4430);const Xe=function(){var e=document.createElement("div");e.style.position="absolute",e.style.top=e.style.left="-999px",e.style.width=e.style.height="100px",e.style.overflow="scroll",document.body.appendChild(e);var t=e.offsetWidth-e.clientWidth;return document.body.removeChild(e),t},Qe=function(t){var n=t.children,r=Q(t,["children"]),a=J((0,e.useState)(0),2),o=a[0],i=a[1],l=J((0,e.useState)(0),2),u=l[0],s=l[1],c=J((0,e.useState)(0),2),d=c[0],f=c[1],p=(0,e.useRef)(0),m=(0,e.useRef)(0),h=(0,e.useRef)(!1),g=(0,e.useRef)(0),v=function(e){if(!(e<0)){var t=y.current,n=t.scrollHeight,r=t.getBoundingClientRect().height;e>(n-r)*r/n||s(e)}},y=(0,e.useRef)(null);(0,e.useEffect)((function(){var e=y.current.scrollHeight,t=y.current.getBoundingClientRect().height;i(t*t/e)}),[]);var b=function(e){h.current&&e.preventDefault()};(0,e.useEffect)((function(){return document.addEventListener("mousemove",x),document.addEventListener("mouseup",E),document.addEventListener("selectstart",b),function(){document.removeEventListener("mousemove",x),document.removeEventListener("mouseup",E),document.removeEventListener("selectstart",b)}}),[]);var E=function(){h.current=!1},x=function(e){if(h.current){var t=e.clientY-p.current,n=m.current+t;v(n);var r=y.current.scrollHeight,a=y.current.getBoundingClientRect().height;y.current.scrollTop=n*r/a}};return e.createElement("div",X({className:"fui-scroll"},r),e.createElement("div",{className:"fui-scroll-inner",style:{right:-Xe()},ref:y,onTouchMove:function(e){var t=e.touches[0].clientY-g.current;t>0&&f(d+t),g.current=e.touches[0].clientY},onTouchStart:function(e){g.current=e.touches[0].clientY},onScroll:function(e){var t=y.current,n=t.scrollHeight,r=t.getBoundingClientRect().height,a=t.scrollTop;v(a*r/n)},onTouchEnd:function(){f(0)}}," ",n),e.createElement("div",{className:"fui-scroll-track"},e.createElement("div",{className:"fui-scroll-bar",style:{height:o,top:u},onMouseDown:function(e){h.current=!0,p.current=e.clientY,m.current=u}})))};n(2826);const Je=function(t){return e.createElement("div",{className:"choice-body"},t.choicedata.map((function(n,r){return t.bool?function(n,r){return e.createElement("div",{key:r,className:-1!==t.visible.indexOf(n)?"choice active":"choice ",onClick:function(){return t.onClicksw(function(e){var n=ee([],J(t.visible),!1);if(-1==n.indexOf(e)){if(t.visible.length>2)return[];n.push(e)}else n.splice(n.indexOf(e),1);return n}(n))}},n)}(n,r):function(n,r){return e.createElement("div",{key:r,className:n===t.visible[0]?"choice active":"choice",onClick:function(){return t.onClicksw(function(e){return t.visible[0]===e?[]:[e]}(n))}},n)}(n,r)})))};n(92);const et=function(){var t=(0,e.useRef)(),n=(0,e.useRef)(null),r=J((0,e.useState)([{id:1,title:"床前明月光",username:"0000ff",point:10},{id:2,title:"疑是地上霜",username:"cc00cc",point:20},{id:3,title:"举头望明月",username:"9900ff",point:30},{id:4,title:"低头思故乡",username:"ff0033",point:40},{id:5,title:"李白",username:"ff00cc",point:40}]),2),a=r[0],o=r[1],i=(0,e.useMemo)((function(){return a.slice().sort((function(e,t){return e.id-t.id}))}),[a]),l=(0,e.useMemo)((function(){var e=a.length;return 30*Math.ceil(e/1)}),[a]),u=(0,e.useCallback)((function(e,r){var i,l,u,s,c,d=null===(i=n.current)||void 0===i?void 0:i.getBoundingClientRect();if(d){var f=e-d.left,p=r-d.top,m=t.current;if(!m||f<0||f>d.width||p<0||p>d.height)return;var h=Math.floor(f/110),g=1*Math.floor(p/30)+h;a.indexOf(m)<g&&g++;var v=a[g],y=function(e,t,n){var r=ee([],J(e),!1),a=r.indexOf(t);if(t===n)return r;r.splice(a,1);var o=n?r.indexOf(n):-1;return n&&o>=0?r.splice(o,0,t):r.push(t),r}(a,m,v);if(l=a,u=y.map((function(e){return e.id})),s=l.map((function(e){return e.id})),c=!0,u.forEach((function(e,t){e!==s[t]&&(c=!1)})),c)return;o(y)}}),[a]),s=(0,e.useCallback)((function(e){e.preventDefault(),u(e.clientX,e.clientY)}),[u]),c=(0,e.useCallback)((function(){var e,r=t.current;if(r){var a=null===(e=n.current)||void 0===e?void 0:e.querySelector('[data-id="'.concat(r.id,'"]'));a&&a.classList.remove("draggingItem"),t.current=void 0}}),[]);return e.createElement("div",{className:"dragpull",ref:n,style:{width:110},onDragEnd:c,onDragOver:s},e.createElement("ul",{className:"list",style:{height:l}},i.map((function(r){var o=a.findIndex((function(e){return e===r})),i=Math.floor(o/1),l=o%1;return e.createElement("li",{className:"item",key:r.id,draggable:!0,style:{height:30,left:110*l,top:30*i,padding:"0 ".concat(0,"px")},"data-id":r.id,onDragStart:function(e){return function(e,r){var a;t.current=r;var o=null===(a=n.current)||void 0===a?void 0:a.querySelector('[data-id="'.concat(r.id,'"]'));o&&o.classList.add("draggingItem")}(0,r)}},r.title)}))))},tt=function(){var t=J((0,e.useState)([{id:1,title:"运交华盖欲何求，未敢翻身已碰头。",username:"家玮",point:10},{id:2,title:"破帽遮颜过闹市，漏船载酒泛中流。",username:"家玮",point:20},{id:2,title:"横眉冷对千夫指，俯首甘为孺子牛。",username:"家玮",point:20},{id:2,title:"躲进小楼成一统，管他冬夏与春秋。",username:"家玮",point:20}]),2),n=t[0],r=(t[1],J((0,e.useState)([{id:1,title:"其实地上本没有路，走的人多了，也便成了路。",username:"家玮",point:60},{id:2,title:"我家门前有两棵树，一棵是枣树，另一棵也是枣树。",username:"家玮",point:80}]),2)),a=r[0],o=(r[1],(0,e.useCallback)((function(e,t){}),[n])),i=(0,e.useCallback)((function(e){}),[o]);return e.createElement("div",null,e.createElement("ul",{className:"luxun-list",onDrop:function(e){e.preventDefault(),console.log(e,"拖动过程中，释放鼠标触发事件")},onDragOver:i},e.createElement("div",{className:"dragpull-title"},"鲁迅"),n.map((function(t,n){return e.createElement("li",{draggable:"true",id:"".concat(t.id),className:"dragpull-li",onDragStart:function(e){},key:n},t.title)}))),e.createElement("ul",{className:"luxun-list",onDragEnter:function(){}},e.createElement("div",{className:"dragpull-title"},"周树人"),a.map((function(t,n){return e.createElement("li",{className:"dragpull-title",draggable:"true",key:n},t.title)}))))};var nt=n(981),rt=n.n(nt),at=(n(8643),e.createContext({map:{},onChange:function(e){},setDialogVisible:function(){}}));const ot=function(t){var n=J((0,e.useState)(!1),2),r=n[0],a=n[1],o={};return t.dataSource.map((function(e){var t=rt().convertToPinyin(e)[0];o[t]=o[t]||[],o[t].push(e)})),e.createElement(at.Provider,{value:{map:o,onChange:t.onChange,setDialogVisible:a}},e.createElement("div",{onClick:function(){a(!0)}},t.children),r&&e.createElement(it,{onClose:function(){return a(!1)}}))};var it=function(n){var r=(0,e.useContext)(at),a=r.map,o=r.onChange,i=Object.keys(a).sort(),l=Object.entries(a).sort((function(e,t){return e[0].charCodeAt(0)-t[0].charCodeAt(0)}));return t.createPortal(e.createElement("div",{className:"fui-citySelect-dialog",onClick:n.onClose},e.createElement("header",null,e.createElement("span",{className:"icon"},"<"),e.createElement("span",null,"选择城市")),e.createElement(lt,null),e.createElement("h2",null,"全部城市"),e.createElement("ol",{className:"fui-citySelect-index"},i.map((function(t){return e.createElement("li",{key:t},t)}))),e.createElement("div",{className:"cityList"},"所有城市"),l.map((function(t){var n=J(t,2),r=n[0],a=n[1];return e.createElement("div",{key:r,className:"fui-citySelect-citySection"},e.createElement("h4",{"data-letter":r},r),a.map((function(t){return e.createElement("div",{className:"fui-citySelect-cityName",key:t,onClick:function(){return function(e){o(e)}(t)}},t)})))}))),document.body)},lt=function(){var t=J((0,e.useState)("加载中..."),2),n=t[0],r=t[1];return(0,e.useEffect)((function(){var e=new XMLHttpRequest;e.open("get","http://ip-api.com/json/?lang=zh-CN"),e.onload=function(){var t=e.responseText,n=JSON.parse(t).city;r(n)},e.onerror=function(){r("未知")},e.send()}),[]),e.createElement("div",{className:"currentCity"},"当前城市:",n)};const ut=function(t){var n=J((0,e.useState)(!1),2),r=n[0],a=n[1],o=J((0,e.useState)(["第一","第二","dishan"]),2),i=o[0],l=(o[1],(0,e.useRef)(null)),u=(0,e.useRef)(null);return function(t,n){var a=J((0,e.useState)(0),2),o=a[0],i=a[1];(0,e.useEffect)((function(){i((function(e){return e+1}))}),[t]),(0,e.useEffect)((function(){o>1&&function(){if(r){if(console.log("打开"),!l.current||!u.current)return;u.current.style.backgroundColor="rgba(216, 216, 216, 0)",l.current.style.height="auto",u.current.getBoundingClientRect();var e=l.current.getBoundingClientRect().height;l.current.style.height="0px",l.current.getBoundingClientRect(),l.current.style.height=e+"px",u.current.style.backgroundColor="rgba(216, 216, 216, .5)"}else{if(console.log("关闭"),!l.current||!u.current)return;e=l.current.getBoundingClientRect().height,l.current.style.height=e+"px",l.current.getBoundingClientRect(),l.current.style.height="0px",u.current.style.backgroundColor="rgba(216, 216, 216, .5)",u.current.getBoundingClientRect(),u.current.style.backgroundColor="rgba(216, 216, 216, 0)"}}()}),[o])}(r),e.createElement("div",{className:"Action"},e.createElement("h2",null,"第一个例子"),e.createElement("div",{className:"actionsheet",onClick:function(){return a(!0)}},e.createElement("div",null,"基础用发"),e.createElement("div",null,"》")),e.createElement("div",{ref:u,className:r?"actionsheet-dialog":"none",onClick:function(){return a(!1)}},e.createElement("div",{className:"dialog-z",ref:l},e.createElement("div",{className:"dialog-head"},i.map((function(t){return e.createElement("div",{className:"dialog",key:t,onClick:function(){!function(e){console.log(e)}(t)}}," ",t)}))),e.createElement("div",{className:"dialog-qux",onClick:function(){return a(!1)}},"取消"))))};n(4046);n(5165);var st=function(t){console.log(t);var n=J((0,e.useState)(0),2),r=n[0],a=n[1];return e.createElement("div",null,e.createElement("div",{className:"tabs"},e.Children.map(t.children,(function(t,n){return e.createElement("div",{onClick:function(){a(n)},className:r===n?"select boxsw":" select "},null==t?void 0:t.props.title)}))),e.createElement("div",{className:"tabs-content"},e.Children.map(t.children,(function(t,n){return e.createElement("div",{onClick:function(){a(n)},className:r===n?"tabs-content-select":"none"},t)}))))};st.TabPane=function(t){return console.log(t),e.createElement("div",null,t)};const ct=st;n(8710);const dt=function(){return e.createElement("div",{className:"tables"},e.createElement("div",null))};var ft={user:"",books:"",movies:""},pt=function(e,t){switch(t.type){case"setUser":return X(X({},e),{user:t.user});case"setBook":return X(X({},e),{books:t.books});default:throw new Error}},mt=(0,e.createContext)({}),ht=function(){var t=(0,e.useContext)(mt),n=t.state,r=t.dispatch;return e.createElement("div",null,e.createElement("h1",{onClick:function(){r({type:"setUser",user:"baijiawei"})}},"我的信息"),e.createElement("h1",null,"name:",null==n?void 0:n.user))},gt=function(){return e.createElement("div",null,e.createElement("h1",null,"我的书籍"))},vt=function(){return e.createElement("div",null,e.createElement("h1",null,"我的电影"))};const yt=function(t){var n=J((0,e.useState)(t.defaultValue),2),r=n[0],a=n[1],o=function(e,n){e!==r&&(a(e),t.onChange&&t.onChange(e,n))};return e.createElement("div",{className:"xue-radio "+[t.className],style:t.style},function(){var n=t.radioStyle,a=void 0===n?"radio":n,i=t.vertical,l=void 0!==i&&i,u=t.children;return e.Children.map(u,(function(t){return e.cloneElement(t,{onClick:o,checkedValue:r,radioStyle:a,vertical:l})}))}())};n(8398);const bt=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];var r=new Array;return t.forEach((function(t){if("string"==typeof t)r.push("".concat("xue","-").concat(e.toLowerCase()).concat(t&&"-"+t));else if(t instanceof Array)t.forEach((function(e){return"string"==typeof e&&r.push(e)}));else if("object"==typeof t&&!(t instanceof Array))for(var n in t)t.hasOwnProperty(n)&&t[n]&&r.push(n)})),r.filter((function(e){return e})).join(" ")},Et=function(t){S.any.isRequired,S.any,S.func,S.oneOf(["radio","button"]),S.bool,S.bool;var n=t.checkedValue,r=t.radioStyle,a=t.disabled,o=t.vertical,i=t.value,l=t.children,u=function(e){var n=t.value,r=t.onClick;!t.disabled&&r&&r(n,e)},s=bt("Option","",[r+"-style"],{checked:i===n,disabled:a,vertical:o});return"radio"===r?e.createElement("label",{className:s,onClick:u},e.createElement("span",{className:"label-dot"}),e.createElement("div",{className:"label-text"},l)):e.createElement("label",{className:s,onClick:u},e.createElement("div",{className:"label-text"},l))};n(9321);n(6534);n(3967);const xt=function(t){var n=t.size,r=t.disabled,a=t.style,o=t.className,i=t.onChange,l=J((0,e.useState)(t.defaultChecked),2),u=l[0],s=l[1],c=bt("Switch","",[o,n],{checked:u,disabled:r});return e.createElement("div",null,e.createElement("span",{className:c,onClick:function(e){r||(s(!u),i&&i(!u,e))},style:a},e.createElement("span",{className:bt("Switch","core")})))};var wt=n(6442),kt=n(9793);n(6570),t.render(e.createElement(j,null,e.createElement(Pe,{className:"site-page"},e.createElement(_e,{className:"site-header"},e.createElement("div",{className:"logo"},e.createElement("img",{src:kt,width:"48",height:"48",alt:"logo"}),e.createElement("span",null,"Ands")),e.createElement("div",{className:"git"},e.createElement("a",{href:"https://github.com/baijia-wei/frank-text"},e.createElement("img",{src:wt,width:"20",height:"20",alt:"github"}),"GitHub"))),e.createElement(Pe,null,e.createElement(Ae,{className:"site-aside"},e.createElement("ul",null,e.createElement("li",null,e.createElement(K,{to:"/ganging"},"安装")),e.createElement("li",null,e.createElement(K,{to:"/updated"},"更新日志")),e.createElement("li",{className:"site-aside-lanzhou"})),e.createElement("h2",null,"组件"),e.createElement("ul",null,e.createElement("li",null,e.createElement(K,{to:"/icon"},"Icon")),e.createElement("li",null,e.createElement(K,{to:"/button"},"Button 按钮")),e.createElement("li",null,e.createElement(K,{to:"/dialog"},"对话框")),e.createElement("li",null,e.createElement(K,{to:"/layout"},"布局")),e.createElement("li",null,e.createElement(K,{to:"/form"},"表单")),e.createElement("li",null,e.createElement(K,{to:"/tree"},"树形组件")),e.createElement("li",null,e.createElement(K,{to:"/input"},"输入框")),e.createElement("li",null,e.createElement(K,{to:"/scroll"},"滚动条")),e.createElement("li",null,e.createElement(K,{to:"/choice"},"选择器")),e.createElement("li",null,e.createElement(K,{to:"/hoc"},"草稿练习")),e.createElement("li",null,e.createElement(K,{to:"/dragpull"},"拖拽")),e.createElement("li",null,e.createElement(K,{to:"/cityselect"},"城市组件")),e.createElement("li",null,e.createElement(K,{to:"/actionsheet"},"动作面板")),e.createElement("li",null,e.createElement(K,{to:"/tabexample"},"Tabs")),e.createElement("li",null,e.createElement(K,{to:"/tables"},"Tables 表格")),e.createElement("li",null,e.createElement(K,{to:"/redux"},"Redux")),e.createElement("li",null,e.createElement(K,{to:"/radio"},"Radio")),e.createElement("li",null,e.createElement(K,{to:"/switch"},"Switch")),e.createElement("li",null,e.createElement(K,{to:"/activity"},"活动")),e.createElement("li",null,e.createElement(K,{to:"/longList"},"Long list")))),e.createElement(Ie,null,e.createElement(B,{path:"/icon",component:function(){return e.createElement(e.Fragment,null,e.createElement(ke,{code:n(8272).Z},e.createElement(Ue,null)),e.createElement(ke,{code:n(1864).Z},e.createElement(De,null)))}}),e.createElement(B,{path:"/button",component:function(){return e.createElement("div",null,e.createElement("div",{className:"ands-header"},e.createElement("h1",null,"Button按钮"),e.createElement("p",null,"按钮用于开始一个即时操作"),e.createElement("h2",null,"何时使用"),e.createElement("p",null,"标记了一个（或封装一组）操作命令，响应用户点击行为，触发相应的业务逻辑")),e.createElement("div",{className:"ands-header-content"},e.createElement("div",{className:"ands-content-left"},e.createElement(ce,null),e.createElement("div",{className:"ands-content-left-text"},e.createElement("p",null))),e.createElement("div",{className:"ands-content-right"},e.createElement(Se,null))))}}),e.createElement(B,{path:"/dialog",component:function(){var t=J((0,e.useState)(!1),2),n=t[0],r=t[1],a=J((0,e.useState)(!1),2),o=a[0],i=a[1];return e.createElement("div",null,e.createElement("div",null,e.createElement("div",null,"基础用法"),e.createElement(oe,{onClick:function(){var t=ue(e.createElement("h1",null,"弹窗内容",e.createElement(oe,{onClick:function(){return t()}},"默认关闭")))}},"提示")),e.createElement("div",null,e.createElement("div",null,"基础用法2"),e.createElement(oe,{onClick:function(){return t=e.createElement(oe,{onClick:function(){return n()}},"OK"),void(n=ue("1",[t]));var t,n}},"弹窗"),e.createElement(oe,{onClick:function(){return t=function(){console.log("你点击了yes")},n=function(){console.log("你点击了no")},r=[e.createElement(oe,{onClick:function(){a(),t&&t()},level:"important"},"yes"),e.createElement(oe,{onClick:function(){a(),n&&n()}},"no")],void(a=ue("1",r,n));var t,n,r,a}},"确定取消")),e.createElement("div",null,e.createElement("div",null,"基础用法3"),e.createElement(oe,{onClick:function(){return r(!n)}},"click"),e.createElement(se,{visible:n,buttons:[e.createElement(oe,{onClick:function(){r(!1)},level:"important"},"确定"),e.createElement(oe,{onClick:function(){r(!1)}},"取消")],onClose:function(){r(!1)}},e.createElement("strong",null,"hi"))),e.createElement("div",{style:{position:"relative",zIndex:9}},e.createElement("div",null,"遮罩层点击关闭"),e.createElement(oe,{onClick:function(){return i(!o)}},"click"),e.createElement(se,{visible:o,closeOnClickMask:!0,buttons:[e.createElement(oe,{onClick:function(){i(!1)}},"取消"),e.createElement(oe,{level:"important",onClick:function(){i(!1)}},"确定")],onClose:function(){i(!1)}},e.createElement("strong",null,"hi"))))}}),e.createElement(B,{path:"/layout",component:function(){return e.createElement("div",null,e.createElement("div",null,e.createElement("h1",null,"第一个例子"),e.createElement(Fe,{style:{height:500,width:500},className:"hi"},e.createElement(_e,{className:"x"},"header"),e.createElement(Ie,{className:"y"},"content"),e.createElement(Le,{className:"x"},"footer"))),e.createElement("div",null,e.createElement("h1",null,"第二个例子"),e.createElement(Fe,{style:{height:500,width:500},className:"hi"},e.createElement(_e,{className:"x"},"header"),e.createElement(Fe,null,e.createElement(Ae,{className:"z"},"aside"),e.createElement(Ie,{className:"y"},"content")),e.createElement(Le,{className:"x"},"footer"))),e.createElement("div",null,e.createElement("h1",null,"第三个例子"),e.createElement(Fe,{style:{height:500,width:500},className:"hi"},e.createElement(_e,{className:"x"},"header"),e.createElement(Fe,null,e.createElement(Ie,{className:"y"},"content"),e.createElement(Ae,{className:"z"},"aside")),e.createElement(Le,{className:"x"},"footer"))),e.createElement("div",null,e.createElement("h1",null,"第四个例子"),e.createElement(Fe,{style:{height:500,width:500},className:"hi"},e.createElement(Ae,{className:"z"},"aside"),e.createElement(Fe,null,e.createElement(_e,{className:"x"},"header"),e.createElement(Ie,{className:"y"},"content"),e.createElement(Le,{className:"x"},"footer")))))}}),e.createElement(B,{path:"/ganging",component:function(){return e.createElement("div",null,e.createElement("div",null,e.createElement("h2",null,"NPM安装"),e.createElement("p",null,"推荐使用 npm 来安装，享受生态圈和工具带来的便利，更好地和 webpack 配合使用，当然，我们也推荐使用 ES2015。"),e.createElement("pre",{className:"ands-guanwan"},"$ npm install ands-jiawei --save"),e.createElement("p",null,"如果您使用了 NPM 安装，并使用 webpack 作为构建工具，请继续阅读快速上手章节。")))}}),e.createElement(B,{path:"/updated",component:function(){return e.createElement("div",null,e.createElement("div",null,e.createElement("h2",null,"更新日志"),e.createElement("h3",null,"1.0.2.6"),e.createElement("div",null,"2021/3/20",e.createElement("ul",null,e.createElement("li",null,"表单验证完成待优化"),e.createElement("li",null,"修复 布局组件的报错。")))),e.createElement("div",{className:"critic"},e.createElement("h2",null,"更新日志"),e.createElement("h3",null,"1.0.2.5"),e.createElement("div",null,"2021/3/15",e.createElement("ul",null,e.createElement("li",null,"新增doc配置文件"),e.createElement("li",null,"按钮样式编写"),e.createElement("li",null,"打包部署完成"),e.createElement("li",null,"修复 布局组件的报错。")))))}}),e.createElement(B,{path:"/form",component:function(){return e.createElement("div",null,e.createElement("div",{className:"ands-header"},e.createElement("h2",null,"基本使用"),e.createElement("p",null,"传入校验规则。")),e.createElement("div",{className:"ands-header-content"},e.createElement("div",{className:"ands-content-left"},e.createElement(Ge,null),e.createElement("div",{className:"ands-content-left-text"},e.createElement("p",null))),e.createElement("div",{className:"ands-content-right"},e.createElement(He,null))))}}),e.createElement(B,{path:"/input",component:function(){return e.createElement("div",null,e.createElement("div",{className:"ands-header"},e.createElement("h2",null,"基本使用"),e.createElement("p",null,"通过鼠标或键盘输入内容，是最基础的表单域的包装。")),e.createElement("div",{className:"ands-header-content"},e.createElement("div",{className:"ands-content-left"},e.createElement(Ve,null),e.createElement("div",{className:"ands-content-left-text"},e.createElement("p",null))),e.createElement("div",{className:"ands-content-right"},e.createElement(qe,null))))}}),e.createElement(B,{path:"/hoc",component:function(t){return e.createElement("div",null,e.createElement(Ze,{stage:"react"}))}}),e.createElement(B,{path:"/tree",component:function(){var t=J((0,e.useState)([{text:"一职中",value:"1",children:[{text:"一直用1.1",value:"1.1",children:[{text:"一直用1.1.1",value:"1.1.1"},{text:"一直用1.1.2",value:"1.1.2"},{text:"一直用1.1.3",value:"1.1.3"},{text:"一直用1.1.4",value:"1.1.4"}]},{text:"一直用1.2",value:"1.2"},{text:"一直用1.3",value:"1.3"},{text:"一直用1.4",value:"1.4",children:[{text:"一直用1.4.1",value:"1.4.1"},{text:"一直用1.4.2",value:"1.4.2"},{text:"一直用1.4.3",value:"1.4.3"},{text:"一直用1.4.4",value:"1.4.4",children:[{text:"一直用1.4.4.1",value:"1.4.4.1"},{text:"一直用1.4.4.2",value:"1.4.4.2"},{text:"一直用1.4.4.3",value:"1.4.4.3"},{text:"一直用1.4.4.4",value:"1.4.4.4"}]}]}]},{text:"二职中",value:"2",children:[{text:"二直用1",value:"2.1",children:[{text:"二直用2.1.1",value:"2.1.1",children:[{text:"二直用2.1.1",value:"2.1.1"}]}]},{text:"二直用2",value:"2.2",children:[{text:"二直用2.2.1",value:"2.2.1"}]},{text:"二直用3",value:"2.3",children:[{text:"二直用2.3.1",value:"2.3.1"}]},{text:"二直用4",value:"2.4",children:[{text:"二直用2.4.1",value:"2.4.1"}]}]}]),2),n=t[0],r=(t[1],J((0,e.useState)([]),2)),a=r[0],o=r[1];return e.createElement("div",null,e.createElement("h1",null,"展示数据"),e.createElement(Ke,{multiple:!0,sourceData:n,onChange:function(e,t){o(!0===t?ee(ee([],J(a),!1),[e.value],!1):a.filter((function(t){return t!=e.value})))},selected:a}))}}),e.createElement(B,{path:"/scroll",component:function(){return e.createElement("div",null,e.createElement("h2",null,"第一个例子"),e.createElement(Qe,{style:{height:400}},e.createElement("p",null,"1"),e.createElement("p",null,"2"),e.createElement("p",null,"1"),e.createElement("p",null,"1"),e.createElement("p",null,"3"),e.createElement("p",null,"4"),e.createElement("p",null,"5"),e.createElement("p",null,"6"),e.createElement("p",null,"7"),e.createElement("p",null,"1"),e.createElement("p",null,"2"),e.createElement("p",null,"3"),e.createElement("p",null,"15"),e.createElement("p",null,"11"),e.createElement("p",null,"31"),e.createElement("p",null,"13"),e.createElement("p",null,"14"),e.createElement("p",null,"16"),e.createElement("p",null,"17"),e.createElement("p",null,"18"),e.createElement("p",null,"14"),e.createElement("p",null,"11"),e.createElement("p",null,"12")))}}),e.createElement(B,{path:"/choice",component:function(){var t=J((0,e.useState)(["钟离"]),2),n=t[0],r=t[1],a=J((0,e.useState)(["神子","将军","心海","钟离","公子","胡桃"]),1)[0],o=J((0,e.useState)([]),2),i=o[0],l=o[1],u=J((0,e.useState)(["神子","将军","公子","胡桃","心海","钟离"]),1)[0];return e.createElement("div",null,e.createElement("div",null,"单选"),e.createElement(Je,{visible:n,choicedata:a,bool:!1,onClicksw:function(e){r(e)}}),e.createElement("div",null,"多选"),e.createElement(Je,{visible:i,choicedata:u,bool:!0,onClicksw:function(e){l(e)}}))}}),e.createElement(B,{path:"/dragpull",component:function(){return e.createElement("div",null,e.createElement(et,null),e.createElement("div",null,"滑动"),e.createElement(tt,null))}}),e.createElement(B,{path:"/cityselect",component:function(t){return e.createElement("div",null,e.createElement("div",null,e.createElement("h2",null,"第一个例子"),e.createElement(ot,{onChange:function(e){console.log(e)},dataSource:["鞍山","深圳","中山","安庆","琴岛","安平","安宁","安福","桂林","盘锦市","上海","忻州市","汾阳市","河津市","孝义市"]},"选择城市")))}}),e.createElement(B,{path:"/actionsheet",component:function(t){return e.createElement(e.Fragment,null,e.createElement(ut,null))}}),e.createElement(B,{path:"/tabexample",component:function(){return e.createElement("div",null,"第一个例子",e.createElement(ct,null,e.createElement("div",{title:"水果"},"菠萝"),e.createElement("div",{title:"蔬菜"},"黄瓜"),e.createElement("div",{title:"家具"},"椅子")))}}),e.createElement(B,{path:"/tables",component:function(){return e.createElement(e.Fragment,null,e.createElement("div",null,"第一个例子"),e.createElement(dt,{dome:function(){return e.createElement("div",null,e.createElement(re,{name:"qq"}),e.createElement(re,{name:"baidu"}),e.createElement(re,{name:"wechal"}))},dataSourcew:[{key:1,name:"三上悠亚",age:32,addres:"西湖区湖底公园1号",cis:10,baxodi:18,baodi:100,sad:"展开"},{key:2,name:"桥本有菜",age:42,addres:"西湖区湖底公园2号",cis:10,baodi:230,baxodi:18,sad:"展开"},{key:3,name:"波多野结衣",age:32,addres:"西湖区湖底公园5号",cis:10,baodi:130,baxodi:18,sad:"展开"},{key:4,name:"花泽香菜",age:32,addres:"西湖区湖底公园6号",cis:16,baodi:190,baxodi:18,sad:"展开"}],columns:[{title:"时间",dataIndex:"name",key:"name"},{title:"名称",dataIndex:"namex",key:"name"},{title:"类别",dataIndex:"age",key:"age"},{title:"星级",dataIndex:"zhuzhi",key:"zhuzhi"},{title:"总次数",dataIndex:"zhankai",key:"zhankai"},{title:"保底次数",dataIndex:"zhankai",key:"zhankai"},{title:"展开",dataIndex:"zhankai",key:"zhankaiX"}]}))}}),e.createElement(B,{path:"/redux",component:function(){var t=J((0,e.useReducer)(pt,ft),2),n=t[0],r=t[1];return e.createElement(mt.Provider,{value:{state:n,dispatch:r}},e.createElement(ht,null),e.createElement(gt,null),e.createElement(vt,null))}}),e.createElement(B,{path:"/Radio",component:function(){return e.createElement("div",null,e.createElement("h1",null,"我的信息"),e.createElement(yt,{defaultValue:"apple",onChange:function(e){return function(e){console.log(e+"1")}(e)}},e.createElement(Et,{value:"apple"},"Apple"),e.createElement(Et,{value:"orange"},"Orange"),e.createElement(Et,{value:"pear"},"Pear"),e.createElement(Et,{value:"disabled",disabled:!0},"Disabled")))}}),e.createElement(B,{path:"/switch",component:function(){var t=function(e){console.log(e)};return e.createElement("div",null,e.createElement("h1",null,"我的信息开关"),e.createElement(xt,{onChange:function(e){return t(e)},size:"small"}),e.createElement(xt,{disabled:!0}),e.createElement(xt,{onChange:function(e){return t(e)},disabled:!0}),e.createElement(xt,{onChange:function(e){return t(e)},disabled:!0,defaultChecked:!0}))}}),e.createElement(B,{path:"/activity",component:function(){var t,n=0,r=1e3,a=J((0,e.useState)(!0),2),o=a[0],i=a[1],l=null,u=0;(0,e.useEffect)((function(){var e=document.querySelector(".lottery");l=null==e?void 0:e.querySelectorAll("li")}),[]);var s=function(){(r-=100)<=100&&(r=100);for(var e=0;e<l.length;e++)l[e].classList.remove("actives");++u===l.length&&(u=0,n++),l[u].classList.add("actives"),n>=7&&3===u?(clearTimeout(t),i(!0),r=500):(console.log(r,n),t=setTimeout(s,r),(n>=6||r<=100)&&(r+=300))};return e.createElement("div",null,e.createElement("h1",null,"我的活动"),e.createElement("div",{className:"luckyDraw"},e.createElement("ul",{className:"lottery"},e.createElement("li",{className:"actives"},"1"),e.createElement("li",null,"2"),e.createElement("li",null,"3"),e.createElement("li",null,"4"),e.createElement("li",null,"5"),e.createElement("li",null,"6"),e.createElement("li",null,"7"),e.createElement("li",null,"8"),e.createElement("div",{className:"dox",onClick:function(){o&&(n=0,s()),console.log("开始抽奖")}},"点击抽奖"))))}}),e.createElement(B,{path:"/longList",component:function(){var t=Array.from({length:100},(function(e,t){return t})),n=((0,e.useRef)(),(0,e.useRef)());return(0,e.useEffect)((function(){}),[]),e.createElement("div",null,e.createElement("h1",null,"我的信息开关"),e.createElement("div",{className:"containers",onScroll:function(e){},ref:n},t.map((function(t,n){return e.createElement("div",{className:"items",key:n},n)}))))}}))),e.createElement(Le,{className:"site-footer"},"© 白家玮"))),document.querySelector("#root"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,